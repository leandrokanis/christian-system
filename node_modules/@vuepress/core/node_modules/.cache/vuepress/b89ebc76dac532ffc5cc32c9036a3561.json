{"remainingRequest":"/Users/leandrokanis/christian-system/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/leandrokanis/christian-system/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/leandrokanis/christian-system/Part VII: Concluding Addresses/ADDRESS TO THE CITIZENS OF THE KINGDOM.md?vue&type=template&id=919fd976","dependencies":[{"path":"/Users/leandrokanis/christian-system/Part VII: Concluding Addresses/ADDRESS TO THE CITIZENS OF THE KINGDOM.md","mtime":1706587028221},{"path":"/Users/leandrokanis/christian-system/node_modules/cache-loader/dist/cjs.js","mtime":1706559905946},{"path":"/Users/leandrokanis/christian-system/node_modules/cache-loader/dist/cjs.js","mtime":1706559905946},{"path":"/Users/leandrokanis/christian-system/node_modules/babel-loader/lib/index.js","mtime":1696606865443},{"path":"/Users/leandrokanis/christian-system/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1706560022209},{"path":"/Users/leandrokanis/christian-system/node_modules/cache-loader/dist/cjs.js","mtime":1706559905946},{"path":"/Users/leandrokanis/christian-system/node_modules/vue-loader/lib/index.js","mtime":1706560022209},{"path":"/Users/leandrokanis/christian-system/node_modules/@vuepress/markdown-loader/index.js","mtime":1706560022604}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}