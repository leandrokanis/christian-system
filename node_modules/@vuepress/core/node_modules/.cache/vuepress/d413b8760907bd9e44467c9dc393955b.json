{"remainingRequest":"/Users/leandrokanis/christian-system/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/leandrokanis/christian-system/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/leandrokanis/christian-system/docs/Part VI: Breaking the Loaf/Proposition 6.md?vue&type=template&id=3804039c","dependencies":[{"path":"/Users/leandrokanis/christian-system/docs/Part VI: Breaking the Loaf/Proposition 6.md","mtime":1706586937985},{"path":"/Users/leandrokanis/christian-system/node_modules/cache-loader/dist/cjs.js","mtime":1706559905946},{"path":"/Users/leandrokanis/christian-system/node_modules/cache-loader/dist/cjs.js","mtime":1706559905946},{"path":"/Users/leandrokanis/christian-system/node_modules/babel-loader/lib/index.js","mtime":1696606865443},{"path":"/Users/leandrokanis/christian-system/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1706560022209},{"path":"/Users/leandrokanis/christian-system/node_modules/cache-loader/dist/cjs.js","mtime":1706559905946},{"path":"/Users/leandrokanis/christian-system/node_modules/vue-loader/lib/index.js","mtime":1706560022209},{"path":"/Users/leandrokanis/christian-system/node_modules/@vuepress/markdown-loader/index.js","mtime":1706560022604}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PHA+PGVtPjxzdHJvbmc+UHJvcG9zaXRpb24gNiDigJMgVGhlIGJyZWFraW5nIG9mIHRoZSBsb2FmIGFuZCB0aGUgICAgICBkcmlua2luZyBvZiB0aGUgY3VwIGFyZSBjb21tZW1vcmF0aXZlIG9mIHRoZSBMb3JkJ3MgZGVhdGguPC9zdHJvbmc+PC9lbT48L3A+CjxwPlVwb24gdGhlIGxvYWYgYW5kIHVwb24gdGhlIGN1cCBvZiB0aGUgTG9yZCwgaW4gbGV0dGVycyB3aGljaCBzcGVhayBub3QgIHRvICB0aGUgIGV5ZSwgIGJ1dCAgdG8gIHRoZSAgaGVhcnQgIG9mICBldmVyeSAgZGlzY2lwbGUsICBpcyAgaW5zY3JpYmVkLCAmcXVvdDs8ZW0+V2hlbiB0aGlzIHlvdSBzZWUsIHJlbWVtYmVyIG1lLjwvZW0+JnF1b3Q7IEluZGVlZCwgdGhlIExvcmQgc2F5cyB0byBlYWNoIGRpc2NpcGxlLCB3aGVuIGhlIHJlY2VpdmVzIHRoZSBzeW1ib2xzIGludG8gaGlzIGhhbmQsICdUaGlzIGlzIG15IGJvZHkgYnJva2VuIGZvciA8ZW0+eW91LjwvZW0+IFRoaXMgaXMgbXkgYmxvb2Qgc2hlZCBmb3IgPGVtPnlvdS48L2VtPicgVGhlIGxvYWYgaXMgdGh1cyAgY29uc3RpdHV0ZWQgIGEgIHJlcHJlc2VudGF0aW9uICBvZiAgaGlzICBib2R5IOKAlCBmaXJzdCAgd2hvbGUsICB0aGVuIHdvdW5kZWQgZm9yIG91ciBzaW5zLiBUaGUgY3VwIGlzIHRodXMgaW5zdGl0dXRlZCBhIHJlcHJlc2VudGF0aW9uIG9mIGhpcyBibG9vZCDigJQgb25jZSBoaXMgbGlmZSwgYnV0IG5vdyBwb3VyZWQgb3V0IHRvIGNsZWFuc2UgdXMgZnJvbSBvdXIgc2lucy4gVG8gZXZlcnkgZGlzY2lwbGUgaGUgc2F5cywgRm9yIDxlbT55b3U8L2VtPiBteSBib2R5IHdhcyB3b3VuZGVkOyBmb3IgPGVtPnlvdTwvZW0+IG15IGxpZmUgd2FzIHRha2VuLiBJbiByZWNlaXZpbmcgaXQgdGhlIGRpc2NpcGxlIHNheXMsICZxdW90O0xvcmQsIEkgYmVsaWV2ZSBpdC4gTXkgbGlmZSBzcHJ1bmcgZnJvbSB0aHkgc3VmZmVyaW5nOyAgbXkgam95IGZyb20gdGh5IHNvcnJvd3M7IGFuZCBteSBob3BlIG9mIGdsb3J5IGV2ZXJsYXN0aW5nIGZyb20gdGh5IGh1bWlsaWF0aW9uIGFuZCAgYWJhc2VtZW50ICBldmVuICB0byAgZGVhdGguJnF1b3Q7ICBFYWNoICBkaXNjaXBsZSwgIGluICBoYW5kaW5nICB0aGUgc3ltYm9scyB0byBoaXMgZmVsbG93LWRpc2NpcGxlLCBzYXlzLCBpbiBlZmZlY3QsICZxdW90O1lvdSwgbXkgYnJvdGhlciwgb25jZSBhbiBhbGllbiwgYXJlIG5vdyBhIGNpdGl6ZW4gb2YgaGVhdmVuOyBvbmNlIGEgc3RyYW5nZXIsIGFyZSBub3cgYnJvdWdodCBob21lIHRvIHRoZSBmYW1pbHkgb2YgR29kLiBZb3UgaGF2ZSBvd25lZCBteSBMb3JkIGFzIHlvdXIgTG9yZCwgbXkgcGVvcGxlIGFzIHlvdXIgcGVvcGxlLiBVbmRlciBKZXN1cyB0aGUgTWVzc2lhaCB3ZSBhcmUgb25lLiBNdXR1YWxseSBlbWJyYWNlZCBpbiB0aGUgZXZlcmxhc3RpbmcgYXJtcywgSSBlbWJyYWNlIHlvdSBpbiBtaW5lOiB0aHkgc29ycm93cyBzaGFsbCBiZSBteSBzb3Jyb3dzLCBhbmQgdGh5IGpveXMgbXkgam95cy4gSm9pbnQgZGVidG9ycyB0byB0aGUgZmF2b3Igb2YgR29kIGFuZCB0aGUgbG92ZSBvZiBKZXN1cywgd2Ugc2hhbGwgam9pbnRseSBzdWZmZXIgd2l0aCBoaW0sIHRoYXQgd2UgbWF5IGpvaW50bHkgcmVpZ24gd2l0aCBoaW0uIExldCB1cywgdGhlbiwgcmVuZXcgb3VyIHN0cmVuZ3RoLCByZW1lbWJlciBvdXIgS2luZywgYW5kIGhvbGQgZmFzdCBvdXIgYm9hc3RlZCBob3BlIHVuc2hha2VuIHRvIHRoZSBlbmQuJnF1b3Q7PC9wPgo8dWw+CjxsaT5CbGVzdCBiZSB0aGUgdGllIHRoYXQgYmluZHM8L2xpPgo8L3VsPgo8cD48Y29kZT48L2NvZGU+T3VyIGhlYXJ0cyBpbiBDaHJpc3RpYW4gbG92ZTs8L3A+CjxwPjxjb2RlPjwvY29kZT5UaGUgZmVsbG93c2hpcCBvZiBraW5kcmVkIG1pbmRzICAgIElzIGxpa2UgdG8gdGhhdCBhYm92ZS4mcXVvdDs8L3A+CjxwPjxjb2RlPjwvY29kZT5IZXJlICBoZSAga25vd3MgIG5vICBtYW4gIGFmdGVyICB0aGUgIGZsZXNoLiAgVGllcyAgdGhhdCAgc3ByaW5nICBmcm9tIGV0ZXJuYWwgbG92ZSwgcmV2ZWFsZWQgaW4gYmxvb2QsIGFuZCBhZGRyZXNzZWQgdG8gaGlzIHNlbnNlcywgZHJhdyBmb3J0aCBhbGwgdGhhdCBpcyB3aXRoaW4gaGltIG9mIGNvbXBsYWNlbnQgYWZmZWN0aW9uIGFuZCBmZWVsaW5nLCB0byB0aG9zZSBqb2ludCBoZWlycyB3aXRoIGhpbSBvZiB0aGUgZ3JhY2Ugb2YgZXRlcm5hbCBsaWZlLiBXaGlsZSBpdCByZXByZXNlbnRzIHRvIGhpbSAnPGVtPnRoZSBicmVhZCBvZiBsaWZlPC9lbT4nIOKAlCBhbGwgdGhlIHNhbHZhdGlvbiBvZiB0aGUgTG9yZCDigJQgaXQgaXMgdGhlIHN0cmVuZ3RoIG9mIGhpcyBmYWl0aCwgdGhlIGpveSBvZiBoaXMgaG9wZSwgYW5kIHRoZSBsaWZlIG9mIGhpcyBsb3ZlLjEzPC9wPgo8cD5UaGlzICBpbnN0aXR1dGlvbiAgY29tbWVtb3JhdGVzICB0aGUgIGxvdmUgIHdoaWNoICByZWNvbmNpbGVkICB1cyAgdG8gR29kLCBhbmQgYWx3YXlzIGZ1cm5pc2hlcyB1cyB3aXRoIGEgbmV3IGFyZ3VtZW50IHRvIGxpdmUgZm9yIGhpbSB3aG8gZGllZCBmb3IgdXMuIEhpbSB3aG8gZmVlbHMgbm90IHRoZSBlbG9xdWVuY2UgYW5kIHBvd2VyIG9mIHRoaXMgYXJndW1lbnQsIGFsbCBvdGhlciBhcmd1bWVudHMgYXNzYWlsIGluIHZhaW4uIEdvZCdzIGdvb2RuZXNzLCBkZXZlbG9wZWQgaW4gY3JlYXRpb24gYW5kIGluIGhpcyBwcm92aWRlbmNlLCBpcyB3ZWxsIGRlc2lnbmVkIHRvIGxlYWQgbWVuIHRvIHJlZm9ybWF0aW9uLiBCdXQgdGhlIGhlYXJ0LCBvbiB3aGljaCB0aGVzZSBmYWlsLCBhbmQgdG8gd2hpY2ggIENhbHZhcnkgIGFwcGVhbHMgIGluICB2YWluLCAgaXMgIHBhc3QgIGZlZWxpbmcsICBvYmR1cmF0ZSwgIGFuZCBpcnJlY2xhaW1hYmxlLCBiZXlvbmQgdGhlIG9wZXJhdGlvbiBvZiBhbnkgbW9yYWwgcG93ZXIga25vd24gdG8gbW9ydGFsIG1hbi48L3A+CjxwPkV2ZXJ5IHRpbWUgdGhlIGRpc2NpcGxlcyBhc3NlbWJsZSBhcm91bmQgdGhlIExvcmQncyB0YWJsZSwgdGhleSBhcmUgZnVybmlzaGVkIHdpdGggYSBuZXcgYXJndW1lbnQgYWxzbyBhZ2FpbnN0IHNpbiwgYXMgd2VsbCBhcyB3aXRoIGEgbmV3IHByb29mIG9mIHRoZSBsb3ZlIG9mIEdvZC4gSXQgaXMgYXMgd2VsbCBpbnRlbmRlZCB0byBjcnVjaWZ5IHRoZSB3b3JsZCBpbiBvdXIgaGVhcnRzLCBhcyB0byBxdWlja2VuIHVzIHRvIEdvZCwgYW5kIHRvIGRpZmZ1c2UgaGlzIGxvdmUgd2l0aGluIHVzLiBIZW5jZSBpdCBtdXN0IGluIHJlYXNvbiBiZSBhIHN0YXRlZCBwYXJ0IG9mIHRoZSBDaHJpc3RpYW4gd29yc2hpcCwgIGluICBhbGwgIENocmlzdGlhbiAgYXNzZW1ibGllczsgIHdoaWNoICBsZWFkcyAgdXMgIHRvICBzdGF0ZSwgaWxsdXN0cmF0ZSwgYW5kIHN1c3RhaW4gdGhlIGZvbGxvd2luZyBjYXBpdGFsIHByb3Bvc2l0aW9uLCB0byB3aGljaCB0aGUgcHJlY2VkaW5nIHNpeCBhcmUgYWxsIHByZWxpbWluYXJ5LjwvcD4KPC9Db250ZW50U2xvdHNEaXN0cmlidXRvcj4K"},null]}