{"remainingRequest":"/Users/leandrokanis/christian-system/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/leandrokanis/christian-system/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/leandrokanis/christian-system/docs/Part I: The Christian System/8. The Purposes of God Concerning Man.md?vue&type=template&id=7c1315f8","dependencies":[{"path":"/Users/leandrokanis/christian-system/docs/Part I: The Christian System/8. The Purposes of God Concerning Man.md","mtime":1706580051133},{"path":"/Users/leandrokanis/christian-system/node_modules/cache-loader/dist/cjs.js","mtime":1706559905946},{"path":"/Users/leandrokanis/christian-system/node_modules/cache-loader/dist/cjs.js","mtime":1706559905946},{"path":"/Users/leandrokanis/christian-system/node_modules/babel-loader/lib/index.js","mtime":1696606865443},{"path":"/Users/leandrokanis/christian-system/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1706560022209},{"path":"/Users/leandrokanis/christian-system/node_modules/cache-loader/dist/cjs.js","mtime":1706559905946},{"path":"/Users/leandrokanis/christian-system/node_modules/vue-loader/lib/index.js","mtime":1706560022209},{"path":"/Users/leandrokanis/christian-system/node_modules/@vuepress/markdown-loader/index.js","mtime":1706560022604}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}