{"remainingRequest":"/Users/leandrokanis/christian-system/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/leandrokanis/christian-system/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/leandrokanis/christian-system/Part V: Regeneration/1. Regeneration.md?vue&type=template&id=d14276d4","dependencies":[{"path":"/Users/leandrokanis/christian-system/Part V: Regeneration/1. Regeneration.md","mtime":1706586277007},{"path":"/Users/leandrokanis/christian-system/node_modules/cache-loader/dist/cjs.js","mtime":1706559905946},{"path":"/Users/leandrokanis/christian-system/node_modules/cache-loader/dist/cjs.js","mtime":1706559905946},{"path":"/Users/leandrokanis/christian-system/node_modules/babel-loader/lib/index.js","mtime":1696606865443},{"path":"/Users/leandrokanis/christian-system/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1706560022209},{"path":"/Users/leandrokanis/christian-system/node_modules/cache-loader/dist/cjs.js","mtime":1706559905946},{"path":"/Users/leandrokanis/christian-system/node_modules/vue-loader/lib/index.js","mtime":1706560022209},{"path":"/Users/leandrokanis/christian-system/node_modules/@vuepress/markdown-loader/index.js","mtime":1706560022604}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PG9sPgo8bGk+UmVnZW5lcmF0aW9uPC9saT4KPC9vbD4KPHVsPgo8bGk+SSBjcmVhdGUgTmV3IEhlYXZlbnMgYW5kIGEgTmV3PC9saT4KPC91bD4KPHA+PGNvZGU+PC9jb2RlPklzYSA2NToxOC4gRWFydGguJnF1b3Q7PC9wPgo8dWw+CjxsaT5CZWhvbGQsIEkgbWFrZSBhbGwgdGhpbmdzIG5ldy4mcXVvdDsgICBSZXYuIDIxOjUuPC9saT4KPC91bD4KPHA+PGNvZGU+PC9jb2RlPldlICBpbnRlbmQgIGFuICBlc3NheSAgb2YgICZxdW90O3RoZSAgc2VlZHMgIG9mICB0aGluZ3MuJnF1b3Q7ICBUaGUgIHRvcGljICBpcyAgYSBjb21tb24gb25lLCBhIGZhbWlsaWFyIG9uZSwgYW5kIHlldCBhbiBpbnRlcmVzdGluZyBvbmUuIE11Y2ggaGFzIGJlZW4gc2FpZCwgbXVjaCBoYXMgYmVlbiB3cml0dGVuIHVwb24gaXQ7IGFuZCB5ZXQgaXQgaXMgbm8gYmV0dGVyIHVuZGVyc3Rvb2QgdGhhbiBpdCBvdWdodCB0byBiZS4gRmV3IGdpdmUgdGhlbXNlbHZlcyB0aGUgdHJvdWJsZSBvZiB0aGlua2luZyBtdWNoIG9uIHRoZSB0aGluZ3Mgd2hpY2ggdGhleSB0aGluayB0aGV5IHVuZGVyc3RhbmQ7IGFuZCBtYW55IHdvdWxkIHJhdGhlciBmb2xsb3cgdGhlIHRob3VnaHRzIG9mIG90aGVycywgdGhhbiB0aGluayBmb3IgdGhlbXNlbHZlcy4gU3VzcGVuc2UgaXMgcGFpbmZ1bCwgbXVjaCBzdHVkeSBpcyBhIHdlYXJpbmVzcyBvZiB0aGUgZmxlc2g7IGFuZCwgdGhlcmVmb3JlLCB0aGUgbWFqb3JpdHkgYXJlIGNvbnRlbnQgd2l0aCB0aGUgdmlld3MgYW5kIG9waW5pb25zIGhhbmRlZCB0byB0aGVtIGZyb20gdGhvc2Ugd2hvIGhhdmUgZ29uZSBiZWZvcmUuPC9wPgo8cD5XZSAgd2lzaCAgdG8gIHRyZWF0ICB0aGlzICBzdWJqZWN0ICBhcyAgaWYgIGl0ICB3ZXJlICBhICBuZXcgIG9uZTsgIGFuZCAgdG8gZXhhbWluZSBpdCBub3csIGFzIGlmIHdlIGhhZCBuZXZlciBleGFtaW5lZCBpdCBiZWZvcmUuIEl0IGlzIHdvcnRoeSBvZiBpdC4gR2VuZXJhdGlvbiBpcyBmdWxsIG9mIHdvbmRlcnMsIGZvciBpdCBpcyBmdWxsIG9mIEdvZCdzIHBoeXNpY2FsIGdyYW5kZXVyOyAgeWV0ICByZWdlbmVyYXRpb24gIGlzICBzdGlsbCAgbW9yZSAgYWRtaXJhYmxlLCAgZm9yICBpbiAgaXQgIHRoZSBtb3JhbCBhdHRyaWJ1dGVzIG9mIEplaG92YWggYXJlIGRpc3BsYXllZC4gQnV0ICB3ZSBhaW0gbm90ICBhdCBhIGRldmVsb3BtZW50IG9mIGl0cyB3b25kZXJzLCBidXQgYXQgYSBwbGFpbiBjb21tb24gc2Vuc2Ugc2NyaXB0dXJhbCBleHBvc2l0aW9uIG9mIGl0cyBpbXBvcnQuPC9wPgo8cD5XZSAgaGF2ZSAgbm90ICBsZWFybmVkICBvdXIgIHRoZW9sb2d5ICBmcm9tICBBdGhhbmFzaXVzLCAgbm9yICBvdXIgbW9yYWxpdHkgZnJvbSBTZW5lY2E7IGFuZCwgdGhlcmVmb3JlLCB3ZSBzaGFsbCBub3QgY2FsbCB1cG9uIHRoZW0gZm9yICBpbGx1c3RyYXRpb24sICBhcmd1bWVudCwgIG9yICBwcm9vZi4gIFRvICB0aGUgIFNhY3JlZCAgUmVjb3JkcywgIGluIHdoaWNoIGFsb25lIENocmlzdGlhbml0eSB5ZXQgcmVtYWlucyBpbiBhbGwgaXRzIGZyZXNobmVzcywgd2UgbG9vayBmb3IgbGlnaHQ7IGFuZCB0aGl0aGVyIHdvdWxkIHdlIGRpcmVjdCB0aGUgZXllcyBvZiB0aGUgcmVhZGVycy4gSXQgaXMgbm90IHRoZSByZWdlbmVyYXRpb24gb2YgdGhlIHNjaG9vbHMgaW4gd2hpY2ggQ2hyaXN0aWFuaXR5IGhhcyBiZWVuIGxvd2VyZWQsIG1pc2FwcHJlaGVuZGVkLCBvYnNjdXJlZCwgYW5kIGFkdWx0ZXJhdGVkLCBvZiB3aGljaCB3ZSBhcmUgdG8gd3JpdGU7IGJ1dCB0aGF0IHJlZ2VuZXJhdGlvbiBvZiB3aGljaCBKZXN1cyBzcG9rZSwgYW5kIHRoZSBBcG9zdGxlcyB3cm90ZS48L3A+CjxwPkEgIGZldyAgdGhpbmdzICBtdXN0ICBiZSAgcHJlbWlzZWQg4oCUIGEgIGZldyAgZ2VuZXJhbCAgdmlld3MgZXhwcmVzc2VkIOKAlCBiZWZvcmUgd2UsIG9yIG91ciByZWFkZXJzLCBhcmUgcHJlcGFyZWQgZm9yIHRoZSBtb3JlIG1pbnV0ZSBkZXRhaWxzOiBhbmQgdG8gYXBwcm9hY2ggdGhlIHN1YmplY3Qgd2l0aCBhbGwgdW5jZXJlbW9uaW91cyBkZXNwYXRjaCwgd2Ugb2JzZXJ2ZSwgdGhhdCDigJQ8L3A+CjxwPk1hbiB1bnJlZ2VuZXJhdGUgaXMgcnVpbmVkIGluIGJvZHksIHNvdWwsIGFuZCBzcGlyaXQ7IGEgZnJhaWwgYW5kIG1vcnRhbCAgY3JlYXR1cmUuICBGcm9tICBBZGFtICBoaXMgIGZhdGhlciAgaGUgIGluaGVyaXRzICBhICBzaGF0dGVyZWQgY29uc3RpdHV0aW9uLiBIZSBpcyB0aGUgY2hpbGQgb2YgYSBmYWxsZW4gcHJvZ2VuaXRvcjsgYSBzY2lvbiBmcm9tIGEgZGVnZW5lcmF0ZSBzdG9jay48L3A+CjxwPlN1cGVyaW9yIHRvIEFkYW0sIHRoZSBleGlsZSBmcm9tIEVkZW4sIGluIHBoeXNpY2FsLCBpbnRlbGxlY3R1YWwsIGFuZCBtb3JhbCBuYXR1cmUsIG5vbmUgb2YgaGlzIGRlc2NlbmRhbnRzIGNhbiByaXNlLiBJdCBpcyBub3QgaW4gbmF0dXJlIHRvIGltcHJvdmUgaXRzZWxmOyBmb3IgYWJvdmUgaXRzIGZvdW50YWluIHRoZSBzdHJlYW0gY2Fubm90IHJpc2UuICBDYWluLCAgdGhlICBmaXJzdCAgYm9ybiAgb2YgIEV2ZSwgIHdhcyAgaW4gIG5hdHVyZSAgdGhlICBpbWFnZSAgYW5kIGxpa2VuZXNzIG9mIGhpbSB0aGF0IGJlZ2F0IGhpbS4gRWR1Y2F0aW9uIGZhaWxlZCB0byBpbXByb3ZlIGhpbSwgd2hpbGUgQWJlbCwgaGlzICB5b3VuZ2VyIGJyb3RoZXIsIG9idGFpbmVkIHRoZSBleGNlbGxlbmN5IHdoaWNoIGZhaXRoIGluIEdvZCdzIHByb21pc2UgYWxvbmUgYmVzdG93cy4gVGhlIGZpcnN0IGJvcm4sIGl0IHdpbGwgYmUgY29uY2VkZWQsIHdhcyBhdCBsZWFzdCBlcXVhbCB0byBoaXMgeW91bmdlciBicm90aGVyOiBhbmQgd2hvIGNhbiBwbGVhZCB0aGF0IGluIG5hdHVyZSBoZSBleGNlbHMgRXZlJ3MgZWxkZXN0IHNvbiE8L3A+CjxwPk1hbiAgaW4gIGhpcyAgcnVpbnMgIGlzLCAgaG93ZXZlciwgIGEgIHByb3BlciAgc3ViamVjdCAgb2YgIGEgIHJlbWVkaWFsIHN5c3RlbS4gSGUgaXMgc3VzY2VwdGlibGUgb2YgcmVub3ZhdGlvbi4gVGhlcmVmb3JlIEdvZCBoYXMgcGxhY2VkIGhpbSB1bmRlciBhIHJlZ2VuZXJhdGluZyBlY29ub215LiBUaGlzIGVjb25vbXkgY29udGVtcGxhdGVzIHRoZSByZWdlbmVyYXRpb24gb2YgdGhlIHdob2xlIGh1bWFuIGNvbnN0aXR1dGlvbiwgYW5kIHByb3Bvc2VzIGFzIGl0cyBjb25zdW1tYXRpb24gdGhlIHRyYW5zZm9ybWF0aW9uIG9mIHNwaXJpdCwgc291bCwgYW5kIGJvZHkuIFRoZSBkZXN0aW55IG9mIHRoZSByZWdlbmVyYXRlIGlzIGRlc2NyaWJlZCBieSBQYXVsIGluIG9uZSBzZW50ZW5jZTogJnF1b3Q7QXMgd2Ugbm93IGJlYXIgdGhlIGltYWdlIG9mIHRoZSBlYXJ0aGx5IEFkYW0sIHdlIHNoYWxsIHRoZW4gYmVhciB0aGUgaW1hZ2Ugb2YgdGhlIGhlYXZlbmx5IEFkYW0uJnF1b3Q7PC9wPgo8cD5Hb2QncyAgb3duICBTb24gIGlzICBwcm9wb3NlZCAgYXMgIGEgIG1vZGVsLiAgQ29uZm9ybWl0eSAgdG8gIGhpbSAgaW4gZ2xvcnksIGhvbm9yLCBhbmQgaW1tb3J0YWxpdHksIGFzIHRoZSBwZXJmZWN0aW9uIG9mIHRoZSByZWdlbmVyYXRlLCBpcyB0aGUgcHJlZGVzdGluYXRpb24gb2YgaGltIHdobyBzcGVha3Mgb2YgdGhpbmdzIHRoYXQgYXJlIG5vdCwgYXMgdGhvdWdoIHRoZXkgd2VyZS48L3A+CjxwPlJlZ2VuZXJhdGlvbiBpcywgdGhlcmVmb3JlLCBtb3JhbCBhbmQgcGh5c2ljYWw6IG9yLCBpbiBvdGhlciB3b3JkcywgdGhlcmUgaXMgbm93IGEgcmVub3ZhdGlvbiBvZiB0aGUgbWluZCDigJQgb2YgdGhlIHVuZGVyc3RhbmRpbmcsIHdpbGwsIGFuZCAgYWZmZWN0aW9uczsg4oCUIGFuZCAgdGhlcmUgIHdpbGwgIGhlcmVhZnRlciAgYmUgIGEgIHJlbm92YXRpb24gIG9mICB0aGUgYm9keTogJnF1b3Q7Rm9yIHRoaXMgY29ycnVwdGlibGUgYm9keSBzaGFsbCBwdXQgb24gaW5jb3JydXB0aW9uLCBhbmQgdGhpcyBtb3J0YWwgYm9keSBzaGFsbCBwdXQgb24gaW1tb3J0YWxpdHkuJnF1b3Q7PC9wPgo8cD5UaGUgcmVub3ZhdGlvbiBvZiB0aGUgbWluZCBhbmQgY2hhcmFjdGVyIGlzLCB0aGVyZWZvcmUsIHRoYXQgbW9yYWwgcmVnZW5lcmF0aW9uICB3aGljaCAgaXMgIHRvICBiZSAgZWZmZWN0ZWQgIGluICB0aGlzICBsaWZlOyAgZm9yICB3aGljaCAgdGhlIHJlbWVkaWFsIHN5c3RlbSwgb3Iga2luZ2RvbSBvZiBoZWF2ZW4sIHdhcyBzZXQgdXAgb24gZWFydGg7IGFuZCB0aGlzLCB0aGVyZWZvcmUsIGZpcnN0IG9mIGFsbCwgZGVtYW5kcyBvdXIgYXR0ZW50aW9uLjwvcD4KPHA+QmVmb3JlIHdlIGF0dGVtcHQgYW4gYW5zd2VyIGluIGRldGFpbCB0byB0aGUgcXVlc3Rpb24sIDxlbT5Ib3cgaXMgdGhpcyBtb3JhbCByZWdlbmVyYXRpb24gZWZmZWN0ZWQ/PC9lbT4gd2Ugc2hhbGwgYXR0ZW5kIHRvIHRoZSBwcmluY2lwbGUgb24gd2hpY2ggdGhlIHdob2xlIHJlbWVkaWFsIHN5c3RlbSBwcm9jZWVkcy4gVGhlIGdyYW5kIHByaW5jaXBsZSwgb3IgbWVhbnMgIHdoaWNoICBHb2QgIGhhcyAgYWRvcHRlZCAgZm9yICB0aGUgIGFjY29tcGxpc2htZW50ICBvZiAgdGhpcyBtb3JhbCByZWdlbmVyYXRpb24sIGlzIHRoZSBmdWxsIGRlbW9uc3RyYXRpb24gYW5kIHByb29mIG9mIGEgc2luZ2xlIHByb3Bvc2l0aW9uICBhZGRyZXNzZWQgIHRvICB0aGUgIHJlYXNvbiAgb2YgIG1hbi4gIFRoaXMgIHN1YmxpbWUgcHJvcG9zaXRpb24gaXMsIDxzdHJvbmc+dGhhdDwvc3Ryb25nPiA8c3Ryb25nPkdvZCBpcyBsb3ZlPC9zdHJvbmc+LjwvcD4KPHA+VGhlIHJlYXNvbiBhbmQgIHdpc2RvbSBvZiB0aGlzICBwcm9jZWR1cmUgd2lsbCAgc3VnZ2VzdCAgaXRzZWxmIHRvIGV2ZXJ5ICBvbmUsICB3aG8gIGNhbiAgdW5kZXJzdGFuZCAgdGhlICB2aWV3cyAgYW5kICBmZWVsaW5ncyAgb2YgIGFsbCB1bnJlZ2VuZXJhdGVkICBtYW4uICBNYW4gIGluICBhICBzdGF0ZSAgb2YgIGFsaWVuYXRpb24gIGFuZCAgcmViZWxsaW9uLCBuYXR1cmFsbHkgc3VzcGVjdHMsIHRoYXQgaWYgaGUgYmUgYSBzaW5uZXIsIGFuZCBpZiBHb2QgaGF0ZSBzaW4sIGhlIG11c3QgaGF0ZSBoaW0uIEFzIGxvdmUgYmVnZXRzIGxvdmU7IHNvIGhhdHJlZCBiZWdldHMgaGF0cmVkOyBhbmQgaWYgYSBzaW5uZXIgc3VzcGVjdHMgdGhhdCBHb2QgaGF0ZXMgaGltLCBoZSBjYW5ub3QgbG92ZSBHb2QuIEhlIG11c3Qga25vdyB0aGF0IEdvZCBsb3ZlcyBoaW0sIGJlZm9yZSBoZSBjYW4gYmVnaW4gdG8gbG92ZSBHb2QuICZxdW90O1dlLCZxdW90OyBzYXlzICBhbiAgQXBvc3RsZSwgICZxdW90O2xvdmUgIEdvZCAgYmVjYXVzZSAgaGUgIGZpcnN0ICBsb3ZlZCAgdXMuJnF1b3Q7IOKAlCBXaGlsZSBhbGllbmF0ZWQgIGluICBoZWFydCwgIHRocm91Z2ggIHRoZSAgbmF0aXZlICBkYXJrbmVzcyAgb2YgIGhpcyB1bmRlcnN0YW5kaW5nLCB0aGUgc2lubmVyIG1pc2ludGVycHJldHMgZXZlcnkgcmVzdHJhaW50IHdoaWNoIEdvZCBoYXMgcGxhY2VkIGluIGhpcyB3YXkgdG8gcHJldmVudCBoaXMgdG90YWwgcnVpbiwgYXMgaW5kaWNhdGlvbnMgb2YgdGhlIHdyYXRoICBvZiAgSGVhdmVuLiAgSGlzICB0cmFuc2dyZXNzaW9uICBvZiAgdGhlc2UgIHJlc3RyYWludHMsICBhbmQgIGhpcyBjb25zY2lvdXNuZXNzIG9mIGhhdmluZyBkZWZpZWQgdGhlIHZlcmFjaXR5IGFuZCBwb3dlciBvZiBHb2QsIG9ubHkgaW5jcmVhc2UgaGlzIGVubWl0eSwgYW5kIHVyZ2UgaGltIG9ud2FyZCB0byBoaXMgYXBvc3Rhc3kgYW5kIHdhbmRlcmluZ3MgIGZyb20gIGhpcyAgQ3JlYXRvci4gIFRoZSAgZ29vZG5lc3MgIG9mICBHb2QgIGJlaW5nIG1pc3VuZGVyc3Rvb2QsIGZ1cm5pc2hlcyB0byAgaGltICBubyBpbmNlbnRpdmUgdG8gcmVwZW50YW5jZSBhbmQgcmVmb3JtYXRpb24uIEd1aWx0LCBhbmQgZmVhciwgYW5kIHNoYW1lLCB0aGUgZnJ1aXRzIG9mIGhpcyBhcG9zdGFzeSwgYmVjbG91ZCAgaGlzICB1bmRlcnN0YW5kaW5nLCAgYW5kICB2ZWlsICBmcm9tICBoaXMgIGV5ZXMgIGFsbCAgdGhlIGRlbW9uc3RyYXRpb25zICBvZiAgYmVuZXZvbGVuY2UgIGFuZCAgZ29vZG5lc3MsICB3aXRoICB3aGljaCAgdGhlIGNyZWF0aW9uIGFib3VuZHMuIEFkYW0gdW5kZXIgYSB0cmVlLCBoaWRpbmcgZnJvbSBHb2QsIHRyZW1ibGluZyB3aXRoIGZlYXIsIHN1c3BpY2lvdXMgb2YgdGhlIG1vdmVtZW50cyBvZiBldmVyeSBsZWFmLCBhbmQgY292ZXJlZCB3aXRoIHNoYW1lIGFzIGEgZ2FybWVudCwgaXMgYm90aCBhbiBpbGx1c3RyYXRpb24gYW5kIHByb29mIG9mIHRoZXNlIHZpZXdzIG9mIHRoZSBzdGF0ZSBvZiBtaW5kLCB3aGljaCBvYnRhaW5zIGluIHRoZSB1bnJlZ2VuZXJhdGUuPC9wPgo8cD5OZWl0aGVyIHRoZSB2b2x1bWUgb2YgY3JlYXRpb24sIG5vciB0aGF0IG9mIEdvZCdzIHByb3ZpZGVuY2UsIGlzIHN1ZmZpY2llbnQgdG8gcmVtb3ZlIGZyb20gdGhlIG5hdHVyYWwgbWFuIHRoZXNlIG1pc2NvbmNlcHRpb25zIGFuZCB0aGUgY29uc2VxdWVudCBhbGllbmF0aW9uIG9mIGhlYXJ0LiBUaGUgYmVzdCBwcm9vZiB0aGF0IHRoZXNlIHR3byB2b2x1bWVzIGNhbm5vdCBkbyB0aGlzLCBpcywgdGhhdCB0aGV5IG5ldmVyIGhhdmUsIGluIGFueSBvbmUgaW5zdGFuY2UsIHlldCBkb25lIGl0LiBGcm9tIHRoZSBuYXR1cmUgb2YgdGhpbmdzIGl0IGlzIGluZGVlZCBldmlkZW50IHRoYXQgdGhleSBjYW5ub3QgZG8gaXQuIFRoZSBlbGVtZW50cyBhcmUgdG9vIG9mdGVuIGF0IHdhciB3aXRoIHRoZSBoYXBwaW5lc3Mgb2YgbWFuLiBUaGUgZXZlciBjaGFuZ2luZyBhdHRpdHVkZSBvZiB0aGUgbmF0dXJhbCB3b3JsZCBpbiAgcmVmZXJlbmNlICB0byAgaGVhbHRoLCAgYW5kICBsaWZlLCAgYW5kICBjb21mb3J0LCAgcmVuZGVyICBpdCAgYXQgIGJlc3QgZG91YnRmdWwsIHdoZXRoZXIgdGhlIGxhd3Mgb2YgbmF0dXJlLCB3aGljaCB1bHRpbWF0ZWx5IGJyaW5nIG1hbiBkb3duIHRvIHRoZSBncmF2ZSwgYXJlIHRoZSBlZmZlY3Qgb2YgYmVuZXZvbGVuY2UsIG9yIG9mIG1hbGV2b2xlbmNlIHRvd2FyZHMgbWFua2luZC4gQSB0aGlyZCB2b2x1bWUgZXhwbGFuYXRvcnkgb2YgYm90aCwgYW5kIHJlcGxldGUgYWxzbyAgd2l0aCAgc3VwZXJuYXR1cmFsICBkZXZlbG9wbWVudHMsICBpcyAgd2FudGluZywgIHRvICBmdXJuaXNoICB0aGUgbW9zdCBkaWxpZ2VudCBzdHVkZW50IG9mIG5hdHVyZSBhbmQgcHJvdmlkZW5jZSwgd2l0aCB0aGUgbWVhbnMgb2YgbGVhcm5pbmcgdGhlIHRydWUgYW5kIGZ1bGwgY2hhcmFjdGVyIG9mIGhpbSwgYWdhaW5zdCB3aG9tIHdlIGhhdmUgcmViZWxsZWQuPC9wPgo8cD5UaGF0IHZvbHVtZSBpcyB0aGUgQmlibGUuIEhvbHkgUHJvcGhldHMgYW5kIEFwb3N0bGVzIHNwYWtlIGFzIHRoZXkgd2VyZSBtb3ZlZCBieSB0aGUgU3Bpcml0IG9mIEtub3dsZWRnZSBhbmQgUmV2ZWxhdGlvbi4gSXRzIHJlY29yZHMsICBpdHMgIGhpc3RvcnksICBpdCAgcHJvcGhlY3ksICBpdHMgIHByZWNlcHRzLCAgaXRzICBsYXdzLCAgaXRzIG9yZGluYW5jZXMsIGFuZCBpdHMgZXhhbXBsZXMsIGFsbCBkZXZlbG9wIGFuZCByZXZlYWwgR29kIHRvIG1hbiwgYW5kIG1hbiB0byBoaW1zZWxmLjwvcD4KPHA+QnV0IGl0IGlzIGluIHRoZSBwZXJzb24gYW5kIG1pc3Npb24gb2YgdGhlIDxzdHJvbmc+SW5jYXJuYXRlPC9zdHJvbmc+IDxzdHJvbmc+V29yZDwvc3Ryb25nPiwgdGhhdCB3ZSBsZWFybiB0aGF0IDxlbT5Hb2QgaXMgbG92ZS48L2VtPiBUaGF0IEdvZCBnYXZlIGhpcyBTb24gZm9yIHVzLCBhbmQgeWV0IGdpdmVzIGhpcyBTcGlyaXQgdG8gdXMg4oCUIGFuZCB0aGlzIGdpdmVzIHVzIGhpbXNlbGYg4oCUIGFyZSB0aGUgbXlzdGVyaW91cyBhbmQgdHJhbnNjZW5kZW50IHByb29mcyBvZiB0aGUgbW9zdCBhdWd1c3QgcHJvcG9zaXRpb24gaW4gdGhlIHVuaXZlcnNlLiBUaGUgZ29zcGVsLCBIZWF2ZW4ncyAgd2lzZG9tIGFuZCBwb3dlciBjb21iaW5lZCwgR29kJ3Mgb3duIGV4cGVkaWVudCBmb3IgdGhlIHJlbm92YXRpb24gb2YgaHVtYW4gbmF0dXJlLCBpcyBuZWl0aGVyIG1vcmUgbm9yIGxlc3MsIHRoYW4gdGhlIGlsbHVzdHJhdGlvbiBhbmQgcHJvb2Ygb2YgdGhpcyByZWdlbmVyYXRpbmcgcHJvcG9zaXRpb24uPC9wPgo8cD5UaHVzICB3ZSAgaGFzdGVuICB0byAgb3VyICBzdWJqZWN0LiAgSGF2aW5nICBnbGFuY2VkICBhdCAgdGhlICBncmVhdCBsYW5kbWFya3Mgb2YgdGhlIHBsYW50YXRpb25zIG9mIG5hdHVyZSBhbmQgZ3JhY2UsIG5vdyB0aGF0IHdlIG1heSwgaW4gdGhlIGxpZ2h0IG9mIHRydXRoLCBhc2NlcnRhaW4gdGhlIHRydWUgYW5kIGhlYXZlbi10YXVnaHQgZG9jdHJpbmUgb2YgcmVnZW5lcmF0aW9uLCB3ZSBzaGFsbCBjYXV0aW91c2x5IHN1cnZleSB0aGUgd2hvbGUgcHJvY2VzcywgYXMgZGV2ZWxvcGVkIGJ5IHRoZSBjb21taXNzaW9uZWQgdGVhY2hlcnMgb2YgdGhlIGRlZXAgY291bnNlbHMgb2YgdGhlIG9ubHkgdHJ1ZSBHb2QuPC9wPgo8cD5UaGUgIGNlcnRhaW4gIHRoaW5ncywgIHBhcnRzICBvZiAgdGhpcyAgZ3JlYXQgIHByb2dyZXNzLCAgbWF5ICBiZSAgd2VsbCB1bmRlcnN0b29kLCBjZXJ0YWluIHRlcm1zLCB3aGljaCBhcmUgd29udCB0byB1c2UgdG8gcmVwcmVzZW50IHRoZW0sIG11c3QgYmUgd2VsbCBkZWZpbmVkLCBhbmQgYWNjdXJhdGVseSBhcHByZWhlbmRlZC4gVGhlc2UgdGVybXMgYXJlICpGYWN0LCAgVGVzdGltb255LCAgRmFpdGgsICBSZXBlbnRhbmNlLCAgUmVmb3JtYXRpb24sICBCYXRoICBvZiBSZWdlbmVyYXRpb24sIE5ldyBCaXJ0aCwgUmVuZXdpbmcgb2YgdGhlIEhvbHkgU3Bpcml0LCBOZXduZXNzIG9mIExpZmUuKjE8L3A+CjxwPiZxdW90O0FsbCB0aGluZ3MgYXJlIG9mIEdvZCZxdW90OyBpbiB0aGUgcmVnZW5lcmF0aW9uIG9mIG1hbiwgaXMgb3VyIG1vdHRvOyBiZWNhdXNlIG91ciBBcG9zdGxlIGFmZmlybWVkIHRoaXMgYXMgYSBjYXJkaW5hbCB0cnV0aC4gSGUgaXMgdGhlIGF1dGhvciBvZiB0aGUgPGVtPmZhY3RzPC9lbT4gYW5kIG9mIHRoZSA8ZW0+dGVzdGltb255PC9lbT4gd2hpY2ggZGVjbGFyZXMgdGhlbTsgYW5kIGJlaW5nICB0aGUgIGF1dGhvciAgb2YgIHRoZXNlLCAgaGUgIGlzICB0aGUgIGF1dGhvciAgb2YgIGFsbCAgdGhlICBlZmZlY3RzIHByb2R1Y2VkIGJ5IHRoZXNlIGZhY3RzLiBUaGUgQ2hyaXN0aWFuIGlzIGEgbmV3IDxlbT5jcmVhdGlvbiw8L2VtPiBvZiB3aGljaCBHb2QgaXMgdGhlIDxlbT5DcmVhdG9yLjwvZW0+IFRoZSBjaGFuZ2Ugb2YgaGVhcnQgYW5kIG9mIGNoYXJhY3Rlciwgd2hpY2ggY29uc3RpdHV0ZSBtb3JhbCByZWdlbmVyYXRpb24sIGlzIHRoZSBsZWdpdGltYXRlIGltcHJlc3Npb24gb2YgdGhlIGZhY3RzLCBvciB0aGluZ3Mgd2hpY2ggR29kIGhhcyB3cm91Z2h0LiBUaGUgZmFjdHMgY29uc3RpdHV0ZSB0aGUgbW9yYWwgIHNlYWwgIHdoaWNoICBzdGFtcHMgIHRoZSAgaW1hZ2UgIG9mICBHb2QgIHVwb24gIG1hbi4gIEluICB0aGUgbmF0dXJhbCBvcmRlciwgd2UgbXVzdCBwbGFjZSB0aGVtIGZpcnN0LCBhbmQsIHRoZXJlZm9yZSwgd2UgbXVzdCBmaXJzdCBkZWZpbmUgdGhlIHRlcm0uPC9wPgo8cD48ZW0+PHN0cm9uZz5SZXBlbnRhbmNlPC9zdHJvbmc+PC9lbT48L3A+CjxwPlJlcGVudGFuY2UgaXMgdXN1YWxseSBkZWZpbmVkICZxdW90OzxlbT5zb3Jyb3cgZm9yIGFueXRoaW5nIHRoYXQgaXMgcGFzdDs8L2VtPiZxdW90OyBhbmQgaW4gdGhlIHJlbGlnaW91cyB2b2NhYnVsYXJ5IGl0IGlzIHNpbXBseSAmcXVvdDs8ZW0+c29ycm93IGZvciBzaW4uPC9lbT4mcXVvdDsgVGhpcyBpcyBvbmUsIGJ1dCBpdCBpcyBvbmx5IG9uZSBvZiB0aGUgbmF0dXJhbCBlZmZlY3RzIG9mIHRoZSBiZWxpZWYgb2YgdGhlIHRlc3RpbW9ueSAgb2YgIEdvZC4gIFRoZSAgZ29zcGVsICBmYWN0cywgIHRlc3RpbW9ueSwgIGFuZCAgZmFpdGgsIGNvbnRlbXBsYXRlIG1vcmUgdGhhbiB0aGlzLiBCdXQgeWV0IGl0IGlzIG5lY2Vzc2FyeSB0aGF0IHRoaXMgcG9pbnQgb2YgZmFpdGggc2hvdWxkIGJlIGRpc3RpbmN0bHkgYXBwcmVoZW5kZWQsIGVzcGVjaWFsbHkgaW4gdGhpcyBhZ2UsIHdoZW4gaXQgb2NjdXBpZXMgc28gbGFyZ2UgYSBzcGFjZSBpbiB0aGUgc3lzdGVtcyBvZiB0aGVvbG9neS48L3A+CjxwPlJlcGVudGFuY2UsICBpbiAgb3VyICBjdXJyZW50ICBhY2NlcHRhdGlvbiwgIGlzICBzb3Jyb3cgIGZvciAgc2luOyAgYW5kIGNlcnRhaW5seSB0aGVyZSBpcyBubyBtYW4gd2hvIGJlbGlldmVzIHRoZSByZXZlYWxlZCBmYWN0cyBmb3VuZCBpbiB0aGUgIHRlc3RpbW9ueSAgb2YgIEdvZCwgIHdobyAgd2lsbCAgbm90ICBiZSAgc29ycnkgIGZvciAgaGlzICBzaW5zLiAgQnV0IHNpbXBsZSBzb3Jyb3cgZm9yIHRoZSBwYXN0LCBpcyBidXQgYSBmZWVsaW5nIG9mIHRoZSBoZWFydDsgd2hpY2gsIHVubGVzcyBpdCBleGNpdGUgdG8gcmVmb3JtYXRpb24gb3IgdGhlIGFiYW5kb25tZW50IG9mIHNpbiwgaXMgb2Ygbm8gbW9yZSB1c2UgdGhhbiB0aGUgcmVncmV0cyBvZiBKdWRhcyBhZnRlciBoZSBoYWQgc29sZCBoaXMgTWFzdGVyIGZvciBmaWZ0ZWVuIGRvbGxhcnMuIFJlcGVudGFuY2UgbXVzdCwgaG93ZXZlciwgcHJlY2VkZSByZWZvcm1hdGlvbjsgZm9yIHVubGVzcyB3ZSBhcmUgc29ycnkgZm9yIHRoZSBwYXN0LCBhbmQgZ3JpZXZlZCB3aXRoIG91cnNlbHZlcywgd2Ugd2lsbCAgbm90ICB0aGluayAgb2YgIGEgIGNoYW5nZSAgb2YgIGNvbmR1Y3QuICBSZXBlbnRhbmNlICBpcyAgdG8gcmVmb3JtYXRpb24sICB3aGF0ICBtb3RpdmUgIGlzICB0byAgYWN0aW9uLCAgb3IgIHJlc29sdXRpb24gIHRvICBhbnkgdW5kZXJ0YWtpbmcuIEl0IHdhcyB3ZWxsIGZvciBEYXZpZCB0byByZXNvbHZlIHRvIGJ1aWxkIHRoZSB0ZW1wbGU7IGFuZCAgc28gIGl0ICBpcyAgd2VsbCAgdG8gIGZvcm0gIGFueSAgZ29vZCAgZGVzaWduOyAgYnV0ICBtdWNoICBiZXR0ZXIgIHRvIGV4ZWN1dGUgIGl0LiAgVG8gIGZlZWwgIHNvcnJ5ICBmb3IgIHRoZSAgcG9vciAgYW5kICB0aGUgIGFmZmxpY3RlZCwgIGFuZCAgdG8gcmVzb2x2ZSB0byBhc3Npc3QgYW5kIGNvbWZvcnQgdGhlbSwgaXMgd2VsbDsgYnV0IHRvIGdvIGFuZCBkbyBpdCBpcyBiZXR0ZXI6ICBhbmQsICBpbmRlZWQgIHVubGVzcyAgb3VyICBzb3Jyb3cgIGZvciAgdGhlICBwYXN0LCAgdGVybWluYXRlICBpbiByZWZvcm1hdGlvbiBmb3IgdGhlIGZ1dHVyZSwgaXQgaXMgdXNlbGVzcyBpbiB0aGUgZXN0aW1hdGlvbiBvZiBoZWF2ZW4gYW5kIGVhcnRoOyBhcyB1c2VsZXNzIGFzIHRvIHNheSB0byB0aGUgaHVuZ3J5LCBCZSBmaWxsZWQ7IG9yIHRvIHRoZSBuYWtlZCwgQmUgY2xvdGhlZC48L3A+CjxwPkdlbnVpbmUgcmVwZW50YW5jZSBkb2VzIG5vdCBhbHdheXMgaXNzdWUgaW4gcmVmb3JtYXRpb24uIEp1ZGFzIHdhcyBzb3Jyb3dmdWwgZXZlbiB0byAgZGVhdGgsIGJ1dCBjb3VsZCBub3QgcmVmb3JtLiBNYW55IGhhdmUgYmVlbiBzbyBnZW51aW5lbHkgc29ycnkgZm9yIHRoZWlyIHNpbnMsIGFzIHRvIGJlY29tZSBzdWljaWRlcy4gU3BlYWsgd2UgIG9mICAmcXVvdDthICBnb2RseSAgc29ycm93PyZxdW90OyAgTm86ICB0aGlzICBpcyAgbm90ICB0byAgYmUgIGV4cGVjdGVkICBmcm9tIHVuY29udmVydGVkIGFuZCB1bmdvZGx5IHBlcnNvbnMuIENocmlzdGlhbnMsIFBhdWwgdGVhY2hlcywgd2hlbiB0aGV5IGVyciwgbWF5IHJlcGVudCB3aXRoIGEgZ29kbHkgc29ycm93OyBidXQgdGhpcyBpcyBub3QgdG8gYmUgZXhwZWN0ZWQgIGZyb20gIHRoZSAgdW5yZWdlbmVyYXRlLCAgb3IgIGZyb20gIHRob3NlICB3aG8gIGhhdmUgIG5vdCByZWZvcm1lZC4gSXQgaXMgbm90LCB0aGVuLCB0aGUgZ2VudWluZW5lc3Mgb2YgcmVwZW50YW5jZSB0aGF0IGlzIHRvIGJlIGFwcHJlY2lhdGVkLCAgdW5sZXNzICBieSAgZ2VudWluZSAgcmVwZW50YW5jZSAgaXMgIG1lYW50ICBtb3JlICB0aGFuIHNpbXBsZSBzb3Jyb3cgZm9yIHRoZSBwYXN0IOKAlCB1bmxlc3MgYnkgZ2VudWluZSByZXBlbnRhbmNlIGlzIG1lYW50IHJlZm9ybWF0aW9uLiAgWWV0ICB3aXRob3V0ICBzaW5jZXJlICBvciAgdW5mZWlnbmVkICByZXBlbnRhbmNlLCAgdGhlcmUgY2Fubm90IGJlIHJlYWwgb3IgZ2VudWluZSByZWZvcm1hdGlvbi48L3A+CjxwPlRoaXMgbGVhZHMgdXMgdG8gb2JzZXJ2ZSwgdGhhdCB0aGUgb25seSB1bmVxdWl2b2NhbCBldmlkZW5jZSBvZiBzaW5jZXJlIHJlcGVudGFuY2UsIGlzIHRoZSBhY3R1YWwgcmVkcmVzcyBvZiB0aGUgaW5qdXJ5IGRvbmU7IG5vdCBvbmx5IGEgY2Vzc2F0aW9uICBmcm9tICB0aGUgc2luLCAgYnV0ICBhIHJlc3RpdHV0aW9uICBmb3IgdGhlIHNpbiwgIGFzIGZhciBhcyByZXN0aXR1dGlvbiAgY2FuICBwb3NzaWJseSAgYmUgIG1hZGUuICA8ZW0+Tm8gIHJlc3RpdHV0aW9uLCAgbm8gcmVwZW50YW5jZSDigJQgcHJvdmlkZWQgIHJlc3RpdHV0aW9uICBjYW4gIGJlICBtYWRlLjwvZW0+ICBBbmQgIEkgIG1heSAgYmUgcGVybWl0dGVkICB0byAgYWRkLCAgPGVtPnRoYXQgd2l0aG91dCAgcmVwZW50YW5jZSAgYW5kICByZXN0aXR1dGlvbiwgIHdoZW4gcG9zc2libGUsIHRoZXJlIGNhbiBiZSBubyByZW1pc3Npb24uPC9lbT48L3A+CjxwPlRoZSAgcHJlYWNoZXJzICBvZiAgcmVwZW50YW5jZSDigJQgb2YgIHRoZSAgbmVjZXNzaXR5ICBvZiAgcmVwZW50YW5jZSAgaW4gb3JkZXIgdG8gcmVtaXNzaW9uLCBvdWdodCB0byBzZXQgdGhpcyBtYXR0ZXIgZmFpcmx5IGFuZCBmdWxseSBiZWZvcmUgc2lubmVycy4gRG8gdGhleSByZXByZXNlbnQgcmVwZW50YW5jZSBhcyBzb3Jyb3cgZm9yIHRoZSBwYXN0LCBhbmQgYSBkZXRlcm1pbmF0aW9uIHRvIHJlZm9ybT8gSG93IHRoZW4gd2lsbCB0aGUgc2lubmVyIGtub3cgdGhhdCBoZSBpcyBzb3JyeSBmb3IgaGlzIHNpbnMgYWdhaW5zdCBtZW4sIG9yIGhvdyB3aWxsIHRoZSBjb21tdW5pdHkga25vdyB0aGF0IGhlIGhhcyByZXBlbnRlZCBvZiBzdWNoIHNpbnMsIHVubGVzcyBmdWxsIHJlc3RpdHV0aW9uIHdhcyBtYWRlPyBJdCBpcyBpbXBvc3NpYmxlIHRoYXQgZWl0aGVyIHRoZSBzaW5uZXIgaGltc2VsZiwgb3IgdGhlIGNvbW11bml0eSB3aG8ga25vdyBoaXMgc2lucyBhZ2FpbnN0IG1hbiwgY2FuIGhhdmUgYW55IGNlcnRhaW4gZXZpZGVuY2UgdGhhdCBoZSBpcyBwZW5pdGVudCwgdW5sZXNzIGJ5IG1ha2luZyBhbGwgcG9zc2libGUgcmVzdGl0dXRpb24uPC9wPgo8cD5QZWNjYXRvciB3b3VuZGVkIHRoZSByZXB1dGF0aW9uIG9mIGhpcyBuZWlnaGJvciBIZXJtYXMsIGFuZCBvbiBhbm90aGVyICBvY2Nhc2lvbiAgZGVmcmF1ZGVkICBoaW0gIG9mICB0ZW4gIHBvdW5kcy4g4oCUIFNvbWUgIG9mICB0aGUgbmVpZ2hib3Job29kIHdlcmUgYXBwcmlzZWQgdGhhdCBoZSBoYWQgZG9uZSBib3RoLiBQZWNjYXRvciB3YXMgY29udmVydGVkIHVuZGVyIHRoZSBwcmVhY2hpbmcgb2YgUGF1bGludXMsIGFuZCwgb24gZ2l2aW5nIGluICBhIHJlbGF0aW9uICBvZiAgaGlzICBzb3Jyb3cgIGZvciAgaGlzICBzaW5zLCAgc3Bva2UgIG9mICB0aGUgIGRlcHRoICBvZiAgaGlzIGNvbnZpY3Rpb25zLCBhbmQgb2YgaGlzIGFiaG9ycmVuY2Ugb2YgaGlzIHRyYW5zZ3Jlc3Npb24uIEhlIHdhcyByZWNlaXZlZCBpbnRvIHRoZSBjb25ncmVnYXRpb24sIGFuZCBzYXQgZG93biB3aXRoIHRoZSBmYWl0aGZ1bCB0byBjb21tZW1vcmF0ZSAgdGhlICBncmVhdCAgc2luICBvZmZlcmluZy4gIEhlcm1hcyAgYW5kICBoaXMgIG5laWdoYm9ycyB3ZXJlIHdpdG5lc3NlcyBvZiBhbGwgdGhpcy4gVGhleSBzYXcgdGhhdCBQZWNjYXRvciB3YXMgcGVuaXRlbnQsIGFuZCBtdWNoIHJlZm9ybWVkIGluIGhpcyBiZWhhdmlvcjsgYnV0IHRoZXkgY291bGQgbm90IGJlbGlldmUgaGltIHNpbmNlcmUsIGJlY2F1c2UgaGUgaGFkIG1hZGUgbm8gcmVzdGl0dXRpb24uIFRoZXkgcmVnYXJkZWQgaGltIGVpdGhlciBhcyBhIGh5cG9jcml0ZSBvciBzZWxmLWRlY2VpdmVkOyBiZWNhdXNlLCBoYXZpbmcgaXQgaW4gIGhpcyBwb3dlciwgaGUgcmVwYWlkICBub3QgIHRoZSB0ZW4gcG91bmRzLCAgbm9yIG9uY2UgY29udHJhZGljdGVkIHRoZSBzbGFuZGVycyAgaGUgIGhhZCAgcHJvcGFnYXRlZC4gIFBlY2NhdG9yLCAgaG93ZXZlciwgIGZlbHQgIGxpdHRsZSBlbmpveW1lbnQgaW4gaGlzIHByb2Zlc3Npb24sIGFuZCBzb29uIGZlbGwgYmFjayBpbnRvIGhpcyBmb3JtZXIgaGFiaXRzLiBIZSBiZWNhbWUgYWdhaW4gcGVuaXRlbnQsIGFuZCBvbiBleGFtaW5pbmcgdGhlIGdyb3VuZHMgb2YgaGlzIGZhbGxpbmcgb2ZmLCBkaXNjb3ZlcmVkIHRoYXQgaGUgaGFkIG5ldmVyIGNvcmRpYWxseSB0dXJuZWQgYXdheSBmcm9tIGhpcyBzaW5zLiBPdmVyd2hlbG1lZCBpbiBzb3Jyb3cgZm9yIHRoZSBwYXN0LCBoZSByZXNvbHZlZCBvbiBnaXZpbmcgaGltc2VsZiB1cCB0byB0aGUgTG9yZDsgYW5kLCByZWZsZWN0aW5nIG9uIGhpcyBwYXN0IGxpZmUsIHNldCBhYm91dCB0aGUgd29yayBvZiByZWZvcm1hdGlvbiBpbiBlYXJuZXN0LiBIZSBjYWxsZWQgb24gSGVybWFzLCBwYWlkIGhpbSBoaXMgdGVuIHBvdW5kcywgYW5kIHRoZSBpbnRlcmVzdCBmb3IgZXZlcnkgZGF5IGhlIGhhZCBrZXB0IGl0IGJhY2ssIHdlbnQgdG8gYWxsIHRoZSBwZXJzb25zIHRvIHdob20gaGUgaGFkIHNsYW5kZXJlZCBoaW0sIHRvbGQgdGhlbSB3aGF0IGluanVzdGljZSBoZSBoYWQgZG9uZSBoaW0sIGFuZCBiZWdnZWQgdGhlbSwgaWYgdGhleSBoYWQgdG9sZCBpdCB0byBhbnkgb3RoZXIgcGVyc29ucywgdG8gY29udHJhZGljdCBpdC4gU2V2ZXJhbCBvdGhlciBwZXJzb25zIHdob20gaGUgaGFkIHdyb25nZWQgaW4gaGlzIGRlYWxpbmdzIHdpdGggdGhlbSwgaGUgYWxzbyB2aXNpdGVkOyBhbmQgZnVsbHkgcmVkcmVzc2VkIGFsbCB0aGVzZSB3cm9uZ3MgYWdhaW5zdCBoaXMgbmVpZ2hib3JzLiBIZSBhbHNvIGNvbmZlc3NlZCAgdGhlbSAgdG8gIHRoZSAgTG9yZCwgIGFuZCAgYXNrZWQgIGhpbSAgdG8gIGZvcmdpdmUgIGhpbS4gUGVjY2F0b3IgIHdhcyAgdGhlbiAgcmVzdG9yZWQgIHRvICB0aGUgIGNodXJjaDsgIGFuZCAgYmV0dGVyICBzdGlsbCwgIGhlIGVuam95ZWQgYSBwZWFjZSBvZiBtaW5kLCBhbmQgYSBjb25maWRlbmNlIGluIEdvZCwgd2hpY2ggd2FzIGEgY29udGludWFsIGZlYXN0LiBIaXMgZXhhbXBsZSwgbW9yZW92ZXIsIGRpZCBtb3JlIHRvIGVubGFyZ2UgdGhlIGNvbmdyZWdhdGlvbiBhdCB0aGUgQ3Jvc3Mtcm9hZHMsIHRoYW4gZGlkIHRoZSBwcmVhY2hpbmcgb2YgUGF1bGludXMgaW4gYSB3aG9sZSB5ZWFyLiBUaGlzIHdhcywgdW5lcXVpdm9jYWxseSwgPGVtPnNpbmNlcmU8L2VtPiByZXBlbnRhbmNlLjwvcD4KPHA+VGhpcyBpcyB0aGUgcmVwZW50YW5jZSB3aGljaCBNb3NlcyBwcmVhY2hlZCwgYW5kIHdoaWNoIEplc3VzIGFwcHJvYmF0ZWQuICBVbmRlciAgdGhlICBsYXcsICBjb25mZXNzaW9uICB0byAgdGhlICBwcmllc3QsICBhbmQgIHRoZSBwcmVzZW50aW5nIG9mIGEgdHJlc3Bhc3Mgb2ZmZXJpbmcsIGF2YWlsZWQgbm90aGluZyB0byBmb3JnaXZlbmVzcyB3aXRob3V0IHJlc3RpdHV0aW9uLiBCdXQgdGhlIGxhdyB3ZW50IGludG8gZGV0YWlscyBzdGlsbCBtb3JlIG1pbnV0ZSB0aGFuIHRoZXNlOyBmb3IgcHJvdmlzaW9uIGlzIG1hZGUgZm9yIHRoZSBjYXNlIGluIHdoaWNoIHRoZSBzaW5uZXIgY291bGQgbm90IGZpbmQgdGhlIHBlcnNvbiBhZ2FpbnN0IHdob20gaGUgaGFkIHNpbm5lZC4gSW4gc3VjaCBhIGNhc2UsIHRoZSBwZW5pdGVudCBzaW5uZXIgd2FzIHRvIHNlZWsgb3V0IHRoZSBraW5kcmVkIG9mIHRoZSBpbmp1cmVkIHBhcnR5LCBhbmQgaWYgaGUgY291bGQgZmluZCBhbnkga2luc21hbiwgaGUgd2FzIHRvIHJlY29tcGVuc2UgdGhpcyBraW5zbWFuOyBidXQgaWYgaGUgY291bGQgbm90IGZpbmQgYSBraW5zbWFuLCBoZSBtdXN0IHJlY29tcGVuc2UgaXQgdG8gdGhlIExvcmQsIGJlc2lkZXMgb2ZmZXJpbmcgaGlzIHRyZXNwYXNzIG9mZmVyaW5nLiBJdCB3YXMgdG8gZ28gaW50byB0aGUgTG9yZCdzIHRyZWFzdXJ5LjIgVGhlIHByaW5jaXBsZSB1bmlmb3JtbHksIGluIGFsbCBjYXNlcyBvZiBzaW48L3A+CjxwPmFnYWluc3QgbWFuLCB3YXMsIHRoZSBzaW5uZXIgJnF1b3Q7c2hhbGwgbWFrZSBhbWVuZHMgZm9yIHRoZSBoYXJtIGhlIGhhcyBkb25lLCBhbmQgc2hhbGwgYWRkIHRoZSBmaWZ0aCBwYXJ0IHRoZXJldG8uJnF1b3Q7MzwvcD4KPHA+SWYgIGFueSAgb25lICBzdXBwb3NlICB0aGF0ICByZXBlbnRhbmNlICBpcyAgdG8gIGJlICBsZXNzICBzaW5jZXJlICBvciB1bmVxdWl2b2NhbCAgdW5kZXIgIHRoZSAgZ29zcGVsLCAgbGV0ICBoaW0gIHJlbWVtYmVyICB0aGF0ICBaYWNjaGV1cyBwcm9wb3NlZCBtb3JlIHRoYW4gYWRkaW5nIGEgZmlmdGg7IGhlIHdvdWxkIHJlc3RvcmUgZm91cmZvbGQsIGFuZCB0aGF0IEplc3VzIGFwcHJvYmF0ZWQgaGltIGZvciBzbyBkb2luZy4gSW5kZWVkLCBKb2huIHRoZSBJbW1lcnNlciBkZW1hbmRlZCBmcnVpdHMgd29ydGh5IG9mIHJlcGVudGFuY2Ugb3Igb2YgcmVmb3JtYXRpb24sIGFuZCBQYXVsIHByb2NsYWltZWQgdGhhdCB0aG9zZSB3aG8gdHVybmVkIHRvIEdvZCBzaG91bGQgZG8gd29ya3MgbWVldCBmb3IsIG9yIHdvcnRoeSBvZiwgcmVwZW50YW5jZS40PC9wPgo8cD4mcXVvdDtXb3JrcywgIHdvcnRoeSAgb2YgIHJlcGVudGFuY2UsJnF1b3Q7ICBpcyAgYSAgcGhyYXNlICB3aGljaCAgY2FuICBiZSB1bmRlcnN0b29kIGluIG5vIG90aGVyIHNlbnNlIHRoYW4gdGhvc2Ugd29ya3Mgd2hpY2ggbWFrZSBhbWVuZHMgZm9yIHRoZSBoYXJtIGRvbmUgdG8gbWVuIGFuZCB0aGUgZGlzaG9ub3IgZG9uZSB0byBHb2QsIGFzIGZhciBhcyBib3RoIGFyZSBwb3NzaWJsZS4gQ2FuIGFueSBtYW4gdGhpbmsgdGhhdCBoZSBpcyBzb3JyeSBmb3IgdGhhdCBzaW4gb3Igd3JvbmcgIHdoaWNoICBoZSAgaGFzICBkb25lLCAgd2hlbiAgaGUgIG1ha2VzICBubyAgZWZmb3J0ICB0byAgbWFrZSBhbWVuZHMgdG8gaGltIHdobyB3YXMgaW5qdXJlZCBpbiBwZXJzb24sIGNoYXJhY3Rlciwgb3IgcHJvcGVydHksIGJ5IGl0PyBXb3JrcyB3b3J0aHkgb2YgaGlzIHByb2Zlc3NlZCByZXBlbnRhbmNlIGFyZSB3YW50aW5nLCBzbyBsb25nIGFzIGFueSBiZWluZyB3aG9tIGhlIGhhcyBpbmp1cmVkIGluIHBlcnNvbiwgcHJvcGVydHksIG9yIHJlcHV0YXRpb24sIGlzIHVucmVkcmVzc2VkIHRvIHRoZSB1dG1vc3QgZXh0ZW50IG9mIGhpcyBhYmlsaXR5LjwvcD4KPHA+T25lICBvZiAgb3VyICBtb3N0ICBwb3B1bGFyICBjb21tZW50YXRvcnMgIHNheXMg4oCUIGFuZCAgd2l0aCAgbXVjaCB0cnV0aCDigJQgJnF1b3Q7Tm8gIG1hbiAgc2hvdWxkICBleHBlY3QgIG1lcmN5ICBhdCAgdGhlICBoYW5kICBvZiAgR29kLCAgd2hvIGhhdmluZyB3cm9uZ2VkIGhpcyBuZWlnaGJvciwgcmVmdXNlcywgd2hlbiBoZSBoYXMgaXQgaW4gaGlzIHBvd2VyLCB0byAgbWFrZSAgPGVtPnJlc3RpdHV0aW9uLjwvZW0+ICBXZXJlICBoZSAgdG8gIHdlZXAgIHRlYXJzICBvZiAgYmxvb2QsICBib3RoICB0aGUganVzdGljZSBhbmQgbWVyY3kgb2YgR29kIHdvdWxkIHNodXQgb3V0IGhpcyBwcmF5ZXIsIGlmIGhlIG1ha2Ugbm90IGhpcyAgbmVpZ2hib3IgIGFtZW5kcyAgZm9yICB0aGUgIGluanVyeSAgaGUgIGhhcyAgZG9uZSAgaGltLiAgSGUgIGlzICBhIGRpc2hvbmVzdCBtYW4sIHdobyBpbGxlZ2FsbHkgaG9sZHMgdGhlIHByb3BlcnR5IG9mIGFub3RoZXIgaW4gaGlzIGhhbmRzLiZxdW90OzU8L3A+CjxwPkV2ZXJ5IHByZWFjaGVyIG9mIHJlcGVudGFuY2Ugc2hvdWxkIGluc2lzdCB1cG9uIHRoZXNlIGV2aWRlbmNlcyBvZiBzaW5jZXJpdHkgYm90aCBmb3IgdGhlIHNhdGlzZmFjdGlvbiBvZiB0aGUgcGVuaXRlbnQgaGltc2VsZiwgYW5kIGZvciB0aGUgIGdvb2QgIG9mICB0aGUgIGNvbW11bml0eS4gICZxdW90O01hbnkgIHRoYXQgIGJlbGlldmVkICBjYW1lICBhbmQgY29uZmVzc2VkLCBhbmQgc2hvd2VkIHRoZWlyIGRlZWRzOyBtYW55IG9mIHRoZW0gYWxzbywgd2hvIHVzZWQgY3VyaW91cyBhcnRzLCBicmluZ2luZyB0aGVpciBib29rcyB0b2dldGhlciwgYnVybnQgdGhlbSBiZWZvcmUgYWxsOyBhbmQgdGhleSBjb21wdXRlZCB0aGUgdmFsdWUgb2YgdGhlbSBhbmQgZm91bmQgaXQgZmlmdHkgdGhvdXNhbmQgcGllY2VzIG9mIHNpbHZlci4mcXVvdDs2IFRoaXMgd2FzIG1ha2luZyByZXN0aXR1dGlvbiwgaW4gdGhlaXIgY2FzZSwgYXMgZmFyIGFzIHBvc3NpYmxlOyBhbmQgdGhlIHByaW5jaXBsZSBoZXJlIGV2aW5jZWQgaXMgYXBwbGljYWJsZSBpbiBldmVyeSBvdGhlciBjYXNlLjwvcD4KPHA+QnV0ICBpbiAgcHVyc3VpbmcgIHRoaXMgIHN1YmplY3QgIHNvICBmYXIsICB3ZSAgaGF2ZSAgcGFzc2VkICBvdmVyICB0aGUgYm91bmRhcmllcyAgb2YgIHJlcGVudGFuY2UsICBhbmQgIHNvbWV0aW1lcyAgY29uZm91bmRlZCAgaXQgIHdpdGggcmVmb3JtYXRpb24uIFRoaXMgaXMgb3dpbmcgdG8gdGhlIGxpY2VudGlvdXMgdXNlIG9mIGxhbmd1YWdlLCB0byB3aGljaCAgbW9kZXJuICB0aGVvbG9neSAgaGFzICBzbyAgcmljaGx5ICBjb250cmlidXRlZC4gIFdlICBzaGFsbCwgaG93ZXZlciwgIHJlZHJlc3MgIHRoaXMgIHdyb25nLCAgYXMgIGZhciAgYXMgIHByYWN0aWNhYmxlLCAgYnkgIGEgIGZldyByZW1hcmtzIG9uPC9wPgo8cD48ZW0+PHN0cm9uZz5SZWZvcm1hdGlvbjwvc3Ryb25nPjwvZW0+PC9wPgo8cD5UaGUgd29yZCA8ZW0+bWV0YW5vaWEsPC9lbT4gdXNlZCBieSB0aGUgc2FjcmVkIHdyaXRlcnMgYW5kIGhlYXZlbi10YXVnaHQgcHJlYWNoZXJzIG9mIHRoZSBOZXcgRWNvbm9teSwgYXMgaW5kaWNhdGl2ZSBvZiB0aGUgZmlyc3QgZWZmZWN0IG9mIGZhaXRoLCBhcyBoYXMgYmVlbiBvZnRlbiBzaG93ZWQsIGlzIGRpZmZlcmVudCBmcm9tIHRoYXQgd2hpY2ggb3VyIHdvcmQgPGVtPnJlcGVudGFuY2U8L2VtPiBmaXRseSByZXByZXNlbnRzLiBJdCBsaXRlcmFsbHkgaW1wb3J0cyA8ZW0+YSBjaGFuZ2Ugb2YgbWluZDs8L2VtPiBidXQsIGFzIFBhcmtodXJzdCwgQ2FtcGJlbGwsIGFuZCBtYW55IG90aGVycyBzYXksICZxdW90O3N1Y2ggYSBjaGFuZ2Ugb2YgbWluZCBhcyBpbmZsdWVuY2VzIG9uZSdzIHN1YnNlcXVlbnQgYmVoYXZpb3IgZm9yIHRoZSBiZXR0ZXIuJnF1b3Q7ICZxdW90O0l0IGhhcyBiZWVuIG9ic2VydmVkIGJ5IHNvbWUsIGFuZCwgSSB0aGluayB3aXRoIHJlYXNvbiwgdGhhdCB0aGUgZm9ybWVyICg8ZW0+bWF0YW5vZW88L2VtPikgZGVub3RlcyBwcm9wZXJseSBhIGNoYW5nZSB0byB0aGUgYmV0dGVyOiB0aGUgbGF0dGVyICg8ZW0+bWF0YW1lbG9tYWk8L2VtPikgYmFyZWx5IGEgY2hhbmdlLCB3aGV0aGVyIHRvIHRoZSBiZXR0ZXIgb3IgdG8gIHRoZSAgd29yc2U7ICB0aGF0ICB0aGUgIGZvcm1lciAgbWFya3MgIGEgIGNoYW5nZSAgb2YgIG1pbmQgIHRoYXQgIGlzIGR1cmFibGUsIGFuZCBwcm9kdWNlcyBjb25zZXF1ZW5jZXM7IHRoZSBsYXR0ZXIgZXhwcmVzc2VzIG9ubHkgYSBwcmVzZW50ICB1bmVhc3kgIGZlZWxpbmcgIG9mICByZWdyZXQsICB3aXRob3V0ICByZWdhcmQgIHRvICBkdXJhdGlvbiAgb3IgZWZmZWN0czogIGluICBmaW5lLCAgdGhhdCAgdGhlICBmaXJzdCAgbWF5ICBiZSAgdHJhbnNsYXRlZCAgaW50byAgRW5nbGlzaCwgIDxlbT5JIHJlZm9ybTs8L2VtPiAgdGhlICBzZWNvbmQsICA8ZW0+SSAgcmVwZW50LDwvZW0+ICBpbiAgdGhlICBmYW1pbGlhciAgYWNjZXB0YXRpb24gIG9mICB0aGUgd29yZHMuJnF1b3Q7IE5vdyBhcyBldmVyeSBvbmUgd2hvIHJlZm9ybXMgPGVtPnJlcGVudHM7PC9lbT4gYnV0IGFzIGV2ZXJ5IG9uZSB3aG8gIHJlcGVudHMgIGRvZXMgIDxlbT5ub3QgIHJlZm9ybSw8L2VtPiAgdGhpcyAgZGlzdGluY3Rpb24gIGlzICBuZWNlc3NhcnkgIGFuZCBwcm9wZXI7IGFuZCB0aGVyZSBpcyBub3RoaW5nIGhhemFyZGVkLCBub3RoaW5nIGxvc3QgYnkgdHJhbnNsYXRpbmcgdGhlIGZvcm1lciA8ZW0+SSByZWZvcm0sPC9lbT4gYW5kIHRoZSBsYXR0ZXIgPGVtPkkgcmVwZW50LjwvZW0+IFRoZXJlIGlzIHNvbWV0aGluZyBnYWluZWQsIGVzcGVjaWFsbHkgaW4gIGFsbCBwbGFjZXMgIHdoZXJlIHdlIGhhdmUgdGhlIHdvcmQgaW4gIHRoZSBpbXBlcmF0aXZlICBtb29kLCAgYmVjYXVzZSAgdGhlbiAgaXQgIGlzICBvZiAgaW1wb3J0YW5jZSAgdG8gIGtub3cgcHJlY2lzZWx5IHdoYXQgaXMgaW50ZW5kZWQuIElmIHdlIGFyZSBjb21tYW5kZWQgb25seSB0byBjaGFuZ2Ugb3VyIG1pbmQsIG9yIHRvIGJlIHNvcnJ5IGZvciB0aGUgcGFzdCwgd2UgaGF2ZSBvYmV5ZWQgd2hlbiB3ZSBmZWVsIHJlZ3JldDsgYnV0IGlmIG1vcmUgdGhhbiBtZXJlIGNoYW5nZSBvZiBtaW5kIG9yIHJlZ3JldCBpcyBpbnRlbmRlZCwgd2UgaGF2ZSBub3Qgb2JleWVkIHRoZSBjb21tYW5kbWVudCB1bnRpbCB3ZSBjaGFuZ2UgZm9yIHRoZSBiZXR0ZXIuIE5vdyBpdCBpcywgd2UgdGhpbmssIHZlcnkgZXZpZGVudCBmcm9tIHZhcmlvdXMgcGFzc2FnZXMgb2YgdGhlIHNhY3JlZCB3cml0aW5ncyBvZiB0aGUgQXBvc3RsZXMsIGFuZCBmcm9tIHRoZWlyIHNwZWVjaGVzLCB0aGF0IHRoZXkgY29tbWFuZGVkIG1vcmUgdGhhbiBhIHNpbXBsZSBjaGFuZ2Ugb2YgbWluZCBhcyByZXNwZWN0ZWQgcGFzdCBjb25kdWN0LCBvciBtZXJlIHNvcnJvdyBmb3IgdGhlIHBhc3QuIFBldGVyIGNvbW1hbmRlZCB0aGUgdGhvdXNhbmRzIGFzc2VtYmxlZCBvbiB0aGUgZGF5IG9mIFBlbnRlY29zdCwgd2hvIGhhZCBjaGFuZ2VkIHRoZWlyICBtaW5kcywgIGFuZCAgd2hvIHdlcmUgIHNvcnJ5ICBmb3IgIHRoZSAgcGFzdCwgIHRvICBkbyAgc29tZXRoaW5nIHdoaWNoIHRoZXkgaGFkIG5vdCB5ZXQgZG9uZTsgYW5kIHRoYXQgc29tZXRoaW5nIGlzIGluIHRoZSBjb21tb24gdmVyc2lvbiByZW5kZXJlZCA8ZW0+cmVwZW50OzwvZW0+IGFuZCBpbiB0aGUgbmV3IHZlcnNpb24sIDxlbT5yZWZvcm07PC9lbT4gYW5kIGluIHRoZSBvbGQgRW5nbGlzaCBCaWJsZSwgPGVtPmFtZW5kIHlvdXIgbGl2ZXMuPC9lbT4gVGhlIHdvcmQgaGVyZSB1c2VkIGlzIHRoZSBpbXBlcmF0aXZlIG9mIDxlbT5tZXRhbm9lby48L2VtPiBKdWRhcyByZXBlbnRlZCwgYW5kIG1hbnkgbGlrZSBoaW0sIHdobyBuZXZlciAgcmVmb3JtZWQ7ICBhbmQsICB0aGVyZWZvcmUsICBpdCAgaXMgIG9mICBpbXBvcnRhbmNlICB0aGF0ICB0aGlzIGRpc3RpbmN0aW9uIHNob3VsZCBiZSBrZXB0IGluIHZpZXcuJnF1b3Q7NzwvcD4KPHA+UmVwZW50YW5jZSBpcyBub3QgcmVmb3JtYXRpb24sIGJ1dCBpdCBpcyBuZWNlc3NhcnkgdG8gaXQ7IGZvciB3aG9ldmVyIHJlZm9ybXMgbXVzdCBmaXJzdCByZXBlbnQuIFJlZm9ybWF0aW9uIGlzLCBpbmRlZWQsIHRoZSBjYXJyeWluZyBvdXQgb2YgdGhlIHB1cnBvc2UgaW50byBvdXIgY29uZHVjdC4gQnV0IGFzIHJlZm9ybWF0aW9uIGJlbG9uZ3MgcmF0aGVyIHRvICBhbm90aGVyICBwYXJ0ICBvZiAgb3VyICBlc3NheSAgdGhhbiAgdGhlICBwcmVzZW50LCAgd2UgIHNoYWxsLCAgb24gIHRoZSBwcmVtaXNlcyBhbHJlYWR5IGJlZm9yZSB1cywgcGF1c2UgYW5kIG9mZmVyIGEgZmV3IHJlZmxlY3Rpb25zLjwvcD4KPHA+SW4gdGhlIHByZWNlZGluZyBkZWZpbml0aW9uIG9mIHdvcmRzIGFuZCBpZGVhcywgaXQgd291bGQgYXBwZWFyIHRoYXQgd2UgIGhhdmUgIGEgIGxpdGVyYWwgIGFuZCAgdW5maWd1cmF0aXZlICByZXByZXNlbnRhdGlvbiAgb2YgIHRoZSAgd2hvbGUgcHJvY2VzcyBvZiB3aGF0IGlzIGZpZ3VyYXRpdmVseSBjYWxsZWQgPGVtPnJlZ2VuZXJhdGlvbi48L2VtPiBGb3IsIGFzIHdlIHNoYWxsIHNvb24gc2VlLCB0aGUgdGVybSA8ZW0+cmVnZW5lcmF0aW9uPC9lbT4gaXMgYSBmaWd1cmUgb2Ygc3BlZWNoIHdoaWNoIHZlcnkgYXBwcm9wcmlhdGVseSwgdGhvdWdoIGFuYWxvZ2ljYWxseSwgcmVwcmVzZW50cyB0aGUgcmVmb3JtYXRpb24gb3IgcmVub3ZhdGlvbiBvZiBsaWZlIG9mIHdoaWNoIHdlIGhhdmUgbm93IHNwb2tlbi48L3A+CjxwPlRoYXQgdGhlIHByZWNlZGluZyBhcnJhbmdlbWVudCBpcyBub3QgYXJiaXRyYXJ5LCBidXQgbmF0dXJhbCBhbmQgbmVjZXNzYXJ5LCB0aGUgcmVhZGVyIHdpbGwgcGVyY2VpdmUsIHdoZW4gaGUgcmVmbGVjdHMsIHRoYXQgdGhlIHRoaW5nIGRvbmUsIG9yIHRoZSBmYWN0LCBtdXN0IHByZWNlZGUgdGhlIHJlcG9ydCBvciB0ZXN0aW1vbnkgY29uY2VybmluZyBpdDsgdGhhdCB0aGUgdGVzdGltb255IGNvbmNlcm5pbmcgaXQgbXVzdCBwcmVjZWRlIHRoZSBiZWxpZWYgb2YgaXQ7IHRoYXQgIGJlbGllZiAgb2YgIHRoZSAgdGVzdGltb255ICBtdXN0ICBwcmVjZWRlICBhbnkgIGZlZWxpbmcgIGluIGNvcnJlc3BvbmRlbmNlICB3aXRoICB0aGUgIGZhY3QgIHRlc3RpZmllZDsgIGFuZCAgdGhhdCAgZmVlbGluZyAgbXVzdCBwcmVjZWRlIGFjdGlvbiBpbiBjb25mb3JtaXR5IHRvIGl0LiBGYWN0LCB0ZXN0aW1vbnksIGZhaXRoLCBmZWVsaW5nLCBhY3Rpb24sICBhcmUgIHRoZXJlZm9yZSAgYm91bmQgIHRvZ2V0aGVyICBieSAgYSAgbmF0dXJhbCAgYW5kICBncmFjaW91cyBuZWNlc3NpdHksIHdoaWNoIG5vIGluZ2VudWl0eSAgY2FuIHNlcGFyYXRlLiAgQW5kIHdpbGwgbm90ICBldmVyeSBDaHJpc3RpYW4gc2F5LCB0aGF0IHdoZW4gYSBwZXJzb24gPGVtPmZlZWxzPC9lbT4gYW5kIDxlbT5hY3RzPC9lbT4gYWNjb3JkaW5nIHRvIHRoZSBmYWl0aCwgIG9yICB0aGUgIHRlc3RpbW9ueSAgb2YgIEdvZCwgIGhlICBpcyAgYSAgbmV3IGNyZWF0dXJlIOKAlCByZWdlbmVyYXRlIOKAlCB0cnVseSBjb252ZXJ0ZWQgdG8gR29kPyBIZSB0aGF0IGJlbGlldmVzIHRoZSBmYWN0cyAgdGVzdGlmaWVkICBpbiAgdGhlICByZWNvcmQgIG9mICBHb2QsICB1bmRlcnN0YW5kcyAgdGhlbSwgIGZlZWxzIGFjY29yZGluZyB0byB0aGVpciBuYXR1cmUgYW5kIG1lYW5pbmcsIGFuZCBhY3RzIGluIGNvcnJlc3BvbmRlbmNlIHdpdGggIHRoZW0g4oCUIGhhcyAgdW5kZXJnb25lICBhICBjaGFuZ2UgIG9mICBoZWFydCAgYW5kICBvZiAgbGlmZSAgd2hpY2ggbWFrZXMgaGltIGEgbmV3IG1hbi48L3A+CjxwPlRoaXMgaXMgdGhhdCBtb3JhbCBjaGFuZ2Ugb2YgaGVhcnQgYW5kIGxpZmUsIHdoaWNoIGlzIGZpZ3VyYXRpdmVseSBjYWxsZWQgIDxlbT5yZWdlbmVyYXRpb24uPC9lbT4gIFdlIGFyZSBub3QgIHRvICBzdXBwb3NlIHRoYXQgIHJlZ2VuZXJhdGlvbiBpcyBzb21ldGhpbmcgd2hpY2ggbXVzdCBiZSBhZGRlZCB0byB0aGUgZmFpdGgsIHRoZSBmZWVsaW5nLCBhbmQgdGhlIGFjdGlvbiBvciBiZWhhdmlvciwgd2hpY2ggYXJlIHRoZSBlZmZlY3RzIG9mIHRoZSB0ZXN0aW1vbnkgb2YgR29kIHVuZGVyc3Rvb2QgYW5kIGVtYnJhY2VkOyBvciB3aGljaCBhcmUgdGhlIGltcHJlc3Mgb2YgdGhlIGRpdmluZSBmYWN0cyBhdHRlc3RlZCBieSBQcm9waGV0cyBhbmQgQXBvc3RsZXMuIEl0IGlzIG9ubHkgYW5vdGhlciBuYW1lIGZvciB0aGUgc2FtZSBwcm9jZXNzIGluIGFsbCBpdHMgcGFydHMuPC9wPgo8cD5JdCBtYXkgYWxzbyBiZSBvYnNlcnZlZCB0aGF0IG51bWVyb3VzIGZpZ3VyZXMgYW5kIGFuYWxvZ2llcyBhcmUgdXNlZCBieSB0aGUgaW5zcGlyZWQgd3JpdGVycyB0byBzZXQgZm9ydGggdGhpcyBjaGFuZ2UsIGFzIHdlbGwgYXMgb3RoZXIgbGVhZGluZyB0cnV0aHMgYW5kIGxlc3NvbnMgaW4gdGhlIEJpYmxlLiBJbiB0aGVpciBjb2xsZWN0aXZlIGNhcGFjaXR5LCBDaHJpc3RpYW5zIGFyZSBjYWxsZWQgYSBraW5nZG9tLCBhIG5hdGlvbiwgYSBnZW5lcmF0aW9uLCBhIGZhbWlseSwgYSBob3VzZSwgYSBmbG9jaywgYSBjaXR5LCBhIHRlbXBsZSwgYSBwcmllc3Rob29kLCBldGMuIEluIHRoZWlyIGluZGl2aWR1YWwgY2FwYWNpdHkgdGhleSBhcmUgY2FsbGVkIGtpbmdzLCBwcmllc3RzLCBzb2xkaWVycywgY2l0aXplbnMsIGNoaWxkcmVuLCBzaGVlcCwgYnJhbmNoZXMsIHN0b25lcywgZXRjLiBUaGV5IGFyZSBzYWlkIHRvIGJlIGJlZ290dGVuLCBib3JuLCByZWdlbmVyYXRlZCwgYnVpbGRlZCwgZW5ncmFmdGVkLCBjb252ZXJ0ZWQsIGNyZWF0ZWQsIHBsYW50ZWQuIE5vdywgIHVuZGVyICB3aGF0ZXZlciAgZmlndXJlICB0aGV5ICBhcmUgIGNvbnNpZGVyZWQgIG9yICBpbnRyb2R1Y2VkLCByZWFzb24gYXJndWVzIHRoYXQgZXZlcnl0aGluZyBzYWlkIG9mIHRoZW0gc2hvdWxkIGJlIGV4cHJlc3NlZCBpbiBjb25mb3JtaXR5IHdpdGggdGhlIGZpZ3VyZSB1bmRlciB3aGljaCB0aGV5IGFyZSBwcmVzZW50ZWQuIEFyZSB0aGV5ICBjYWxsZWQgIDxlbT5zaGVlcD88L2VtPiDigJQgdGhlbiAgaGUgIHRoYXQgIHByZXNpZGVzICBvdmVyICB0aGVtICBpcyAgY2FsbGVkICBhIDxlbT5TaGVwaGVyZDs8L2VtPiB0aGVpciBlbmVtaWVzIGFyZSA8ZW0+d29sdmVzPC9lbT4gYW5kIDxlbT5kb2dzOzwvZW0+IHRoZWlyIHN1c3RlbmFuY2UgaXMgdGhlIDxlbT5ncmVlbiBwYXN0dXJlOzwvZW0+IHRoZWlyIHBsYWNlIG9mIHNhZmV0eSBhbmQgcmVwb3NlLCB0aGUgPGVtPnNoZWVwZm9sZDs8L2VtPiB0aGVpciAgZXJyb3JzICBhcmUgIDxlbT53YW5kZXJpbmdzPC9lbT4gIGFuZCAgPGVtPnN0cmF5aW5nczs8L2VtPiAgdGhlaXIgIGNvbnZlcnNpb24sICBhIDxlbT5yZXR1cm47PC9lbT4gIGFuZCAgdGhlaXIgIGdvb2QgIGJlaGF2aW9yICBhICA8ZW0+aGVhcmluZyAgb2YgIHRoZSAgdm9pY2UsPC9lbT4gIG9yICBhIDxlbT5mb2xsb3dpbmcsPC9lbT4gIG9mICB0aGUgIFNoZXBoZXJkLiAgQXJlICB0aGV5ICBjYWxsZWQgIDxlbT5jaGlsZHJlbj88L2VtPiDigJQgdGhlbiBjb2xsZWN0aXZlbHkgdGhleSBhcmUgYSA8ZW0+ZmFtaWx5OzwvZW0+IHRoZXkgYXJlIDxlbT5iZWdvdHRlbjwvZW0+IGFuZCA8ZW0+Ym9ybiBhZ2Fpbjs8L2VtPiBHb2QgaXMgdGhlaXIgPGVtPkZhdGhlcjs8L2VtPiB0aGVpciBzZXBhcmF0aW9uIGlzIGFuIDxlbT5hZG9wdGlvbjs8L2VtPiBKZXN1cyBpcyB0aGVpciA8ZW0+ZWxkZXIgYnJvdGhlcjs8L2VtPiB0aGV5IGFyZSA8ZW0+aGVpcnM8L2VtPiBvZiBHb2Q7IHRoZXkgPGVtPmxpdmU8L2VtPiBhbmQgPGVtPndhbGs8L2VtPiB3aXRoIEdvZC4gQXJlICB0aGV5ICA8ZW0+cHJpZXN0cz88L2VtPiDigJQgSmVzdXMgIGlzICB0aGVpciAgPGVtPkhpZ2ggIFByaWVzdDs8L2VtPiAgdGhlICBjaHVyY2ggIHRoZWlyIDxlbT50ZW1wbGU7PC9lbT4gIHRoZSAgU2F2aW9yICBpcyAgdGhlaXIgIDxlbT5hbHRhcjs8L2VtPiAgdGhlaXIgIHNvbmdzLCAgdGhlaXIgIHByYWlzZXMsICBhcmUgPGVtPmluY2Vuc2U8L2VtPiBhc2NlbmRpbmcgdG8gaGVhdmVuOyBhbmQgdGhlaXIgb2JsYXRpb25zIHRvIHRoZSBwb29yLCB0aGVpciB3b3JrcyBvZiBsb3ZlLCBhcmUgIDxlbT5zYWNyaWZpY2VzPC9lbT4gbW9zdCBhY2NlcHRhYmxlIHRvICBHb2QuIEFyZSB0aGV5IGNhbGxlZCAgPGVtPmNpdGl6ZW5zPzwvZW0+IOKAlCB0aGUgIGNodXJjaCAgaXMgIHRoZW4gIDxlbT50aGUgIGtpbmdkb20gIG9mICBoZWF2ZW47IEplcnVzYWxlbSBpcyB0aGUgbW90aGVyIG9mIHRoZW0gYWxsOzwvZW0+IGZvcm1lcmx5IHRoZXkgd2VyZSA8ZW0+YWxpZW5zLDwvZW0+IGFuZDwvcD4KPHA+dGhlaXIgIG5hdHVyYWxpemF0aW9uICBpcyAgPGVtPnJlZ2VuZXJhdGlvbi48L2VtPiAgQXJlICB0aGV5ICBjYWxsZWQgPGVtPmJyYW5jaGVzPzwvZW0+IOKAlCB0aGVuIEplc3VzIGlzIHRoZSA8ZW0+dHJ1ZSB2aW5lOzwvZW0+IGhpcyBGYXRoZXIgdGhlIDxlbT52aW5lIGRyZXNzZXI7PC9lbT4gdGhlaXIgdW5pb24gd2l0aCBDaHJpc3QsIGFuIDxlbT5lbmdyYWZ0aW5nOzwvZW0+IHRoZSBkaXNjaXBsaW5lIG9mIHRoZSBnb3NwZWwsIGEgPGVtPnBydW5pbmc7PC9lbT4gYW5kIHRoZWlyIGdvb2Qgd29ya3MgYXJlIDxlbT5mcnVpdHMgb2YgcmlnaHRlb3VzbmVzcy48L2VtPjwvcD4KPHA+VGh1cyAgdGhlcmUgIGlzICBubyAgY29uZnVzaW9uICBvZiAgbWV0YXBob3IgIGluICB0aGUgIFNjcmlwdHVyZXMgIG9mIHRydXRoIOKAlCBpbiB0aGUgZGlhbGVjdCBvZiBoZWF2ZW4uICBJdCBpcyB0aGUgbGFuZ3VhZ2Ugb2YgQXNoZG9kOyBpdCBiZWxvbmdzICB0byAgdGhlICBjb25mdXNpb24gIG9mICBCYWJlbCwgIHRvICBtaW5nbGUgIGFuZCAgY29uZm91bmQgIGFsbCBmaWd1cmVzIGFuZCBhbmFsb2dpZXMuIEhlbmNlIGFyZSBzbyBvZnRlbiBoZWFyIG9mIDxlbT5iZWluZyBib3JuIGFnYWluLDwvZW0+IHdpdGhvdXQgYW55IGFsbHVzaW9uIHRvIGEgZmFtaWx5IG9yIGEga2luZ2RvbSEgYW5kIG9mIDxlbT5yZWdlbmVyYXRpb248L2VtPiBhcyBhbnRlY2VkZW50IHRvIGZhaXRoIG9yIHJlcGVudGFuY2UhIEhhZCBhIG1vZGVybiBhc3NlbWJseSBvZiBEaXZpbmVzIGJlZW4gZW1wbG95ZWQgdG8gYWNjb21tb2RhdGUgdGhlIHNjcmlwdHVyZSBzdHlsZSB0byB0aGVpciBvcnRob2RveCBzZW50aW1lbnRzLCB3ZSBzaG91bGQgbm90IGhhdmUgaGFkIHRvIHJlYWQgYWxsIHRoZSBPbGQgVGVzdGFtZW50IGFuZCBhbGwgdGhlIGhpc3RvcmljIGJvb2tzIG9mIHRoZSBOZXcsIHRvIGZpbmQgdGhlIHN1YmplY3Qgb2YgcmVnZW5lcmF0aW9uIGJ1dCBvbmNlIHByb3Bvc2VkIHRvIGFuIGFsaWVuLCBhcyB0aGUgZmFjdCBpczsgYnV0IHRoZW4gd2Ugc2hvdWxkIGhhdmUgZm91bmQgaXQgaW4gdGhlIGhpc3Rvcnkgb2YgQWJlbCwgb2YgRW5vY2gsIG9mIE5vYWgsIGFuZCBvZiBBYnJhaGFtLCBpZiBub3QgaW4gZXZlcnkgc2VjdGlvbiBvZiB0aGUgbGF3IG9mIE1vc2VzLCBpbiB0aGUgUHJvcGhldHMsIGFuZCBpbiB0aGUgUHNhbG1zLiBKb2huIHRoZSBCYXB0aXN0LCBKZXN1cywgYW5kIHRoZSBIb2x5IFR3ZWx2ZSwgd291bGQgaGF2ZSBoYWQgaXQgaW4gZXZlcnkgc2VybW9uOyBhbmQgdHJ1dGggZmFpdGggd291bGQgaGF2ZSBiZWVuIGFsd2F5cyBkZWZpbmVkIGFzIHRoZSBmcnVpdCBvZiByZWdlbmVyYXRpb24uPC9wPgo8cD5CdXQgSmVzdXMgaGFkIGEgPGVtPmtpbmdkb208L2VtPiBpbiBoaXMgZXllIGFuZCBpbiBoaXMgZGlzY291cnNlIGJlZm9yZSBoZSBldmVyIG1lbnRpb25lZCBiZWluZyAnYm9ybiBhZ2FpbicgdG8gTmljb2RlbXVzOyBmb3IgdW5sZXNzIHRoZXJlIHdhcyBhIGZhbWlseSwgYSBzdGF0ZSwgb3IgYSBraW5nZG9tIHRvIGJlIGJvcm4gaW50bywgaXQgaXMgaW1wb3NzaWJsZSBmb3IgYW55IG9uZSB0byBiZSBib3JuIGludG8gaXQuIEFuZCBpZiB0aGUga2luZ2RvbSBvZiBoZWF2ZW4gb25seSBiZWdhbiB0byBiZSBhZnRlciBKZXN1cyBlbnRlcmVkIGludG8gaGVhdmVuOyBvciwgaWYgaXQgaXMgd2FzIG9ubHkgYXBwcm9hY2hpbmcgZnJvbSB0aGUgbWluaXN0cnkgb2YgSm9obiB0byB0aGUgZGF5IG9mIFBlbnRlY29zdCwgdGhlbiBpdCB3b3VsZCBoYXZlIGJlZW4gcHJlcG9zdGVyb3VzIGluZGVlZCDigJQgYW4gaW5jb25ncnVpdHkgb2Ygd2hpY2ggbm8gaW5zcGlyZWQgbWFuIHdhcyBldmVyeSBndWlsdHkg4oCUIHRvIGNhbGwgYW55IGNoYW5nZSBvZiBoZWFydCBvciBsaWZlLCA8ZW0+YSByZWdlbmVyYXRpb24sPC9lbT4gb3IgPGVtPmEgbmV3IGJpcnRoLjwvZW0+IEl0IGlzIHRydWUgdGhhdCBnb29kIG1lbiBpbiBhbGwgYWdlcyB3ZXJlIG1hZGUgc3VjaCBieSBmYWN0cywgdGVzdGltb255LCBmYWl0aCwgYW5kIGZlZWxpbmcsIGJ5IGEgY2hhbmdlIG9mIGhlYXJ0LCBieSB0aGUgU3Bpcml0IG9mIEdvZDsgYnV0IHRoZSA8ZW0+YW5hbG9neTwvZW0+IG9yIDxlbT5maWd1cmU8L2VtPiBvZiBiZWluZyA8ZW0+Ym9ybiw8L2VtPiBvciBvZiBiZWluZyA8ZW0+cmVnZW5lcmF0ZWQsPC9lbT4gb25seSBiZWdhbiB0byBiZSBwcmVhY2hlZCwgYW5kIHdoZW4gbWVuIGJlZ2FuIHRvIHByZXNzIGludG8gaXQuPC9wPgo8cD5XZSBhcmUgbm93LCBwZXJoYXBzLCBiZXR0ZXIgcHJlcGFyZWQgdG8gY29uc2lkZXIgdGhlIHByb3BlciBpbXBvcnQgYW5kICBtZWFuaW5nICBvZiAgJzxlbT5yZWdlbmVyYXRpb248L2VtPicgIGluICBnZW5lcmFsLCAgYW5kICBvZiAgJzxlbT50aGUgIGJhdGggIG9mIHJlZ2VuZXJhdGlvbjwvZW0+JyBpbiBwYXJ0aWN1bGFyLjwvcD4KPHA+PGVtPjxzdHJvbmc+UmVnZW5lcmF0aW9uPC9zdHJvbmc+PC9lbT48L3A+CjxwPlRoaXMgd29yZCBpcyBmb3VuZCBidXQgdHdpY2UgaW4gYWxsIHRoZSBvcmFjbGVzIG9mIEdvZCDigJQgb25jZSBpbiBNYXR0LiAgMTk6MjguICBhbmQgIG9uY2UgIGluICBUaXR1cyAgMzo1LiAgSW4gIHRoZSAgZm9ybWVyICBpdCAgaXMgIGFsbW9zdCB1bml2ZXJzYWxseSAgdW5kZXJzdG9vZCAgdG8gIG1lYW4gIDxlbT5hICBuZXcgIHN0YXRlICBvZiAgdGhpbmdzLDwvZW0+ICBub3QgIG9mIDxlbT5wZXJzb25zPC9lbT4g4oCUIGEgcGVjdWxpYXIgZXJhLCBpbiB3aGljaCBhbGwgdGhpbmdzIGFyZSBtYWRlIG5ldzog4oCUIHN1Y2ggYXMgdGhlIGZvcm1hdGlvbiAgb2YgIGEgbmV3ICBjaHVyY2ggb24gdGhlIGRheSBvZiAgUGVudGVjb3N0LCAgb3IgdGhlIGNvbW1lbmNlbWVudCBvZiB0aGUgTWlsbGVubml1bSwgb3IgdGhlIGdlbmVyYWwgcmVzdXJyZWN0aW9uLiBUaGUgYmlibGljYWwgY3JpdGljcyBvZiBlbWluZW5jZSBoYXZlIGFzc2lnbmVkIGl0IHRvIG9uZSBvciBvdGhlciBvZiB0aGVzZSBncmVhdCBjaGFuZ2VzIGluIHRoZSBzdGF0ZSBvZiB0aGluZ3MuIFNvIHdlIHVzZSB0aGUgd29yZCA8ZW0+cmV2b2x1dGlvbiw8L2VtPiBhbmQgdGhlIHBocmFzZSA8ZW0+dGhlIFJldm9sdXRpb24sPC9lbT4gdG8gZXhwcmVzcyBhIGNoYW5nZSBpbiB0aGUgcG9saXRpY2FsIHN0YXRlIG9mIHRoaW5ncy4gVGhlIG1vc3QgYXBwcm92ZWQgcHVuY3R1YXRpb24gYW5kIHZlcnNpb24gb2YgdGhpcyBwYXNzYWdlIHJlbmRlcnMgaXQgYWx0b2dldGhlciBldmlkZW50IHRoYXQgYSBuZXcgZXJhIGlzIGFsbHVkZWQgdG8uICdKZXN1cyBhbnN3ZXJlZCwgSW5kZWVkLCBJIHNheSB0byB5b3UsIHRoYXQgYXQgdGhlIHJlbm92YXRpb24gd2hlbiB0aGUgU29uIG9mIE1hbiBzaGFsbCBiZSBzZWF0ZWQgb24gaGlzIGdsb3Jpb3VzIHRocm9uZSwgeW91LCBteSBmb2xsb3dlcnMsIHNpdHRpbmcgYWxzbyB1cG9uIHR3ZWx2ZSB0aHJvbmVzLCBzaGFsbCBqdWRnZSB0aGUgdHdlbHZlIHRyaWJlcyBvZiBJc3JhZWwuJyBUaGlzIGJlaW5nIHNvIGV2aWRlbnQsIGFuZCBzbyBvZnRlbiBhbGx1ZGVkIHRvIGluIG91ciBmb3JtZXIgd3JpdGluZ3MsIHdlIHNoYWxsIHByb2NlZWQgdG8gdGhlIHJlbWFpbmluZyBvY2N1cnJlbmNlLCBUaXR1cyAzOjUuPC9wPgo8cD5BbGwgdGhlIG5ldyBsaWdodCB3aGljaCB3ZSBwcm9wb3NlIHRvIHRocm93IG9uIHRoaXMgcGFzc2FnZSB3aWxsIGJlIGdhdGhlcmVkIGZyb20gYW4gZXhhbWluYXRpb24gb2YgdGhlIGFjY2VwdGF0aW9uIG9mIHRoZSB3b3JkIDxlbT5nZW5lcmF0aW9uPC9lbT4gaW4gdGhlIHNhY3JlZCB3cml0aW5ncy4gT3VyIHJlYXNvbiBmb3IgdGhpcyBpcywgdGhhdCB3ZSBvYmplY3QgdG8gYSBwZXJlbXB0b3J5IGRlY2lzaW9uIG9mIHRoZSBtZWFuaW5nIG9mIGEgd29yZCB3aGljaCBvY2N1cnMgb25seSBpbiB0aGUgcGFzc2FnZSB1bmRlciBkaXNjdXNzaW9uLCBmcm9tIG91ciByZWFzb25pbmdzIHVwb24gdGhlIGlzb2xhdGVkIHBhc3NhZ2VzIGluIHdoaWNoIGl0IGlzIGZvdW5kLiBJbiBzdWNoIGEgY2FzZSwgaWYgd2UgY2Fubm90IGZpbmQgdGhlIHdob2xlIHdvcmQgaW4gYW55IHBhcmFsbGVsIHBhc3NhZ2VzLCB0aGUgcHJvcGVyIHN1YnN0aXR1dGUgaXMgdGhlIHJvb3Qgb3IgYnJhbmNoZXMgb2YgdGhhdCB3b3JkLCBzbyBmYXIgYXMgdGhleSBhcmUgZW1wbG95ZWQgIGJ5ICB0aGUgIHNhbWUgIHdyaXRlcnMuICBNb3Jlb3ZlciwgIHdlICB0aGluayAgaXQgIHdpbGwgIGJlIGdyYW50ZWQsIHRoYXQsIHdoYXRldmVyIG1heSBiZSB0aGUgc2NyaXB0dXJhbCAgYWNjZXB0YXRpb24gb2YgdGhlIHdvcmQgPGVtPmdlbmVyYXRpb24sPC9lbT4gcmVnZW5lcmF0aW9uIGlzIG9ubHkgdGhlIHJlcGV0aXRpb24gb2YgdGhhdCBhY3Qgb3IgcHJvY2Vzcy48L3A+CjxwPkFmdGVyICBhICBjbG9zZSAgZXhhbWluYXRpb24gIG9mICB0aGUgIHBhc3NhZ2VzICBpbiAgd2hpY2ggIDxlbT5nZW5lcmF0aW9uPC9lbT4gb2NjdXJzIGluIHRoZSB3cml0aW5ncyBvZiB0aGUgSGVicmV3IFByb3BoZXRzIGFuZCBBcG9zdGxlcywgd2UgZmluZCBpdCB1c2VkIG9ubHkgaW4gdHdvIGFjY2VwdGF0aW9ucyDigJQgYXMgZGVzY3JpcHRpdmUgb2YgdGhlIHdob2xlIHByb2Nlc3Mgb2YgY3JlYXRpb24gYW5kIG9mIHRoZSB0aGluZyBjcmVhdGVkLiBBIHJhY2Ugb2YgbWFuLCBvciBhIHBhcnRpY3VsYXIgIGNsYXNzICBvZiAgbWVuLCAgaXMgIGNhbGxlZCAgYSAgPGVtPmdlbmVyYXRpb247PC9lbT4gIGJ1dCAgdGhpcyAgaXMgIGl0cyBmaWd1cmF0aXZlLCByYXRoZXIgdGhhbiBpdHMgbGl0ZXJhbCBtZWFuaW5nLiBJdHMgbGl0ZXJhbCBtZWFuaW5nIGlzIHRoZSBmb3JtYXRpb24gb3IgY3JlYXRpb24gb2YgYW55dGhpbmcuIFRodXMgaXQgaXMgZmlyc3QgdXNlZCBpbiB0aGUgSG9seSBTY3JpcHR1cmVzLiBNb3NlcyBjYWxscyB0aGUgY3JlYXRpb24sIG9yIHdob2xlIHByb2Nlc3Mgb2YgZm9ybWF0aW9uIG9mIHRoZSBoZWF2ZW5zIGFuZCB0aGUgZWFydGgsICdUaGUgPGVtPmdlbmVyYXRpb25zPC9lbT4gb2YgdGhlIGhlYXZlbnMgYW5kIHRoZSBlYXJ0aC4nOCBUaGUgYWNjb3VudCBvZiB0aGUgZm9ybWF0aW9uIG9mIEFkYW0gYW5kIEV2ZSwgYW5kPC9wPgo8cD5hbHNvIHRoZSBhY2NvdW50IG9mIHRoZSBjcmVhdGlvbnMgb2YgQWRhbSBhbmQgRXZlLCBhcmUsIGJ5IHRoZSBzYW1lICB3cml0ZXIsICBjYWxsZWQgICdUaGUgIGJvb2sgIG9yICByZWNvcmQgIG9mICB0aGUgIDxlbT5nZW5lcmF0aW9uczwvZW0+ICBvZiBBZGFtLic5ICBUaGlzICBpcyAgdGhlICBsaXRlcmFsICBpbXBvcnQgIG9mICB0aGUgIHdvcmQ7ICBjb25zZXF1ZW50bHksIDxlbT5yZWdlbmVyYXRpb248L2VtPiBsaXRlcmFsbHkgaW5kaWNhdGVzIHRoZSB3aG9sZSBwcm9jZXNzIG9mIHJlbm92YXRpbmcgb3IgbmV3LWNyZWF0aW5nIG1hbi48L3A+CjxwPlRoaXMgcHJvY2VzcyBtYXkgY29uc2lzdCBvZiBudW1lcm91cyBkaXN0aW5jdCBhY3RzOyBidXQgaXQgaXMgaW4gYWNjb3JkYW5jZSAgd2l0aCAgdGhlICBnZW5lcmFsICB1c2FnZSAgdG8gIGdpdmUgIHRvICB0aGUgIGJlZ2lubmluZywgIG9yIGNvbnN1bW1hdGluZyBhY3QsIHRoZSBuYW1lIG9mIHRoZSB3aG9sZSBwcm9jZXNzLiBGb3IgdGhlIG1vc3QgcGFydCwgIGhvd2V2ZXIsICB0aGUgIG5hbWUgIG9mICB0aGUgIHdob2xlICBwcm9jZXNzICBpcyAgZ2l2ZW4gIHRvICB0aGUgY29uc3VtbWF0aW5nICBhY3QsICBiZWNhdXNlICB0aGUgIHByb2Nlc3MgIGlzICBhbHdheXMgIHN1cHBvc2VkIGluY29tcGxldGUgdW50aWwgdGhhdCBhY3QgaXMgcGVyZm9ybWVkLiBGb3IgZXhhbXBsZTogSW4gdGhlIHByb2Nlc3Mgb2YgdGFubmluZywgZnVsbGluZywgZm9yZ2luZywgZXRjLiB0aGUgc3ViamVjdCBvZiB0aGVzZSBvcGVyYXRpb25zIGlzIG5vdCAgc3VwcG9zZWQgIHRvICBiZSAgdGFubmVkLCAgZnVsbGVkLCAgZm9yZ2VkLCAgdW50aWwgIHRoZSAgbGFzdCAgYWN0ICBpcyBwZXJmb3JtZWQuICBTbyAgaW4gIGFsbCAgdGhlICBwcm9jZXNzZXMgIG9mICBuYXR1cmUg4oCUIGluICB0aGUgIGFuaW1hbCwgdmVnZXRhYmxlLCAgYW5kICBtaW5lcmFsICBraW5nZG9tcywgIHRoZSAgbGFzdCAgYWN0ICBjb25zdW1tYXRlcyAgdGhlIHByb2Nlc3MuICBUbyAgYWxsICBhY3F1YWludGVkICB3aXRoICB0aGUgIHByb2Nlc3MgIG9mICBhbmltYWxpemF0aW9uLCBnZXJtaW5hdGlvbiwgIGNyeXN0YWxsaXphdGlvbiwgIGV0Yy4gIG5vICBmYXJ0aGVyICBhcmd1bWVudCAgaXMgIG5lZWRlZC4gQnV0IGluIHRoZSBzdHlsZSBvZiBvdXIgQW1lcmljYW4gaHVzYmFuZG1lbiwgbm8gY3JvcCBub3IgYW5pbWFsIGlzIDxlbT5tYWRlLDwvZW0+IHVudGlsIGl0IGNvbWUgdG8gbWF0dXJpdHkuIFdlIG9mdGVuIGhlYXIgdGhlbSBzYXkgb2YgYSBnb29kIHNob3dlciwgb3IgYSBmZXcgY2xlYXIgZGF5cywgJnF1b3Q7VGhpcyBpcyB0aGUgPGVtPm1ha2luZzwvZW0+IG9mIHRoZSB3aGVhdCBvciAgY29ybi4mcXVvdDsgIEluICB0aGUgIHNhbWUgIHNlbnNlICBpdCAgaXMsICB0aGF0ICBtb3N0ICBDaHJpc3RpYW5zICBjYWxsIDxlbT5yZWdlbmVyYXRpb248L2VtPiA8c3Ryb25nPnRoZSBuZXcgYmlydGg8L3N0cm9uZz47IHRob3VnaCA8ZW0+YmVpbmcgYm9ybjwvZW0+IGlzIG9ubHkgdGhlIGxhc3QgYWN0IGluIG5hdHVyYWwgZ2VuZXJhdGlvbiwgYW5kIHRoZSBsYXN0IGFjdCBpbiByZWdlbmVyYXRpb24uPC9wPgo8cD5JbiAgdGhpcyAgd2F5ICB0aGUgIDxlbT5uZXcgIGJpcnRoPC9lbT4gIGFuZCAgPGVtPnJlZ2VuZXJhdGlvbjwvZW0+ICBhcmUgIHVzZWQgaW5kaXNjcmltaW5hdGVseSBieSBjb21tZW50YXRvcnMgYW5kIHdyaXRlcnMgb24gdGhlb2xvZ3ksIGFuZCBieSBhIGZpZ3VyZSBvZiBzcGVlY2gsIGl0IGlzIGp1c3RpZmllZCBvbiB3ZWxsIGVzdGFibGlzaGVkIHByaW5jaXBsZXMgb2YgcmhldG9yaWMuIFRoaXMgbGVhZHMgdXMgdG8gc3BlYWsgcGFydGljdWxhcmx5IG9mICh0aGUgbmV4dCBjaGFwdGVyKTwvcD4KPC9Db250ZW50U2xvdHNEaXN0cmlidXRvcj4K"},null]}