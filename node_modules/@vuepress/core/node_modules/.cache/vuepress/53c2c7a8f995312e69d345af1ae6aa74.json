{"remainingRequest":"/Users/leandrokanis/christian-system/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/leandrokanis/christian-system/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/leandrokanis/christian-system/docs/Part VII: Concluding Addresses/A WORD TO FRIENDLY ALIENS.md?vue&type=template&id=f819cfac","dependencies":[{"path":"/Users/leandrokanis/christian-system/docs/Part VII: Concluding Addresses/A WORD TO FRIENDLY ALIENS.md","mtime":1706587028227},{"path":"/Users/leandrokanis/christian-system/node_modules/cache-loader/dist/cjs.js","mtime":1706559905946},{"path":"/Users/leandrokanis/christian-system/node_modules/cache-loader/dist/cjs.js","mtime":1706559905946},{"path":"/Users/leandrokanis/christian-system/node_modules/babel-loader/lib/index.js","mtime":1696606865443},{"path":"/Users/leandrokanis/christian-system/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1706560022209},{"path":"/Users/leandrokanis/christian-system/node_modules/cache-loader/dist/cjs.js","mtime":1706559905946},{"path":"/Users/leandrokanis/christian-system/node_modules/vue-loader/lib/index.js","mtime":1706560022209},{"path":"/Users/leandrokanis/christian-system/node_modules/@vuepress/markdown-loader/index.js","mtime":1706560022604}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PHA+PGVtPjxzdHJvbmc+QSBXT1JEIFRPIEZSSUVORExZIEFMSUVOUy48L3N0cm9uZz48L2VtPjwvcD4KPHA+V2hldGhlciB0byByZWdhcmQgeW91IGluIHRoZSBsaWdodCBvZiA8ZW0+UHJvc2VseXRlcyBvZiB0aGUgR2F0ZSw8L2VtPiB3aG8gcmVmdXNlZCBjaXJjdW1jaXNpb24sIGJ1dCB3aXNoZWQgdG8gbGl2ZSBpbiB0aGUgbGFuZCBvZiBJc3JhZWwsIHRvIGJlIGluICB0aGUgc3VidXJicyBvZiB0aGUgY2l0aWVzICBvZiBKdWRhaCwgYW5kIHRvICBrZWVwIHNvbWUgb2YgdGhlIGluc3RpdHV0aW9ucyAgb2YgIHRoZSAgYW5jaWVudCAga2luZ2RvbSAgb2YgIEdvZCwgIHdpdGhvdXQgIGJlY29taW5nIGZlbGxvdy1jaXRpemVucyBvZiB0aGF0IGtpbmdkb207IG9yIHdoZXRoZXIgdG8gcmVnYXJkIHlvdSBhcyB0aGUgU2FtYXJpdGFucyBvZiBvbGQsIHdobyBidWlsdCBmb3IgdGhlbXNlbHZlcyBhIHRlbXBsZSBvZiBHb2QgdXBvbiBNb3VudCBHZXJpemltLCBoZWxkIGZhc3QgYSBwYXJ0IG9mIHRoZSBhbmNpZW50IHJldmVsYXRpb24gb2YgR29kLCBhbmQgIHJlamVjdGVkICBvbmx5ICBzdWNoICBwYXJ0cyAgb2YgIGl0ICBhcyAgZGlkICBub3QgIHN1aXQgIHRoZWlyIHByZWp1ZGljZXMg4oCUIHdvcnNoaXBwZWQgdGhlIEdvZCBvZiBJc3JhZWwgaW4gY29tbW9uIHdpdGggdGhlIGlkb2xzIG9mIHRoZSBuYXRpb25zLCBmcm9tIHdoaWNoIHRoZXkgc3ByYW5nIOKAlCBJIHNheSwgd2hldGhlciB0byByZWdhcmQgeW91IGluIHRoZSBsaWdodCBvZiB0aGUgb25lIG9yIHRoZSBvdGhlciBvZiB0aG9zZSBhbmNpZW50IHByb2Zlc3NvcnMgb2YgIHJlbGlnaW9uLCAgbWlnaHQgIHJlcXVpcmUgIG1vcmUgIHNraWxsICBpbiAgY2FzdWlzdHJ5ICB0aGFuICB3ZSBwb3NzZXNzIOKAlCBtb3JlIGxlaXN1cmUgdGhhbiB3ZSBoYXZlIGF0IG91ciBkaXNwb3NhbCDigJQgYW5kIG1vcmUgbGFib3IgdGhhbiBlaXRoZXIgb2YgdXMgaGF2ZSBwYXRpZW5jZSB0byBlbmR1cmUuIE9uZSB0aGluZywgaG93ZXZlciwgaXMgb2J2aW91cywgdGhhdCBpZiwgdW5kZXIgdGhlIFJlaWduIG9mIEhlYXZlbiBpdCBiZWhvb3ZlZCBzbyBnb29kIGEgbWFuIGFzIENvcm5lbGl1cyAoJ2EgbWFuIG9mIHBpZXR5LCBhbmQgb25lIHRoYXQgZmVhcmVkIEdvZCB3aXRoIGFsbCBoaXMgaG91c2UsIGdpdmluZyBhbHNvIG11Y2ggYWxtcyB0byB0aGUgcGVvcGxlLCBhbmQgcHJheWluZyB0byBHb2QgY29udGludWFsbHksJykgdG8gJzxlbT5oZWFyIHdvcmRzIGJ5IHdoaWNoIGhlIG1pZ2h0IGJlIHNhdmVkLDwvZW0+JyBhbmQgdG8gcHV0IG9uIENocmlzdCBieSBpbW1lcnNpb24gaW50byBoaXMgZGVhdGgsIHRoYXQgaGUgbWlnaHQgZW50ZXIgdGhlIGtpbmdkb20gb2YgaGVhdmVuLCBhbmQgZW5qb3kgdGhlIHJlbWlzc2lvbiBvZiBzaW5zLCBhbmQgdGhlIGhvcGUgb2YgIGFuICBpbmhlcml0YW5jZSAgYW1vbmcgIGFsbCAgdGhlICBzYW5jdGlmaWVkIOKAlCBjZXJ0YWlubHkgIGl0ICBpcyAgYm90aCBleHBlZGllbnQgYW5kIG5lY2Vzc2FyeSB0aGF0IHlvdSBhbHNvIGdvIGFuZCBkbyBsaWtld2lzZS48L3A+CjxwPkV2ZXJ5IHNlY3RhcmlhbiBpbiB0aGUgbGFuZCwgaG93IGhvbmVzdCBhbmQgcGlvdXMgc29ldmVyLCBvdWdodCB0byBidXJ5ICBoaXMgIHNlY3RhcmlhbmlzbSwgIGFuZCAgYWxsICBoaXMgIG90aGVyICBzaW5zICBvZiAgb21pc3Npb24gIGFuZCBjb21taXNzaW9uLCBpbiAndGhlIGJhdGggb2YgcmVnZW5lcmF0aW9uLicgSXQgaXMgYSBoaWdoIGNyaW1lIGFuZCBtaXNkZW1lYW5vciBpbiBhbnkgbWFuLCBwcm9mZXNzaW5nIHRvIGhhdmUgcmVjZWl2ZWQgdGhlIE1lc3NpYWggaW4gaGlzIHByb3BlciBwZXJzb24sIGNoYXJhY3RlciwgYW5kIG9mZmljZSwgdG8gcmVmdXNlIGFsbGVnaWFuY2UgdG8gaGltIGluIGFueXRoaW5nOyBhbmQgdG8gc3Vic3RpdHV0ZSBodW1hbiBpbnZlbnRpb25zIGFuZCB0cmFkaXRpb25zIGluIGxpZXUgb2YgdGhlIG9yZGluYW5jZXMgYW5kIHN0YXR1dGVzIG9mIFByaW5jZSBJbW1hbnVlbC4gSW5kZWVkLCB0aGUga2VlcGluZyB1cCBvZiBhbnkgZG9nbWEsIHByYWN0aWNlLCBvciBjdXN0b20sIHdoaWNoIGRpcmVjdGx5IG9yIGluZGlyZWN0bHkgc3VwcGxhbnRzICB0aGUgY29uc3RpdHV0aW9uLCBsYXdzLCBhbmQgdXNhZ2VzIG9mIHRoZSBraW5nZG9tICBvdmVyICB3aGljaCAgSmVzdXMgIHByZXNpZGVzLCAgaXMgIGRpcmVjdGx5ICBvcHBvc2VkICB0byAgaGlzIGdvdmVybm1lbnQ7IGFuZCB3b3VsZCB1bHRpbWF0ZSBpbiBkZXRocm9uaW5nIGhpbSBpbiBmYXZvciBvZiBhIHJpdmFsLCBhbmQgaW4gcGxhY2luZyB1cG9uIGhpcyB0aHJvbmUgdGhlIGF1dGhvciBvZiB0aGF0IGRvZ21hLCBwcmFjdGljZSwgb3IgdXNhZ2Ugd2hpY2ggc3VwcGxhbnRzIHRoZSBpbnN0aXR1dGlvbiBvZiB0aGUgU2F2aW9yIG9mIHRoZSB3b3JsZC48L3A+CjxwPkl0IGlzIHRvIHlvdSwgdGhlbiwgd2hvLCBpbiB0aGUgbmFtZSBvZiB0aGUgS2luZywgYXJlIGNoYW5naW5nIGhpcyBvcmRpbmFuY2VzLCBhbmQgc3Vic3RpdHV0aW5nIHlvdXIgb3duIGV4cGVkaWVudHMgZm9yIHRoZSB3aXNkb20gYW5kIGF1dGhvcml0eSBvZiB0aGUgSnVkZ2Ugb2YgYWxsLCB3ZSBub3cgcHJvcG9zZSB0aGUgZm9sbG93aW5nIGNvbnNpZGVyYXRpb25zOiDigJQ8L3A+CjxwPkV2ZXJ5IGtpbmdkb20gaGFzIG9uZSB1bmlmb3JtIGxhdyBvciBpbnN0aXR1dGlvbiBmb3IgbmF0dXJhbGl6aW5nIGFsaWVuczsgYW5kIHRoYXQgaW5zdGl0dXRpb24sIG9mIHdoYXRldmVyIHNvcnQgaXQgYmUsIGlzIG9ibGlnYXRvcnksIGJ5IHRoZSAgYXV0aG9yaXR5ICBvZiAgdGhlICBnb3Zlcm5tZW50LCAgdXBvbiAgZXZlcnkgIG9uZSAgd2hvICB3b3VsZCBiZWNvbWUgYSBjaXRpemVuLiBXZSBzYXkgaXQgaXMgb2JsaWdhdG9yeSB1cG9uIGhpbSB3aG8gZGVzaXJlcyB0byBiZSBhIGNpdGl6ZW4gdG8gc3VibWl0IHRvIHRoYXQgaW5zdGl0dXRpb24uIEJ1dCBkb2VzIG5vdCB5b3VyIHByYWN0aWNlIGFuZCB5b3VyIGRvZ21hIHBvc2l0aXZlbHkgc2F5IHRoYXQgaXQgaXMgbm90IHRoZSBkdXR5IG9mIGFuIGFsaWVuIHRvIGJlIGJvcm4gYWdhaW4sIGJ1dCB0aGF0IGl0IGlzIHRoZSBkdXR5IG9mIGhpcyBmYXRoZXIgb3IgZ3VhcmRpYW4gdG8gaGF2ZSBoaW0gbmF0dXJhbGl6ZWQ/IE5vdywgYWx0aG91Z2ggbWFueXRoaW5ncyBhcmUgaW4gY29tbW9uIHRoZSBkdXR5IG9mIGJyb3RoZXIsIGZhdGhlciwgYW5kIGNoaWxkLCB5ZXQgdGhvc2UgZHV0aWVzIHdoaWNoIGJlbG9uZyBzcGVjaWZpY2FsbHkgdG8gYSBmYXRoZXIgY2Fubm90IGJlbG9uZyB0byBoaXMgY2hpbGQsIGVpdGhlciBpbiByZWxpZ2lvbiwgbW9yYWxpdHksIG9yIHNvY2lldHkuIElmIGl0IGJlIHRoZSBmYXRoZXIncyBkdXR5IHRvICdvZmZlciBoaXMgY2hpbGQgdG8gdGhlIExvcmQsJyB0byBzcGVhayBpbiB5b3VyIG93biBzdHlsZSwgaXQgaXMgbm90IHRoZSBkdXR5IG9mIHRoZSBjaGlsZCB0byAgb2ZmZXIgaGltc2VsZi4gIEl0IHdhcyBub3QgIElzYWFjJ3MgIGR1dHkgdG8gYmUgIGNpcmN1bWNpc2VkLCBidXQgQWJyYWhhbSdzIGR1dHkgdG8gY2lyY3VtY2lzZSBoaW0uIElmLCB0aGVuLCBpdCB3YXMgeW91ciBmYXRoZXIncyBkdXR5IHRvIGhhdmUgbWFkZSB5b3UgY2l0aXplbnMgb2YgdGhlIGtpbmdkb20gb2YgaGVhdmVuLCBpdCBpcyBub3QgeW91ciBkdXR5IHRvIGJlY29tZSBjaXRpemVucywgdW5sZXNzIHlvdSBjYW4gcHJvZHVjZSBhIGxhdyBzYXlpbmcgdGhhdCBpbiA8ZW0+YWxsIGNhc2VzPC9lbT4gd2hlcmUgdGhlIGZhdGhlciBmYWlscyB0byBkbyBoaXMgZHV0eSwgdGhlbiBpdCBzaGFsbCBiZSB0aGUgZHV0eSBvZiB0aGUgY2hpbGQgdG8gZG8gdGhhdCB3aGljaCBoaXMgZmF0aGVyIG5lZ2xlY3RlZC48L3A+CjxwPkFnYWluIOKAlCBpZiBhbGwgZmF0aGVycywgbGlrZSB5b3VycywgaGFkLCB1cG9uIHRoZWlyIG93biByZXNwb25zaWJpbGl0eSwgd2l0aG91dCBhbnkgY29tbWFuZCBmcm9tIHRoZSBMb3JkLCBiYXB0aXplZCB0aGVpciBjaGlsZHJlbiwgdGhlcmUgd291bGQgbm90IGJlIG9uZSBpbiBhIG5hdGlvbiB0byB3aG9tIGl0IGNvdWxkIGJlIHNhaWQsICdSZXBlbnQgYW5kIGJlICBiYXB0aXplZDsnICBtdWNoICBsZXNzICBjb3VsZCAgaXQgIGJlICBzYWlkICB0byAgZXZlcnkgIHBlbml0ZW50LCAgJ0JlIGJhcHRpemVkLCBldmVyeSBvbmUgb2YgeW91LCBieSB0aGUgYXV0aG9yaXR5IG9mIHRoZSBMb3JkLCBmb3IgdGhlIHJlbWlzc2lvbiBvZiBzaW5zLicgVGhlc2UgcmVtYXJrcyBhcmUgb25seSBpbnRlbmRlZCB0byBzaG93IHRoYXQgeW91ciAgaW5zdGl0dXRpb25zICBkbywgIGluICB0cnV0aCwgIGdvICB0byAgdGhlICBzdWJ2ZXJzaW9uICBvZiAgdGhlIGdvdmVybm1lbnQgb2YgQ2hyaXN0LCBhbmQgdG8gdGhlIGVudGlyZSBhYm9saXRpb24gb2YgdGhlIGluc3RpdHV0aW9ucyBvZiBoaXMga2luZ2RvbS4gT24gdGhpcyBhY2NvdW50IGFsb25lLCBpZiBmb3Igbm8gb3RoZXIgcmVhc29uLCB5b3Ugb3VnaHQgIHRvICBiZSAgY29uc3RpdHV0aW9uYWxseSAgbmF0dXJhbGl6ZWQsICBhbmQgIGJlICBsZWdhbGx5ICBhbmQgaG9ub3JhYmx5IGluZHVjdGVkIGludG8gdGhlIGtpbmdkb20gb2YgaGVhdmVuLiBJdCBpcyBhIHNvbGVtbiBkdXR5IHlvdSAgb3dlICB0aGUgIEtpbmcgIGFuZCAgaGlzICBnb3Zlcm5tZW50OyAgYW5kICBpZiAgeW91ICBoYXZlICBhIGNvbnNjaWVuY2UgIGZvcm1lZCAgYnkgIHRoZSAgb3JhY2xlcyAgb2YgIEdvZCwgIHlvdSAgY2FuICBoYXZlICBubyBjb25maWRlbmNlIGluIEdvZCwgbm9yIHJlYWwgcGVhY2Ugb2YgbWluZCwgc28gbG9uZyBhcyB5b3UgZ2l2ZSB5b3VyIHN1cHBvcnQsIHlvdXIgY291bnRlbmFuY2UsIGV4YW1wbGUsIGFuZCBlbnRpcmUgaW5mbHVlbmNlIHRvIGJyZWFrIGRvd24gdGhlIGluc3RpdHV0aW9ucyBvZiBKZXN1cyBDaHJpc3QsIHRvIG9wZW4gaGlzIGtpbmdkb20gdG8gYWxsIHRoYXQgaXMgYm9ybiBvZiB0aGUgZmxlc2gsIGFuZCB0byBwcmV2ZW50LCBhcyBmYXIgYXMgeW91IGNhbiwgZXZlcnkgbWFuICBmcm9tICB0aGUgIHBsZWFzdXJlICBvZiAgY2hvb3NpbmcgIHdob20gIGhlICBzaGFsbCAgb2JleSDigJQgb2YgY29uZmVzc2luZyBoaW0gYmVmb3JlIG1lbiDigJQgb2YgdGFraW5nIGhpcyAgeW9rZSDigJQgb2YgZHlpbmcsIGJlaW5nIGJ1cmllZCwgYW5kIHJhaXNlZCB3aXRoIENocmlzdCBpbiBoaXMgZ3JhY2lvdXMgaW5zdGl0dXRpb24uIElmIEplc3VzIGhpbXNlbGYsIGZvciB0aGUgc2FrZSBvZiBmdWxmaWxsaW5nIGFsbCByaWdodGVvdXNuZXNzLCBvciBvZiBob25vcmluZyBldmVyeSBkaXZpbmUgaW5zdGl0dXRpb24sIHRob3VnaCBoZSBuZWVkZWQgbm90IHRoZSByZWZvcm1hdGlvbiBmb3IgcmVtaXNzaW9uICBvZiAgc2lucyAgd2hpY2ggIEpvaG4gIHByZWFjaGVkLCAgd2FzICBpbW1lcnNlZCAgYnkgSm9obiDigJQgd2hhdCBoYXZlIHlvdSB0byBzYXkgZm9yIHlvdXJzZWx2ZXMg4oCUIHlvdSB3aG8gd291bGQgY2xhaW0gdGhlIGhvbm9ycyBhbmQgcHJpdmlsZWdlcyBvZiB0aGUga2luZ2RvbSBvZiBoZWF2ZW4sIHJlZnVzaW5nIHRvIGZvbGxvdyAgdGhlICBleGFtcGxlICBvZiAgSmVzdXMsICBhbmQgIHdobyAgdmlydHVhbGx5ICBzdWJ2ZXJ0ICBoaXMgYXV0aG9yaXR5IGJ5IHN1cHBvcnRpbmcgYSBzeXN0ZW0gd2hpY2ggd291bGQsIGlmIGNhcnJpZWQgb3V0LCBub3QgYWxsb3cgYSB2b2x1bnRhcnkgYWdlbnQgaW4gdGhlIHJhY2Ugb2YgQWRhbSwgdG8gZG8gdGhhdCB3aGljaCBhbGwgdGhlIGZpcnN0IGNvbnZlcnRzIG9mIENocmlzdCBkaWQsIGJ5IGF1dGhvcml0eSBvZiB0aGUgY29tbWlzc2lvbiB3aGljaCBKZXN1cyBnYXZlIHRvIGhpcyBBcG9zdGxlcz88L3A+CjxwPkFnYWluIOKAlCB3aGF0ZXZlciBjb25maWRlbmNlIHlvdSBtYXkgbm93IHBvc3Nlc3MsIHRoYXQgeW91IGFyZSBnb29kIGNpdGl6ZW5zIG9mIHRoZSBraW5nZG9tIG9mIE1lc3NpYWgsIHRoYXQgY29uZmlkZW5jZSBpcyBub3QgZm91bmRlZCAgdXBvbiAgYSAgJnF1b3Q7PHN0cm9uZz50aHVzICBzYWl0aCAgdGhlICBsb3JkPC9zdHJvbmc+LCZxdW90OyAgYnV0ICB1cG9uICB5b3VyICBvd24gcmVhc29uaW5ncywgd2hpY2ggYWxsIG1lbiBtdXN0IGFja25vd2xlZGdlIG1heSBiZSBpbiB0aGlzLCBhcyBpbiBtYW55IG90aGVyIHRoaW5ncywgZmFsbGFjaW91cy4gSmVzdXMgaGFzIHNhaWQsICdIZSB0aGF0IGJlbGlldmVzIGFuZCBpcyBpbW1lcnNlZCBzaGFsbCBiZSBzYXZlZDsnIGFuZCBQZXRlciBjb21tYW5kZWQgZXZlcnkgcGVuaXRlbnQgdG8gYmUgaW1tZXJzZWQgZm9yIHRoZSByZW1pc3Npb24gb2YgaGlzIHNpbnMuIE5vdyBoZSB3aG8gaGVhcnMgdGhlIHdvcmQsIGJlbGlldmVzIGl0LCBhbmQgaXMgb24gaGlzIG93biBjb25mZXNzaW9uIGltbWVyc2VkLCBoYXMgYW4gYXNzdXJhbmNlLCBhIGNvbmZpZGVuY2UsIHdoaWNoIGlzIGltcG9zc2libGUgZm9yIHlvdSB0byBoYXZlLjwvcD4KPHA+TGV0IG1lIGFkZCBvbmx5IGFub3RoZXIgY29uc2lkZXJhdGlvbiwgZm9yIHdlIGFyZSBub3Qgbm93IGFyZ3VpbmcgdGhlIG1lcml0cyBvZiB5b3VyIHRoZW9yeSwgb3IgdGhhdCBvZiBhbnkgcGFydHk6IGl0IGlzIHlvdXIgZHV0eSwgYXMgeW91ICBkZXNpcmUgIHRoZSAgdW5pb24gIG9mICAod2hhdCAgeW91ICBjYWxsKSAgdGhlICBjaHVyY2gsICBhbmQgIHRoZSBjb252ZXJzaW9uIG9mIHRoZSB3b3JsZCwgZm9ydGh3aXRoIHRvIGJlIGltbWVyc2VkIGFuZCB0byBiZSBib3JuIGNvbnN0aXR1dGlvbmFsbHkgaW50byB0aGUga2luZ2RvbTsgYmVjYXVzZSBhbGwgUHJvdGVzdGFudHMsIG9mIGV2ZXJ5IG5hbWUsIGlmIHNpbmNlcmUgYmVsaWV2ZXJzIGluIEplc3VzIDxlbT5hcyB0aGUgQ2hyaXN0LDwvZW0+IGlycmVzcGVjdGl2ZSBvZiBldmVyeSAgb3BpbmlvbiAgZm91bmQgIGluICBhbnkgIGh1bWFuICBjcmVlZCwgIGNvdWxkICBpZiAgdGhleSAgd291bGQsIGhvbm9yIGFuZCBvYmV5IGhpcyBpbnN0aXR1dGlvbnMsIGNvbWUgaW50byBvbmUgZm9sZCwgYW5kIHNpdCBkb3duIHRvZ2V0aGVyIHVuZGVyIHRoZSByZWlnbiBvZiB0aGUgTWVzc2lhaC4gSWYgYWxsIHdvdWxkIGZvbGxvdyB5b3VyIGV4YW1wbGUsIHRoaXMgd291bGQgbmVjZXNzYXJpbHkgZm9sbG93OyBpZiB0aGV5IGRvIG5vdCwgeW91IGhhdmUgZG9uZSB5b3VyIGR1dHkuIEluIGJlaW5nIHRodXMgaW1tZXJzZWQsIGFsbCB0aGUgd29ybGQsIENhdGhvbGljIGFuZCBQcm90ZXN0YW50LCBhZG1pdCB0aGF0IHlvdSBhcmUgdHJ1bHkgYW5kIHNjcmlwdHVyYWxseSBiYXB0aXplZDsgZm9yIGFsbCBhZG1pdCB0aGF0IGFuIDxlbT5pbW1lcnNlZDwvZW0+IHBlbml0ZW50IGlzIGNvbnN0aXR1dGlvbmFsbHkgYmFwdGl6ZWQgaW50byBDaHJpc3Q7IGJ1dCBvbmx5IGEgcGFydCBvZiB0aGUgcHJvZmVzc2luZyB3b3JsZCBjYW4gYWRtaXQgdGhhdCByaXRlICBvZiAgaW5mYW50ICBhZmZ1c2lvbiAgb24gIHdoaWNoICB5b3UgIHJlbHkgIGFzICBpbnRyb2R1Y2luZyAgeW91LCB3aXRob3V0IHByZXZpb3VzIGtub3dsZWRnZSwgZmFpdGgsIG9yIHJlcGVudGFuY2UsIGludG8gdGhlIGZhbWlseSBvZiAgR29kLiAgQWNxdWl0LCAgdGhlbiwgIHlvdXIgIGNvbnNjaWVuY2U7ICBmb2xsb3cgIHRoZSAgZXhhbXBsZSAgb2YgSmVzdXM7ICBob25vciAgYW5kICBzdXBwb3J0ICBoaXMgIGF1dGhvcml0eTsgIHByb21vdGUgIHRoZSAgdW5pb24gIGFuZCBwZWFjZSBvZiB0aGUgZmFtaWx5IG9mIEdvZDsgZG8gd2hhdCBpbiB5b3UgbGllcyBmb3IgdGhlIGNvbnZlcnNpb24gb2YgdGhlIHdvcmxkOyBlbnRlciBpbnRvIHRoZSBmdWxsIGVuam95bWVudCBvZiB0aGUgYmxlc3NpbmdzIG9mIHRoZSBraW5nZG9tIG9mIGhlYXZlbiBieSBjb25mZXNzaW5nIHRoZSBhbmNpZW50IGZhaXRoLCBhbmQgYnkgYmVpbmcgaW1tZXJzZWQgaW4gdGhlIG5hbWUgb2YgSmVzdXMgaW50byB0aGUgbmFtZSBvZiB0aGUgRmF0aGVyLCBhbmQgb2YgdGhlIFNvbiwgYW5kIG9mIHRoZSBIb2x5IFNwaXJpdCwgZm9yIHRoZSByZW1pc3Npb24gb2Ygc2lucy4gVGhlbiB5b3UgbWF5ICBzYXkgIGFzICBKZXN1cyAgc2FpZCAgdG8gIHRoZSAgU2FtYXJpdGFuICB3b21hbiwgIEFsdGhvdWdoICB0aGUgU2FtYXJpdGFucyBoYXZlIGEgdGVtcGxlIG9uIE1vdW50IEdlcml6aW0sIGEgcHJpZXN0aG9vZCwgYW5kIHRoZSBmaXZlIGJvb2tzIG9mIE1vc2VzLCAnU2FsdmF0aW9uIGlzIG9mIHRoZSBKZXdzLicgQWx0aG91Z2ggdGhlIHNlY3RzIGhhdmUgdGhlIE9yYWNsZXMgb2YgR29kLCBodW1hbiBjcmVlZHMsIG1hbnkgYWx0YXJzLCBwcmllc3RzLCBhbmQgcmVsaWdpb3VzIHVzYWdlcywgPGVtPnRoZSBlbmpveW1lbnQgb2Ygc2FsdmF0aW9uPC9lbT4gaXMgYW1vbmcgdGhlbSB3aG8gc2ltcGx5IGJlbGlldmUgd2hhdCB0aGUgQXBvc3RsZXMgd3JvdGUgY29uY2VybmluZyBKZXN1cywgYW5kIHdobyBmcm9tICB0aGUgaGVhcnQgb2JleSB0aGF0ICBtb3VsZCBvZiBkb2N0cmluZSB3aGljaCB0aGUgQXBvc3RsZXMgZGVsaXZlcmVkIHRvIHVzLjwvcD4KPHA+SW4gc28gZG9pbmcgIHlvdSB3aWxsLCBtb3Jlb3ZlciwgbW9zdCB3aXNlbHkgIGNvbnN1bHQgIHlvdXIgb3duIHNhZmV0eSBhbmQgc2VjdXJpdHkgZnJvbSB0aGUgc2lnbmFsIGNhbGFtaXRpZXMgdGhhdCBhcmUgZXZlcnkgZGF5IGFjY3VtdWxhdGluZywgYW5kIHNvb24gdG8gZmFsbCB3aXRoIG92ZXJ3aGVsbWluZyB2aW9sZW5jZSBvbiBhIGRpc3RyYWN0ZWQsIGRpdmlkZWQsIGFsaWVuYXRlZCwgYW5kIGFkdWx0ZXJvdXMgZ2VuZXJhdGlvbi4gSWYgeW91IGFyZSAnPGVtPnRoZSBwZW9wbGUgb2YgR29kLDwvZW0+JyBhcyB5b3UgcHJvZmVzcywgYW5kIGFzIHdlIHdvdWxkIGZhaW4gaW1hZ2luZSwgdGhlbiB5b3UgYXJlIGNvbW1hbmRlZCBieSBhIHZvaWNlIGZyb20gaGVhdmVuLCAnQ29tZSBvdXQgb2YgaGVyLCA8ZW0+bXkgcGVvcGxlLDwvZW0+IHRoYXQgeW91IHBhcnRha2Ugbm90IG9mIHRoZSBzaW5zIG9mIG15c3RpYyBCYWJ5bG9uLCBhbmQgdGhhdCB5b3UgcmVjZWl2ZSBub3QgYSBwb3J0aW9uIG9mIGhlciBwbGFndWVzLicxIElmIGFmZmxpY3Rpb24sIGFuZDwvcD4KPHA+c2hhbWUsIGFuZCBwb3ZlcnR5LCBhbmQgcmVwcm9hY2gsIHdlcmUgdG8gYmUgdGhlIGluYWxpZW5hYmxlIGxvdCBvZiB0aGUgbW9zdCBhcHByb3ZlZCBzZXJ2YW50cyBvZiBHb2QsIGl0IGlzIGJldHRlciwgaW5maW5pdGVseSBiZXR0ZXIgZm9yIHlvdSAgdG8gIHN1ZmZlciAgd2l0aCAgdGhlbSwgIHRoYW4gIHRvICBlbmpveSAgZm9yICBhICBzZWFzb24gIGFsbCAgdGhhdCAgYSBjb3JydXB0ZWQgYW5kIGFwb3N0YXRlIHNvY2lldHkgY2FuIGJlc3RvdyB1cG9uIHlvdS4gUmVtZW1iZXIgd2hvICBpdCAgaXMgIHRoYXQgIGhhcyAgc2FpZCwgICdIYXBweSAgYXJlICB0aGV5ICB3aG8gIGtlZXAgIGhpcyBjb21tYW5kbWVudHMsIGZvciB0aGV5IHNoYWxsIGhhdmUgYSByaWdodCB0byB0aGUgdHJlZSBvZiBsaWZlLCBhbmQgdGhleSBzaGFsbCBlbnRlciBpbiB0aHJvdWdoIHRoZSBnYXRlcyBpbnRvIHRoZSBjaXR5ISc8L3A+CjwvQ29udGVudFNsb3RzRGlzdHJpYnV0b3I+Cg=="},null]}