{"remainingRequest":"/Users/leandrokanis/christian-system/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/leandrokanis/christian-system/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/leandrokanis/christian-system/docs/Part II: Foundation of Christian Union/6. Purity of Speech.md?vue&type=template&id=2af65c29","dependencies":[{"path":"/Users/leandrokanis/christian-system/docs/Part II: Foundation of Christian Union/6. Purity of Speech.md","mtime":1706585177826},{"path":"/Users/leandrokanis/christian-system/node_modules/cache-loader/dist/cjs.js","mtime":1706559905946},{"path":"/Users/leandrokanis/christian-system/node_modules/cache-loader/dist/cjs.js","mtime":1706559905946},{"path":"/Users/leandrokanis/christian-system/node_modules/babel-loader/lib/index.js","mtime":1696606865443},{"path":"/Users/leandrokanis/christian-system/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1706560022209},{"path":"/Users/leandrokanis/christian-system/node_modules/cache-loader/dist/cjs.js","mtime":1706559905946},{"path":"/Users/leandrokanis/christian-system/node_modules/vue-loader/lib/index.js","mtime":1706560022209},{"path":"/Users/leandrokanis/christian-system/node_modules/@vuepress/markdown-loader/index.js","mtime":1706560022604}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}