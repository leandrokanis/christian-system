{"remainingRequest":"/Users/leandrokanis/christian-system/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/leandrokanis/christian-system/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/leandrokanis/christian-system/docs/Part IV: Remission of Sins/Proposition 1.md?vue&type=template&id=0c2adc72","dependencies":[{"path":"/Users/leandrokanis/christian-system/docs/Part IV: Remission of Sins/Proposition 1.md","mtime":1706585989568},{"path":"/Users/leandrokanis/christian-system/node_modules/cache-loader/dist/cjs.js","mtime":1706559905946},{"path":"/Users/leandrokanis/christian-system/node_modules/cache-loader/dist/cjs.js","mtime":1706559905946},{"path":"/Users/leandrokanis/christian-system/node_modules/babel-loader/lib/index.js","mtime":1696606865443},{"path":"/Users/leandrokanis/christian-system/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1706560022209},{"path":"/Users/leandrokanis/christian-system/node_modules/cache-loader/dist/cjs.js","mtime":1706559905946},{"path":"/Users/leandrokanis/christian-system/node_modules/vue-loader/lib/index.js","mtime":1706560022209},{"path":"/Users/leandrokanis/christian-system/node_modules/@vuepress/markdown-loader/index.js","mtime":1706560022604}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:
<ContentSlotsDistributor :slot-key="$parent.slotKey"><p>Proposition 1</p>
<p><em><strong>The Apostles taught their disciples, or converts, that their sins were forgiven, and uniformly addressed them as pardoned or justified persons.</strong></em></p>
<p>John testifies that the youngest disciples were pardoned. &quot;I write to you, little children, because your sins <em>are forgiven you</em> on account of his name.&quot;2 The young men strong in the Lord and the old men steadfast in the Lord, he commends for their attainments; but the <em>little children,</em> the youngest converts, he addressed as possessing this  blessing  as  one  common  to  all  disciples,  &quot;Your  sins  are forgiven you, <em>on account of his name.</em>&quot;</p>
<p>Paul, in his letter to the Hebrews, asserts, that one of the provisions of the New Institution is <em>the remission of the sins of all under it.</em> &quot;<em>Their sins</em> and iniquities I will remember no more.&quot;3 From this he argues, as a first principle, in the Christian economy, &quot;Now where remission of these is, no more offering for sin is needed.&quot;4 The reason  assigned  by  the  Apostles  why  <em>Christians</em>  have  no  <em>sin offering</em>  is,  because  they  have  obtained  remission  of  sins  as  a standing provision in the New Institution.</p>
<p>The same Apostle testifies that the Ephesian disciples had obtained remission. &quot;Be to one another kind, tenderhearted, forgiving each other, even as God for Christ's sake <em>has forgiven you.</em>&quot;5 Here, also,</p>
<p>in the enumeration of Christian privileges and immunities under Christ,  he  asserts  forgiveness  of  sins  as  the  common  lot  of  all disciples. &quot;In whom we have redemption through his blood, even <em>the forgiveness of sins,</em> according to the riches of his favor.&quot;6 In his letter to the Colossians, he uses the same words — &quot;By whom we have <em>the forgiveness of sins.</em>&quot;7</p>
<p>Figurative expressions are used by the same Apostle, expressive of the same forgiveness common to all Christians. &quot;And such (guilty characters) were some of you; but <em>you are washed;</em> but <em>you are sanctified;</em> but <em>you are justified</em> by the name of the Lord Jesus, and</p>
<p>by the Spirit of God.&quot;8 Peter, also, is a witness here. &quot;Seeing <em>you have purified your souls</em> by obeying the truth through the Spirit.&quot;9</p>
<p>But  there  is  no  need  of  foreign,  or  remote,  or  figurative expressions, when so literally and repeatedly the Apostles assert it as one of the adjuncts of being a disciple of Jesus. Had we no other testimony than that found in a single letter to the Colossians, it would be sufficient to sustain this position. The command as given in chapter 3: 13, assumes it as a principle. &quot;<em>As Christ forgave you, so  also  do  you.</em>&quot;  But  in  the  second  chapter  he  makes  this  an inseparable  adjunct  of  being  in  Christ.  &quot;You  are  <em>complete</em>  in him — circumcised — buried with him — raised with him — made alive with him — <strong>having forgiven you all trespasses</strong>.&quot;</p>
<p>These  explicit  testimonies  from  the  most  illustrious  witnesses, sustain my first proposition. On these evidences I rely, and I shall henceforth speak of it as a truth not to be questioned, viz.; that all the disciples of Christ converted in the apostolic age, were taught by the Apostles to consider themselves as pardoned persons.</p>
<p>Proposition 10</p>
<p><em><strong>I now proceed to show that immersion and washing of          regeneration are two Bible names for the same act, contemplated in two different points of view.</strong></em></p>
<p>The term <em>regeneration</em> occurs but twice in the common version of the New Testament, and not once in the Old Testament. The first is Matt. 19:28. &quot;You that have followed me in the regeneration, when the Son of Man shall sit on the throne of his glory, you also shall sit upon twelve thrones, judging the twelve tribes of Israel.&quot; Dr. George  Campbell,  following  the  punctuation  adopted  by Griesbach,  and  substituting  the  word  <em>renovation</em>  instead  of <em>regeneration,</em> renders it, &quot;That, at the <em>renovation,</em> when the Son of Man shall be seated on his glorious throne,  you, my followers, sitting also upon twelve thrones,&quot; etc. <em>Genesis,</em> being the term used for  <em>creation,  palingenesia,</em>  denotes  the  new  creation — either literally  at  the  resurrection  of  the  dead,  or  figuratively  at  the commencement of the Christian era, or at the commencement of the Millennium. Josephus, the Jew, called the return of Israel to their  own  land  and  institution,  &quot;The  Regeneration&quot;  or &quot;Palingenesia.&quot;</p>
<p>No  writer  of  any  note,  critic  or  expositor,  supposes  that <em>regeneration</em> in Matt. 19 applies to what is, in theology, called the <em>new birth, or regeneration of the soul</em> — not even the Presbyterian Matthew  Henry,  nor  Dr.  Whitby,  Campbell,  Macknight, Thompson; nor, indeed, any writer we recollect ever to have read. Regeneration in this passage denotes a state, a new state of things. In the same sense we often use the term. The American revolution was  the  regeneration  of  the  country  or  the  government.  The commencement of the Christian era was a regeneration — so will be the creation of the new Heavens and new Earth. As this is so plain a  matter,  and  so  generally  admitted,  we  proceed  to  the  second occurrence of this term.</p>
<p>&quot;God saved us by <em>the washing of regeneration,</em> and renewing of the  Holy  Spirit.&quot;41  God  has  saved  us  through  the  <em>bath  of</em></p>
<p><em>regeneration,</em>  and  the  renewing  of  the  Holy  Spirit.  This  is  the second time the word <em>regeneration</em> is found in the New Testament; and  here  it  is  conceded  by  the  most  learned  Paidobaptists  and Baptists, that it refers to immersion. Though I have been led to this conclusion from my views of the Christian religion, yet I neither hold it myself, nor justify it to others on this account. I choose rather to establish it by other testimonies than by those who agree with me in the import of this institution. Among these I shall place Dr.  James  Macknight,  formerly  prolocutor  or  moderator  of  the Presbyterian church of Scotland, and translator of the Apostolic Epistles.  One  of  his  notes  upon  Titus  3:5,  is  in  the  following words: — &quot;Through  the  bath  of  regeneration.&quot;  &quot;Through  <em>baptism,</em> called the bath of regeneration, not because any change in nature&quot; (but  I  would  not  say  in  the  <em>state</em>)  &quot;of  the  baptized  person  is produced  by  baptism;  but  because  it  is  an  emblem  of  the purification of his soul from sin.&quot; He then quotes in proof, (Acts 22:16.)  &quot;Arise,  and  be  immersed,  and  wash  thee  from  thy sins.&quot; — <em>Paul.</em> He supports this view also from Eph. 5:26, and John 3:5. &quot;The bath of regeneration,&quot; is then according to this learned Paidobaptist, Christian immersion.</p>
<p>Parkhurst,  in  his  Lexicon,  upon  the  word  <em>loutron,</em>  connects  the same <em>phrase,</em> the washing or bath of regeneration, with Eph. 5:26, and John 3:5, as alluding to immersion. So say all the critics, one by  one,  as  far  as  I  know.  Even  Matthew  Henry,  the  good  and venerable Presbyterian commentator, concedes this point also, and quotes Eph. 5:26, Acts 22:16, and Matt. 28:19-20, in support of the conclusion that the <em>washing of regeneration</em> refers to baptism.</p>
<p>Our opponents themselves being judges, we have gained this point, viz.  that the only  time  that the phrase  <em>washing  of  regeneration</em> occurs in the New Testament, with reference to a personal change, it means, or is equivalent to, immersion. <em>Washing of regeneration and immersion, are therefore only two names for the same thing.</em> Although I might be justified in proceeding to another topic, and in supposing this point to be fully established, I choose rather, for the sake of <em>the slow to apprehend,</em> to fortify this conclusion by some other testimonies and arguments.</p>
<p>As regeneration is taught to be equivalent to &quot;<em>being born again,</em>&quot; and understood to be of the same import with a new birth, we shall examine it under this metaphor. For if immersion be equivalent to regeneration, and regeneration be of the same import with being born  again,  then  being  born  again  and  being  immersed  are  the same thing; for this plain reason, that things which are equal to the same  thing,  are  equal  to  one  another.  <em>All  must  admit,  that  no person can be born again of that which he receives.</em> For as no person is born naturally — so no person can be born again, or born metaphorically — of that which he receives. It destroys the idea, the figure,  the  allusion,  and  every  thing  else  which  authorizes  the application of these words to any change which takes place in man, to suppose that the subject of the new birth, or regeneration, is born again  of  something  which  he  has  received.  This  single  remark shows the impropriety, and inaccuracy of thought; or, perhaps, the want of thought which the popular notions of regeneration sanction and sanctify.</p>
<p>In  being  born  naturally  there  is  the  begetter,  and  that  which  is begotten. These are not the same. The act of being born is different from  that  which  is  born.  Now  the  Scriptures  carry  this  figure through  every  prominent  point  of  coincidence.  There  is  the begetter. &quot;Of his own will he hath begotten or impregnated us;&quot; says James the Apostle. &quot;<em>By the word of truth,</em>&quot; as the incorruptible seed; or, as Peter says, &quot;We are born again, not from corruptible, but  from  incorruptible  seed,  the  word  of  God  which  endureth forever.&quot; But when the act of being born is spoken of, then the water is introduced. Hence, before we come into the kingdom we are born of water.</p>
<p>The Spirit of God is the begetter, the gospel is the seed; and being thus begotten and quickened, we are born of the water. A child is alive before it is born, and the act of being born only changes its state, not its life. Just so in the metaphorical birth. Persons are begotten by the Spirit of God, impregnated by the word, and born of the water.</p>
<p>In one sense a person is born of his father; but not until he is first born of his mother. So in every place where water and the Spirit, or water and the Word, are spoken of, <em>the water stands first.</em> Every child is born of its father, when it is born of its mother. Hence the Savior put the mother first, and the Apostles follow him. No other reason can be assigned for placing the water first. How uniform this style! Jesus says to Nicodemus, &quot;You must be born again, or you cannot discern the reign of God.&quot; <em>Born again!</em> What means this? &quot;Nicodemus, unless you are born of water and the Spirit you cannot enter into the Kingdom of God.&quot; So Paul speaks to the Eph. 5:26, &quot;He cleansed the  church,&quot; or the disciples, &quot;by  <em>a bath  of water,  and  the  Word.</em>&quot;  And  to  Titus  he  says,  &quot;He  saved  the disciples <em>by the bath</em> of regeneration, and renewing of the Holy Spirit.&quot; Now, as soon as, and not before, a disciple, who has been begotten of God, is born of water, he is born of God, or of the Spirit. *Regeneration is, therefore, the act of being born.*42 Hence its connection always with water. Reader, reflect — what a jargon, what a confusion, have the mystic doctors made of this metaphorical expression, and of this topic of regeneration. To call the receiving of any spirit, or any influence, or energy, or any operation upon the heart of man, regeneration, is an abuse of all speech, as well as a departure from the diction of the Holy Spirit, *who calls nothing personal regeneration, except the act of immersion.*43</p>
<p>Some curious criticisms have been offered, to escape the force of the plain declaration of Jesus and his Apostles, upon this subject. Some say, that the words, &quot;Except a man be born of water and Spirit,&quot; are not to be understood literally. Surely, then, if to be born of water does not mean to be born of water, to be born of the Spirit must mean something else than to be born of the Spirit. This is so fanatical and extravagant as to need no other exposure. He who cannot see the propriety of calling immersion a being born again, can  see  no  propriety  in  any  metaphor  in  common  use.  A resurrection is a new birth. Jesus is said to be the <em>first born</em> from the dead; because the first who rose from the dead to die no more. And, surely, there is no abuse of speech, but the greatest propriety in saying, that he who has died to sin, and been buried in water, when  raised  up  again  out  of  that  element,  is  born  again  or regenerated.  If  Jesus  was  born  again,  when  he  came  out  of  a sepulchre, surely he is born again who is raised up out of the grave of waters.</p>
<p>Those who are thus begotten and born of God, are children of God. It would be monstrous supposition, that such persons are not freed from their sins. <em>To be born of God, and born in sin, is conceivable.</em> Remission of sins is as certainly granted to &quot;<em>the born of God,</em>&quot; as life eternal, and deliverance from corruption, will be granted to the <em>children of the resurrection,</em> when born from the grave.</p>
<p>To illustrate what has, we presume to say, been now proved, we shall  consider  <em>political  regeneration.</em>  Though  the  term <em>regeneration</em> is laxly employed in this association; yet, by such a license  of  speech,  we  may  illustrate  this  subject  to  the apprehension  of  all.  Yes,  the  whole  subject  of  faith,  change  of heart, regeneration, and character.</p>
<p>All the civilized nations and kingdoms have constitutions; and in their  constitutions  they  have  declared  who  are  members  of  the social compact. Besides those who compose the community at the time a constitution is adopted, they say who shall participate its blessings in all time coming; that is, who shall be admitted into it, and by what means they shall become members of it. They have always decreed that their own posterity shall inherit their political rights and immunities. But they have, also ordained that foreigners; that is, members of other communities, may become, by adoption, or  naturalization,  citizens,  or  fellow  members  of  the  same community.  But  they  have,  in  their  wisdom  and  benevolence, instituted  a  rite  or  form  of  adoption,  which  form  has  much meaning; and which when submitted to, changes the state of the subject of it. Now, as the Savior consented to be called a <em>King,</em> and to call the community over which he presides a <em>Kingdom,</em> it was because of the analogy between these human institutions and his institution; and for the purpose not of confounding, but of aiding the  human  mind  in  apprehending  and  comprehending  the  great object of his mission to the world. And it is worthy of the most emphatic attention, that it was <strong>when speaking of a kingdom, he spoke of being born again</strong>. Yes, on that occasion, and on that occasion only, when he spoke of <em>entering into his kingdom,</em> did he speak of the necessity of <strong>being born again</strong>. And had he not chosen that figure he would not have chosen the figure of <em>a new birth.</em> With  these  facts  and  circumstances  before  us  let  us  examine political  regeneration  as  the  best  conceivable  illustration  of religious regeneration.</p>
<p>A. B. was born in the island of Great Britain, a native subject of George III. king of Great Britain. He was much attached to his native  island,  to  the  people,  the  manner  and  customs  of  his ancestors and kinsmen. With all these attachments still increasing, he grew up to manhood. Then he heard the report of this good land, of this large, fertile, and most desirable country. The country, the people, and the government, were represented to him in the most  favorable  light.  Sometimes  these  representations  were exaggerated; but still he could separate the truth from the fable: and was fully persuaded not only of the existence of these United States,  but  also  of  the eligibility  of  being  a  citizen  thereof.  He believed  the  testimony  which  he  heard,  resolved  to  expatriate himself from the land of his nativity, to imperil life and property, putting  himself  aboard  of  a  ship,  and  bidding  adieu  to  all  the companions of his youth, his kinsmen, and dear friends. So full was his conviction, and so strong his faith, that old Neptune and King Eolus, with all their terrors could not appal him. He sailed from  his  native  shores,  and  landed  on  this  continent.  He  was, however, ignorant of manythings pertaining to this new country, and  government;  and  on  his  arrival,  asked  for  the  rights  and immunities  of  a  citizen.  He  was  told,  that  the  civil  rights  of hospitality to a <em>stranger</em> could be extended to him as a <em>friendly alien;</em> but not one of the rights, or immunities of a <em>citizen</em> could be his,  unless  he  were  born  again.  &quot;<em>Born  again!</em>&quot;  said  he,  in  a disappointed  tone  to  Columbus,  with  whom  he  had  his  first conversation on the subject. &quot;What do you mean by being born again?&quot;</p>
<p><em>Columbus.</em> — You must be <em>naturalized,</em> or adopted as a citizen; or, what we call <em>born again.</em></p>
<p><em>A. B.</em> — I do not understand you. How can a man be born when he is grown?</p>
<p><em>Col.</em> — That which is born of Great Britain is British, and that which is  born  of  America  is  American.  If,  then,  you  would  be  an American citizen, you must be born of America.</p>
<p><em>A.  B.</em> — 'Born  of  America!'  You  astonish  me.  I  have  come  to America, well disposed towards the people and the country. I was once  attached  to  England,  but  I  became  attached  to  the  United States; and because of my faith and attachments I have come here; and will you not receive me into your kingdom because I could not help being born in England?</p>
<p><em>Col.</em> — Well  disposed  as I  am,  and  we  are,  to  receive  you,  most assuredly I say to you, unless you are regenerated in a court-house, and been enfranchised by and before the judges, you can never become a citizen of these United States.</p>
<p><em>A. B.</em> — Yours is an arbitrary and despotic government. What airs of sovereignty you have assumed!</p>
<p><em>Col.</em> — By  no  means.  Right,  reason,  wisdom,  policy,  and benevolence for you; as well as the safety, dignity, and happiness of  the  whole  community,  require  that  every  alien  shall  be naturalized,  or  made  a  citizen,  before  he  exercise  or  enjoy  the rights of a citizen.</p>
<p><em>A.  B.</em> — You  are  certainly  arbitrary — if  not  in  the  thing  itself,  of regeneration — in the place and manner in which it shall be done. Why, for instance, say that it must be done in a <em>court-house?</em></p>
<p><em>Col.</em> — I will tell you; because there are the <em>judges,</em> the <em>records,</em> and the <em>seal</em> of the government.</p>
<p><em>A. B.</em> — I understand you. Well, tell me, how is a man born again? Tell me plainly and without a figure.</p>
<p><em>Col.</em> — With pleasure. You were born of your mother and of your father,  when  you  were  born  in  England;  and  you  were  born <em>legitimately,</em> according to the institutions of England. Well, then, you  were  born  <em>of</em>  England,  as  well  as  born  <em>in</em>  it;  and  were, therefore, wholly English. This was your first birth. But you have expatriated  yourself,  as  your  application  here  proves — I  say <em>sentimentally</em> you have expatriated yourself; but we must have a formal <em>solemn pledge</em> of your renunciation; and we will give you a formal  pledge  of  your  adoption.  You  must,  <em>ex  animo,</em>  in  the presence of the Judges and the Recorders, renounce all allegiance to  every  foreign  prince  and  potentate,  and  especially  to  His Majesty the King of Great Britain.</p>
<p><em>A.  B.</em> — Is  that  the  thing?  I  can,  with  all  my  heart,  renounce  all <em>political</em> allegiance to every foreign prince and government. Is that all? I have, then, no objection to that.</p>
<p><em>Col.</em> — There is this also: — You are not only to renounce all political allegiance; but you must also, from the soul, solemnly vow, in the presence of the same Judges and Recorders, that you will adopt and  submit  to  the  constitution  and  government  of  these  United States.</p>
<p><em>A. B.</em> — I can do that also. I can renounce, and I can adopt; nor do I object to the place where it shall be done. But, pray, what solemn pledge will <em>you give me!</em></p>
<p><em>Col.</em> — So soon as you have vowed renunciation and adoption in the presence  of  the  Judges  and  Recorders,  we  will  give  you  a certificate, with a <em>red seal,</em> the <em>seal of the state,</em> attached to it; stating that you, having now been naturalized, or born according to our  institutions,  are  born  <em>of</em>  America;  and  are  now  a  son,  an adopted son, of America, And that <em>red</em> seal indicates that the blood, the best blood of this government, will be shed for you, to protect you and defend you; and that your life will, when called for, be cheerfully  given  up  for  your  mother,  <em>of</em>  whom  you  have  been politically  born;  as  it  would  have  been  for  your  own  natural political mother, of whom you were first born.</p>
<p><em>A. B.</em> — To this I must subscribe. In my mother tongue it all means that I give myself up politically to this government, and it gives itself up to me, before witnesses too. How soon, pray, after this new birth may I exercise and enjoy all the rights of a citizen?</p>
<p><em>Col.</em> — They are yours the first breath you breathe under your new mother. It is true, we have not, in these United States, any <em>symbol</em> through which a person is politically regenerated. We only ask a solemn pledge, and give one. Some nations have symbols. But we understand  that  the  moment  the  vow  is  taken,  the  person  is politically born again. And as every other child has all the rights of a child which it can exercise, so soon as it inhales the air; so have all our political children all political rights, so soon as the form of naturalization is consummated. But, remember, <em>not till then.</em></p>
<p><em>A. B.</em> — You say some nations had their symbols. What do you mean by these?</p>
<p><em>Col.</em> — I  mean  that  the  naturalized  had  to  submit  to  some emblematic rite, by which they were symbolically detached from every  other  people,  and  introduced  among  those  who  adopted them, and whom they adopted. The Indian nations wash all whom they adopt in a running stream, and impose this task upon their females.  The  Jews  circumcised  and  washed  all  whom  they admitted to the rights of their institutions. Other customs and forms have obtained in other nations; but we regard simply the meaning of the thing, and have no symbol.</p>
<p><em>A. B.</em> — In this I feel but little interested. I wish to become a citizen of these United States; especially as I am informed I can have <em>no</em> inheritance  among  you,  nor  a  <em>voice</em>  in  the  nation,  nor  any immunity, unless I am born again.</p>
<p><em>Col.</em> — You must, then, submit to the institution; and I know that as soon as you are politically born again, you will feel more of the importance and utility of this institution than you now can; and will be just as anxious as I am to see others submit to this wise, wholesome, and benevolent institution.</p>
<p><em>A. B.</em> — As my faith brought me to your shores, and as I approve your constitution and government, I will not (now that I understand your institutions) suffer an opportunity to pass. I will direct my course to the place where I can be born again.</p>
<p>I ought here to offer an apology for a phrase occurring frequently in this essay and in this dialogue. When we represent the subject of immersion as active, either in so many words or impliedly, we so far depart from that style which comports with the figure of &quot;<em>being born.</em>&quot; For all persons are passive in being born. So, in immersion, the subject buries not himself, raises not himself; but is buried and raised by another. So that in the act the subject is always passive. And it is of that act alone of which we thus speak.</p>
<p>From  all  that  has  been  said  on  <em>regeneration,</em>  and  from  the illustration just now adduced, the following conclusions must, we think, be apparent to all: —</p>
<p><em><strong>First</strong>.</em> Begetting and quickening necessarily precede being born.</p>
<p><em><strong>Second</strong>.</em> Being born imparts no new life; but is simply <em>a change of state,</em> and introduces into <em>a new mode of living.</em></p>
<p><em><strong>Third</strong>.</em>  Regeneration,  or  immersion — the  former  referring  to  the import of the act, and the latter term to the act itself — denote only the act of being born.</p>
<p><em><strong>Fourth</strong>.</em> God, or the Spirit of God, being the author of the whole institution, imparting to it its life and efficiency, is the <em>begetter,</em> in the fullest sense of that term. Yet, in a subordinate sense, every one skillful in the word of God, who converts another, may be said to have  begotten  him  whom  he  enlightens.  So  Paul  says,  'I  have begotten  Onesimus  in  my  bonds:' — and  'I  have  begotten  you, Corinthians, through the gospel.'</p>
<p><em><strong>Fifth</strong>.</em>  The  gospel  is  declared  to  be  <em>the  seed;</em> — the  power  and strength of the Holy Spirit to impart life.</p>
<p><em><strong>Sixth</strong>.</em> And the great argument, pertinent to our object, in this long examination  of  conversion  and  regeneration,  is  that  which  we conceive to the most apparent of all other conclusions, viz: — that remission of sins, or coming into a state of acceptance, being one of the present immunities of the Kingdom of Heaven, cannot be scripturally enjoyed by any person before immersion. As soon can a person be a citizen before he is born, or have the immunities of an American citizen while an alien; as one enjoy the privileges of a son of God before he is born again. For Jesus expressly declares, that he has not given the privilege of sons to any but those born of God.44 If, then, the present forgiveness of sins be a privilege, and a right of those under the new constitution, in the kingdom of Jesus; and if being born again, or being born of <em>water</em> and of the Spirit, is necessary  to  admission;  and  if  being  born  of  <em>water</em>  means <em>immersion,</em> as clearly proved by all witnesses; then, remission of sins cannot,  in  this  life, be constitutionally  enjoyed previous to immersion. If there be any proposition regarding any item of the Christian  institution,  which  admits  a  clearer  proof,  or  fuller illustration than this one, I have yet to learn where it may be found.</p>
<p>But before we dismiss the sixth evidence, which embraces so many items, I beg leave to make a remark or two on the propriety of considering  the  term  &quot;immersion,&quot;  as  equivalent  to  the  term &quot;conversion.&quot;</p>
<p>&quot;Conversion&quot; is, on all sides, understood to be a turning to God. Not  a  thinking  favorably  of  God,  nor  a  repenting  for  former misdeeds; but an actual turning to God, in word and in deed. It is true, that no person can be said to turn to God, whose mind is not enlightened, and whose heart is not well disposed towards God. All human  actions,  not  resulting  from  previous  thought  or determination, are rather the actions of a machine, than the action of a rational being. &quot;He that comes to God,&quot; or turns to him, &quot;must believe that God exists, and that he is a rewarder of every one who diligently seeks him.&quot; Then he will seek and find the Lord. An &quot;external conversion&quot; is no conversion at all. A turning to God with the lips, while the heart is far from him, is mere pretence and mockery. But though I never thought anything else since I thought upon religion; I understand the &quot;turning to God,&quot; taught in the New Institution, to be a coming to the Lord Jesus — not a <em>thinking</em> about doing it, nor a <em>repenting</em> that we have not done it; — but an <em>actual coming</em> to him. The question then is, Where shall we find him? Where  shall  we  meet  him?  No  where  on  earth  but  in  his institutions. &quot;Where he records his name,&quot; there alone can he be found; for there only has he promised to be found. I affirm, then, that the first institution, in which we can meet with God, is, the institution for remission. And here it is worthy of notice, that the Apostles, in all their speeches and replies to interrogatories, never commanded an inquirer to pray, read or sing,  <em>as preliminary to coming; but always commanded and proclaimed immersion as the first  duty,  or  the  first  thing  to  be  done,  after  a  belief  of  the testimony.</em>  Hence,  neither  praying,  singing,  reading,  repenting, sorrowing, resolving, nor waiting to be better, was the converting act. Immersion <em>alone</em> was the act of turning to God. Hence, in the commission to convert the nations, the only institution mentioned after proclaiming the gospel, was the immersion of the believers, as the divinely authorized way of carrying out and completing the work.  And  from  the  day  of  Pentecost  to  the  final  <em>Amen</em>  in  the revelation of Jesus Christ, no person was said to be converted, or to turn to God, until he was buried and raised up out of the water.</p>
<p>If it were not to treat this subject as one of doubtful disputation, I would say, that had there not been some act, such as immersion agreed on all hands, to be the medium of remission and the act of conversion  and  regeneration;  the  Apostles  could  not,  with  any regard to truth and consistency, have addressed the disciples as pardoned,  justified,  sanctified,  reconciled,  adopted,  and  saved persons.  If all this  had depended upon some mental  change, as faith; they could never have addressed their congregations in any other way than as the moderns do: and that is always the language of doubt and uncertainty — hoping a little, and fearing much. This mode of address and the modern compared, is proof positive, that they viewed the immersed through one medium, and we through another.  They  taught  as  the  disciples  to  consider  not  only themselves as saved persons; but all whom they saw, or knew to be immersed  into  the  Lord  Jesus.  They  saluted  every  one,  of  his coming out of the water, as <em>saved,</em> and recorded him as such. Luke writes, &quot;The Lord added <em>the saved</em> daily to the congregation.&quot;45</p>
<p>Whenever a child is born into a family, it is a brother or a sister to all other children of the family; and its being born of the same parents, is the act causative and declarative of its fraternity. All is mental  and  invisible  before  coming  out  of  the  water;  and  as immersion is the first act commanded, and the first constitutional act; so it was in the commission, <em>the act</em> by which the Apostles were commanded to turn or convert those to God, who believed their testimony. In <em>this</em> sense, then, it is the converting act. No man can,  scripturally,  be  said  to  be  converted  to  God  until  he  is immersed. How  ecclesiastics  interpret  their own language is  no concern  of  ours.  We  contend  for  the  pure  speech,  and  for  the apostolic ideas attached to it.</p>
<p>To resume the direct testimonies declarative of the remission of sins by immersion, we turn to the Gentiles. Peter was sent to the house of Cornelius to tell him and his family &quot;words by which they might be saved.&quot; He tells these words. He was interrupted by the miraculous descent of the Holy Spirit. But it is to be noticed, that the testimony, to which the Holy Spirit there affixed its seal, was the following words: — &quot;To <em>him</em> gave all the prophets witness, that every one who believes on him <em>shall receive remission of sins by his name.</em>&quot; While speaking these words, concerning remission of sins by, or through his name, the Holy Spirit in its marvellous gifts of tongues, fell upon them.</p>
<p>Many, seeing so much stress laid upon faith or belief, suppose that all blessings flow from it  <em>immediately.</em> This  is  a  great  mistake. Faith, indeed, is the principle, and the distinguishing principle of this economy: but it is only the principle of action. Hence, we find the name, or person of Christ always interposed between faith and the cure, mental or corporeal. The woman who touched the tuft of the mantle of Jesus had as much faith before as after; but though her  faith  was  the  cause  of  her  putting  forth  her  hand,  and accompanied it; <em>she was not cured until the touch.</em> That great type of Christ, the brazen serpent, cured no Israelite simply by faith. The Israelites, as soon as they were bitten, believed it would cure them. But yet they were not cured as soon as bitten; nor until <em>they looked</em> to the serpent. It was one thing to believe that looking at the serpent would cure them; and another to look at it. It was <em>the faith,</em> remotely; but, <em>immediately, the look,</em> which cured them. It was not faith in the waters of Jordan that healed the leprosy of Naaman the Syrian.  It  was  immersing  himself  in  it,  according  to  the commandment. It was not faith in the pool of Siloam that cured the blind man, whose eyes Jesus anointed with clay; it was his washing his eyes in Siloam's water. Hence, the imposition of hands, or a word, or a touch, or a shadow, or something from the persons of those anointed with the Holy Spirit, was the <em>immediate</em> cause of all the  cures  recorded  in  the  New  Testament.  It  is  true,  also,  that without faith it is impossible to be healed; for in some places Jesus could not work many miracles, because of their unbelief. It is so in all the moral remedies and cures. It is impossible to receive the remission of sins without faith. In this world of means, (however it may be in a world where there are no means) it is as impossible to receive any blessing through faith without the appointed means. <em>Both  are  indispensable.</em>  Hence,  <em>the  name</em>  of  the  Lord  Jesus  is interposed  between  faith  and  forgiveness,  justification  and sanctification,  even  where  immersion  into  that  <em>name</em>  is  not detailed. It would have been unprecedented in the annals of the world,  for  the  historian  always  to  have  recorded  all  the circumstances of the same institution, on every allusion to it; and it would have been equally so far the Apostles to have mentioned it always in the same words. Thus, in the passage before us, the <em>name</em> of  the  Lord  is  only  mentioned.  So  in  the  first  letter  to  the Corinthians, the disciples are represented as saved, as washed, as justified, sanctified <em>by the name</em> of the Lord Jesus, and by the Spirit of our God. The frequent interposition of the name of the Lord between faith and forgiveness, justification, sanctification, etc. is explained in a remark in James' speech in Jerusalem.46 It is the application of an ancient prophecy, concerning the conversion of the Gentiles. The Gentiles are spoken of as turning to, or seeking the Lord. But who them are thus converted? &quot;Even all the Gentiles <em>upon whom</em> my name is called.&quot; It is, then, to those <em>upon whom</em> the name  of  the  Lord  is  called,  that  the  name  of  the  Lord communicates remission, justification, etc.</p>
<p>Some captious spirits need to be reminded, that as they sometimes find forgiveness, justification, sanctification, etc. ascribed to grace, to the blood of Christ, to the name of the Lord, without an allusion to faith; so we sometimes find faith, and grace, and the blood of Christ, without an allusion to water. Now, if they have any reason and right to say, that faith is understood in the one case; we have the  same  reason  and  right  to  say,  that  water  or  immersion  is understood in the other. For their argument is, that in sundry places this matter is made plain enough. This is, also, our argument — in sundry places this matter is made plain enough. This single remark cuts off all their objections drawn from the fact, that immersion is not always found in every place where <em>the name</em> of the Lord, or <em>faith</em>  is  found connected with  forgiveness.  Neither is  grace, the blood  of  Christ,  nor  faith,  always  mentioned  with  forgiveness. When they find a passage where remission of sins is mentioned without immersion, it is weak, or unfair, in the extreme, to argue from that, that forgiveness can be enjoyed without immersion.</p>
<p><em><strong>If their logic be worth anything, it will prove, that a man may be forgiven without grace, the blood of Jesus, and without faith: for we  can  find  passages,  many  passages,  where  remission,  or justification, sanctification, or some similar term, occurs, and no mention of either grace, faith, or the blood of Jesus.</strong></em></p>
<p>As this is the pith, the marrow, and fatness, of all the logic of our most ingenious opponents on this subject, I wish I could make it more emphatic than by printing it in capitals. I know some editors, some  of  our  Doctors  of  Divinity,  some  of  our  most  learned declaimers, who make this argument, which we unhesitatingly call a genuine sophism, the Alpha and the Omega of their speeches against  the  meaning,  and  indispensable  importance  of  Christian immersion.</p>
<p>The New Testament would have been a curious book, if, every time <em>remission of sins</em> was mentioned or alluded to, it had been preceded by <em>grace, faith, the blood of Jesus, immersion, etc. etc.</em> But now the question comes, which, to the rational, is the emphatic question — <strong>whether do they think, believe, teach, and practice more wisely and more safely, who think, believe, and teach,</strong> <strong>that grace, faith, the blood of jesus, the name of the lord, and immersion,  are  all  essential  to  immediate  pardon  and acceptance; — or they who say, that faith only, grace only, the blood of christ only, the name of the lord only — and immersion not at all</strong>? To all men, women, and children, of common sense, this question is submitted.</p>
<p>It is, however, to me admirable, that the remission of sins should be, not merely unequivocally, but so repeatedly declared through <em>immersion,</em> as it is in the apostolic writings. And here I would ask the whole thinking community, one by one, whether, if the whole race of men had been assembled on Pentecost, or in Solomon's portico,  and  had  asked  Peter  the  same  question,  which  the convicted proposed, would he, or would he not, have given them the  same  answer?  Would  he  not  have  told  the  whole  race  to reform, and be immersed for the remission of their sins? or, to reform and be <em>converted,</em> that their sins might be blotted out? — to arise and be immersed, and wash away their sins? If he would not, let them give a reason; and if they say he would, let them assign a reason why they do not go and do likewise.</p>
<p>Some have objected against the &quot;seasons of refreshment,&quot; or the comforts  of  the  Holy  Spirit  being  placed  subsequent  to &quot;conversion,&quot;  or  &quot;regeneration,&quot;  or  &quot;immersion;&quot;  (for  when  we speak scripturally, we must use these terms as all referring to the same thing,) because the gifts of the Holy Spirit were poured out upon the Gentiles before immersion. They see not the design of thus welcoming the Gentiles into the kingdom. They forget the comparison of the Gentiles to a returning prodigal, and his father going out to meet him, even while he was yet a good way off. God had welcomed the first fruits of the Jews into his kingdom, by a stupendous display of spiritual gifts, called <em>the baptism of the Holy Spirit,</em> before any one of the Jews had been immersed into the Lord Jesus.  And,  as  Peter  explains  this  matter  in  Cornelius's  case,  it appears that God determined to make no difference between the Jews and Gentiles in receiving them into his kingdom. Hence, says Peter, &quot;he gave them <em>the same gift</em> which he gave to us Jews <em>at the beginning,</em>&quot; (never since Pentecost.) Thus Peter was authorized to command those Gentiles to be immersed by the authority of the Lord, no man daring to forbid it. But these gifts of the Holy Spirit, differed  exceedingly  from  the  seasons  of  refreshment,  from  the righteousness,  peace,  and  joy  in  the  Holy  Spirit,  the  common enjoyment of all who were immersed into the name of the Lord Jesus for the remission of sins.47</p>
<p>Let it be noted here, as pertinent to our present purpose, that as the Apostle Peter was interrupted by the baptism of the Holy Spirit, when he began to speak of the forgiveness by <em>the name</em> of the Lord Jesus;  so  soon  as  he  saw  the  Lord  had  received  them,  he commanded them to be immersed by the authority of the Lord. And here I must propose another question to the learned and the unlearned. How comes it to pass, that though once and only once, it is commanded that the nations who believe should be immersed into the name of the Father, and of the Son, and of the Holy Spirit; and though we read of no person being immersed into this name in this way; I say, how comes it to pass, that all sects use these words without a scruple, and baptize or sprinkle in this name; when more than  once  persons  are  commanded  to  be  immersed  <em>for  the remission of sins,</em> and but few of the proclaimers can be induced to immerse for the remission of sins, though so repeatedly taught and proclaimed by the Apostles? Is one command, unsupported by a single precedent, sufficient to justify this practice of Christians; and  sundry  commands  and  precedents  from  the  same  authority insufficient  to  authorize,  or  justify  us  in  immersing  for  the remission of sins? Answer this who can; I cannot, upon any other principle than, that the tyrant Custom, who gives no account of his doings, has so decreed.</p>
<p>I come now to another of the direct and positive testimonies of the Apostles, showing that immersion for the remission of sins is an institution of Jesus Christ. It is the address of Ananias to Saul: &quot;Arise and be immersed and wash away your sins, calling upon the name of the Lord.&quot; On this testimony we have not as yet descanted in this essay. It has been mentioned, but not examined.</p>
<p>Paul, like the Pentecostian hearers, when convinced of the truth of the pretensions of the Messiah, asked what <em>he</em> should do. He was commanded to go into Damascus, and it should be told him there what to do. It was told him in the words now before us. But, say some, this cannot be understood literally.</p>
<p>For  experiment,  then,  take  it  figuratively.  Of  what  was  it figurative?  Of  something  already  received?  Of  pardon  formerly bestowed? A figure of the past?! This is anomalous. I find one writer,  and  but  one,  who  converts  this  into  a  <em>commemorative</em> baptism, like Israel's commemorating the escape from Egypt, or Christians  commemorating  the  Lord's  death.  And,  if  I  do  not mistake, some preacher said it was a figurative expression, similar to &quot;<em>This is my body!</em>&quot; One, whom I pressed out of all these refuges, was candid enough to say, he really did not know what it meant; but  it  could  not  mean  that  Paul  was  to  &quot;be  baptized  for  the remission of his sins!&quot;</p>
<p>&quot;To  wash  away  sins&quot;  is  a  figurative  expression.  Like  other metaphoric  expressions,  it  puts  the  resemblance  in  place  of  the proper word. It necessarily means something analogous to what is said. But we are said to be washed from our sins in, or by the blood of Christ. But even &quot;<em>washed in blood</em>&quot; is a figurative expression, and means something analogous to washing in water. Perhaps we may find in another expression a means of reconciling these strong metaphors. Rev. 7:14. &quot;They have washed their robes, and made them white in the blood of the Lamb.&quot; Here are two things equally incomprehensible — to wash garments <em>white</em> in blood, and to <em>wash away</em> sins in water! An efficacy is ascribed to water which it does not  possess;  and,  as  certainly,  an  efficacy  is  ascribed  to  blood which it does not possess. If blood can <em>whiten</em> or cleanse garments, certainly water can <em>wash away</em> sins. There is, then, a transferring of the efficacy of blood to water; and a transferring of the efficacy of water to blood. This is a plain solution of the whole matter. God has transferred, in some way, the whitening efficacy, or cleansing power of water, to blood; and the absolving or pardoning power of blood to water. This is done upon the same principle as that of accounting  faith  for  righteousness.  What  a  gracious  institution! God has opened a fountain for sin, for moral pollution. He has given it an extension far and wide as sin has spread — far and wide as water flows. Wherever water, faith, and the name of the Father, Son, and Holy Spirit are, there will be found the efficacy of the blood of Jesus. Yes, as God first gave the efficacy of water to blood, he has now given the efficacy of blood to water. This, as was said, is figurative; but it is not a figure which misleads, for the meaning is given without a figure, viz. immersion for the remission of sins. And to him that made the washing of clay from the eyes, the  washing  away  of  blindness,  it  is  competent  to  make  the immersion of the body in water efficacious to the washing away of sin <em>from the conscience.</em></p>
<p>From the conscience, I say; for there its malignity is felt; and it is only  in  releasing  the  conscience  from  guilt,  and  its consequences — fear  and  shame,  that  we  are  released  from  the dominion of sin, or washed from its pollution in this world. Thus immersion, says Peter, <em>saves</em> us, not by cleansing the body from its filth, but the conscience from its guilt; yes, immersion saves us by burying us with Christ, raising us with him, and so our consciences are purified from dead works to serve the living God. Hence our Lord  gave  so  much  importance  to  immersion  in  giving  the commission  to  convert  the  world — &quot;<em>He  that  believes  and  is immersed shall be saved.</em>&quot;</p>
<p>But,  while viewing the  water  and blood  as made to  unite their powers, as certainly as Jesus came by water and blood, we ought to consider another testimony given to this gracious combination of powers, by Paul the Apostle: &quot;Being sprinkled in heart from an evil conscience, and being  washed in  body  with  clear water.&quot;48  The</p>
<p>application of water, the cleansing element, to the body, is made in this gracious institution to reach the conscience, as did the blood of sprinkling under the law.</p>
<p>Some ask, How can water, which penetrates not the skin, reach the conscience? They boast of such an objection, as exhibiting great intellect, and good sense. But little do they think, that in so talking, they laugh at, and mock the whole Divine Economy, under the Old and New Institutions: for, I ask, did not the sacrifices, and Jewish purifications, some way reach the conscience of that people!! If they did not, it was all mere frivolity throughout. And can eating bread, and drinking wine, not influence nor affect the soul! And cannot <em>the breath</em> of one man pierce the heart of another, and so move his blood, as to make his head a fountain of tears! He, who thus objects to water, and the import of immersion, objects to the whole remedial institution, as taught by Moses and by Christ, and insults the wisdom and goodness of God in the whole scheme of salvation. And he, who objects to water, because it can only take away the filth of the flesh, ought rather to object to blood; because it rather besmears and pollutes than cleanses the body, and cannot touch the soul. But all such reasoners are foolish talkers. To submit to  God's  institution  is  our  wisdom,  and  our  happiness.  The experience of the myriads who were immersed for the remission of their sins, detailed in the Christian scriptures, to say nothing of those  immersed  in  our  times,  is  worth  more  than  volumes  of arguments from the lips and pens of those who can only regard, and venerate the traditions of their fathers; because it is presumed their fathers were wiser and more able to judge correctly, than their sons.</p>
<p>But as it is not our object to quote, and expatiate upon, all the sacred  testimonies,  direct  and  allusive,  to  immersion  for  the remission of sins, we shall close the proof and illustration of this proposition with an incidental allusion to the cleansing efficacy of this  institution,  found  in  the  2d  Epistle  of  Peter.49  After</p>
<p>enumerating the additions to faith necessary to secure our calling and election, of which <em>courage</em> is the first, and charity, or universal love, the last; the Apostle says, that &quot;he who has not these things is blind, shutting his eyes, and forgetting that he was <em>purified from his  old  sins.</em>&quot;  I  need  not  here  say,  that  this  is,  perhaps,  (and certainly  as  far  as  I  know,)  universally  understood  to  refer  to Christian  immersion.  The  &quot;<em>old  sins,</em>&quot;  or  &quot;<em>former  sins,</em>&quot;  can,  we presume,  mean  no  other  sins  than  those  washed  away  in immersion. No person has yet attempted to show that these words can import anything else. It is one of the most unequivocal, and, because incidental, one of the most decisive proofs, that, in Peter's judgment, all former sins were remitted in immersion. With Peter we began our proof of this position, and with Peter we shall end our proof of it. He first proclaimed reformation for the remission of sins;  and  in  his  last  and  farewell  letters  to  the  Christian communities,  he  reminds  them  of  that  purification  from  sin, received  in,  and  through  immersion;  and  in  the  strongest  terms cautions them against forgetting that they were so purified.</p>
<p>Were any person to reason upon the simple import of the action commanded by Jesus, I think it might be made apparent from the action itself, in its two parts, <em>the burial and the resurrection,</em> that it must import every thing which we have heard the Apostles ascribe to  it.  Corruption  goes  down  into  the  grave  literally;  but  does corruption come forth out of it? Is there no change of state in the grave? Who is it that expects to come forth from the grave in the same state in which he descends into it? The first born from the dead did not; nor shall any of them who fall asleep in him. How, then, can it be, that any person buried with Christ in immersion, can  rise  with  Christ,  and  not  rise  in  a  new  state!!  Surely  the Apostle exhorts to a new life from the change of state effected in immersion. &quot;Since, indeed, you have risen with Christ, set your affections on things above.&quot; Walk in a new life.</p>
<p>Again, and in the last place here — Is a child in the same state after as before its birth? Is not its state changed? And does it not live a new life, compared with its former mode of living? As new born babes desire the milk of the breast, so let the newly regenerate desire the unadulterated milk of the Word, that they may grow thereby.  Call  immersion,  then,  a  new  birth,  a  washing  of regeneration, or a resurrection, and its meaning is the same. And when so denominated, it must import that change of state which is imported  in  putting  on  Christ,  in  being  pardoned,  justified, sanctified,  adopted,  reconciled,  saved,  which  was  the  great proposition to be proved and illustrated, and which we think, has been  proved  and  illustrated  by  the  preceding  testimonies  and reflections.</p>
<p>Though no article of Christian faith, nor item of Christian practice, can, legitimately, rest upon any testimony, reasoning or authority, out of the sacred writings of the Apostles, were it only one day after their decease; yet the views and practices, of those who were the  contemporaries,  or  the  pupils,  of  the  Apostles  and  their immediate successors, may be adduced as corroborating evidence of the truths taught, and the practices enjoined, by the Apostles; and, as such, may be cited; still bearing in mind, that where the testimony of Apostles ends, Christian faith necessarily terminates. After this preliminary remark, I proceed to sustain the following proposition: —</p>
<p>Proposition 11</p>
<p><em><strong>All the Apostolic Fathers, as they are called; all the pupils of the Apostles; and all the ecclesiastical writers of note, of the first four Christian centuries, whose writings have come down to us; allude to, and speak of, Christian immersion, as the           &quot;regeneration&quot; and &quot;remission of sins&quot; spoken of in the New Testament.</strong></em></p>
<p>This proposition I shall sustain by the testimony of those who have examined all Christian antiquity, and by citing the words of those usually called the apostolic Fathers, and other distinguished writers of the first four hundred years. We shall first summon one whose name is familiar throughout Christendom. Whether the writing be genuine or spurious, it is on all hands admitted to be a fragment of the highest antiquity: —</p>
<p><em><strong>Barnabas</strong></em></p>
<p>In  his  catholic  Epistle,  chapter  11:  says,  &quot;Let  us  now  inquire whether  the  Lord  took  care  to  manifest  anything  beforehand, concerning water and the cross. Now, for the former of these, it is written  to  the  people  of  Israel,  how  they  shall  not  receive  that baptism  which  brings  to  forgiveness  of  sins;  but  shall  institute another to themselves that cannot. For thus saith the Prophet, &quot;Be astonished, O Heavens! and let the earth tremble at it; because this people have done two great and wicked things: They have left me, the  fountain  of  living  waters,  and  have  digged  for  themselves broken cisterns that can hold no water. Is my holy mountain Zion, a desolate wilderness? For she shall be as a young bird when its nest is taken away.&quot; — &quot;Consider how he hath joined both the <em>cross</em> and the <em>water</em> together. For this he saith, &quot;<em>Blessed are they, who, putting their trust in the cross, descend into the water;</em> for they shall have their reward in due time; then, saith he, will I give it them.&quot; But as concerning the present time, he saith, &quot;Their leaves shall not fail.&quot; Meaning thereby, that every word that shall go out of your mouth, shall through faith and charity be to the conversion and hope of many. In like manner does another Prophet speak: &quot;And the land of Jacob was the praise of all the earth;&quot; magnifying thereby the vessels of his Spirit. And what follows? &quot;And there was a river running on the right hand, and beautiful trees grew up by  it;  and  he  that  shall  eat  of  them  shall  live  forever.&quot;  The signification of which is this: — <em>that we go down into the river full of sins and pollutions; but come up again bringing forth fruit; having in our hearts the fear and hope which are in Jesus by the Spirit:</em> &quot;And  whosoever  shall  eat  of  them  shall  live  forever.&quot;  That  is, whosoever shall hearken to those that call them, and shall believe, shall live forever.&quot;</p>
<p><em><strong>Clement and Hermas</strong></em></p>
<p>The former gives no testimony on the subject. The latter deposes as follows.50</p>
<p>In speaking of a tower built upon the water by which he signified the building of Christ's church, he thus speaks: — &quot;Hear, therefore, why the tower is built on the waters: — Because your life is saved, and shall be saved, by water.&quot; In answer to the question, &quot;Why did the stones come up into this tower out of the deep?&quot; he says it was necessary for them to come up by (or <em>through</em>) water, that they might be at rest; &quot;for they could not otherwise enter the kingdom of God; for before any one <em>receives the name of the Son of God,</em> he is liable to death; but when he receives that <em>seal,</em> he is delivered from death and assigned to life. Now, that seal is <em>water,</em> into which persons go down, liable to death, but come out of it assigned to life; for which reason to these also was the seal preached; and they made use of it, that they might enter the Kingdom of God.&quot;</p>
<p>Both  Clement  and  Hermas  wrote  about  the  end  of  the  first,  or beginning of the second century.</p>
<p>Hermas,  moreover,  deposes  as  follows,  in  another  work  of  his, called &quot;The Commands of Hermas.&quot;51</p>
<p>&quot;And I said to him, I have even now heard from certain teachers, and there is no other repentance besides that of <em>baptism,</em> when we go down into the water, and <em>receive the forgiveness of sins,</em> and after that we should sin no more, but live in purity. And he said to me, <em>Thou hast been rightly informed.</em>&quot;</p>
<p>Having closely and repeatedly examined the Epistles of Clement; of Polycarp, to the Philippians; of Ignatius, to the Ephesians; that to  the  Magnesians;  that  to  the  Trallians,  the  Romans,  the Philadelphians,  the  Smyrnians,  and  his  Epistle  to  Polycarp; together with the Catholic Epistle of Barnabas, and the genuine works of Hermas, I can affirm that the preceding extracts are the only passages in all these writings that speak of immersion.</p>
<p>Having heard the apostolic Fathers, as they are called, depose to the views of the pupils of the Apostles, down to A. D. 140; I will summon a very learned Paidobaptist antiquarian, who can bring forward every writer and Father, down to the fifth century; and, before  we  hear  any  of  his  witnesses,  we  shall  interrogate  him concerning his own convictions after he had spent many years in rummaging all Christian antiquity: —</p>
<p><em><strong>Testimony of Dr. W. Wall, Author of the History of Infant Baptism</strong></em></p>
<p>Pray, Doctor, have you examined all primitive writers from the death of John down to the fifth century?</p>
<p><em>W. Wall.</em> — I have.</p>
<p>And  will  you  explicitly  avow  what  was  the  established  and universal  view  of  all  Christians,  public  and  private,  for  four hundred years from the nativity of the Messiah, on the import of the saying, (John 3:5,) &quot;Except a man be born of water and the Spirit, he cannot enter into the Kingdom of God?&quot;</p>
<p><em>W. Wall.</em> — &quot;There is not any one Christian writer, of any antiquity in any language, but who understands it of <em>baptism;</em> and, if it be not so understood, it is difficult to give an account how a person is born of <em>water,</em> any more than born of <em>wood.</em>&quot;52</p>
<p>Did  all  the  Christians, public  and  private,  and  all  the  Christian writers from Barnabas to the times of Pelagius, (419,) as far as you know, continue to use the term <em>regenerate</em> as <em>only</em> applicable to immersion?</p>
<p><em>W. Wall.</em> — &quot;The Christians did, in all ancient times, continue the use of this name &quot;<em>regeneration,</em>&quot; for <em>baptism;</em> so that they <em>never</em> use the word '<em>regenerate,</em>' or '<em>born again,</em>' but they mean, or denote by it, <em>baptism.</em> And almost all the quotations which I shall bring in this book, shall be instances of it.&quot;53</p>
<p>Did they also  substitute for &quot;<em>baptism</em>&quot; and &quot;<em>baptize,</em>&quot; the words <em>renewed,  sanctified,  sealed,  enlightened,  initiated,</em>  as  well  as <em>regenerated?</em></p>
<p><em>W. Wall.</em> — &quot;For to <em>baptize,</em> they used the following words: — Most commonly,  <em>anagennao,</em>  to  regnerate;  sometimes,  <em>kainopoieo,</em>  or <em>anakainiozo,</em> to renew, frequently, <em>agiazo,</em> to sanctify. Sometimes they  call  it  <em>the  seal;</em>  and  frequently,  <em>illumination,</em>  as  it  is  also called, Heb. 6:4, and sometimes, <em>teliosis,</em> initiation.&quot;54 &quot;St. Austin, not  less  than  a  hundred  times,  expresses  <em>baptized</em>  by  the  word *sanctified.*55</p>
<p>We  shall  now  see  some  of  Mr.  Wall's  witnesses;  and  I  choose rather  to  introduce  them  from  his  own  pen,  as  he  cannot  be supposed partial to the views I have presented in this essay: —</p>
<p><em><strong>Justin Martyr</strong></em></p>
<p>Justin Martyr wrote about forty years after John the Apostle died, and  stands  most  conspicuous  among  the  primitive  Fathers.  He addressed  an  apology  to  the  Emperor  Antoninus  Pius.  In  this apology he narrates the <em>practices</em> of the Christians, and the reasons of  them.  Concerning  those  who  are  persuaded  and  believe  the things  which  are  taught,  and  who  promise  to  live  according  to them, he writes —</p>
<p>&quot;Then we bring them to some place where there is water, and they are <em>regenerated</em> by the same way of <em>regeneration</em> by which we were <em>regenerated:</em> for they are washed in water (<em>en to udati</em>) in the name of God the Father and Lord of all things, and of our Savior Jesus Christ, and of the Holy Spirit; for Christ says, Unless you be regenerated  you cannot  enter into the Kingdom of Heaven; and everybody knows it is impossible for those who are once generated (or born) to enter again into their mother's womb.&quot;</p>
<p>&quot;It  was  foretold  by  Isaiah,  as  I  said,  by  what  means  they  who should repent of their sins might escape them; and was written in these words, 'Wash you, make you clean, put away the evil,' etc.&quot;</p>
<p>&quot;And we have been taught  by the Apostles this reason for this thing. Because we being ignorant of our first birth, were generated by necessity (or course of nature) and have been brought up in all customs and conversation; that we should not continue children of that  necessity  and  ignorance,  but  of  will  (or  choice)  and knowledge, and should obtain <em>forgiveness of the sins</em> in which they have lived, by water (or in water). Then is invoked over him that has a mind to be <em>regenerated,</em> the name of God the Father, etc. And this washing is called <em>the enlightening.</em>&quot;</p>
<p>As you trace the history of infant baptism, Mr. Wall, as nigh the apostolic times as possible, pray, why do you quote Justin Martyr, who never mentions it?</p>
<p><em>W. Wall.</em> — &quot;Because his is the most ancient account of <em>the way of baptizing,</em>  next  the  scripture;  and  shows  the  plain  and  simple manner of administering it. Because it shows that the Christians of those times (many of whom lived in the days of the Apostles) used the word, '<em>regeneration</em>' (or '<em>being born again</em>') for <em>baptism;</em> and that they were taught to do so by the Apostles. And because we see by it that they understood John 3:5. of water baptism; and so did all the writers of these 400 years, <strong>not one man excepted</strong>.&quot; — p. 54.</p>
<p>Did any of the ancients use the word <em>matheteueo</em> (to disciple) as it is used in the commission; or did they call the baptized <em>discipled?</em></p>
<p><em>W. Wall.</em> — &quot;Justin Martyr, in his second apology to Antoninus, uses it. His words are: — 'Several persons among us, of sixty and seventy years old, of both sexes, <em>who were discipled</em> (<em>matheteuio</em>) to Christ, in or from their childhood, do continue uncorrupted.'&quot; — p. 54.</p>
<p>So  soon  as  they  began  to  mysticize,  they  began  to  teach  that immersion <em>without faith,</em> would obtain remission of sins, and that immersion <em>without faith</em> was regeneration. Then came the debates about <em>original sin:</em> and so soon as original sin was proved, then came  the  necessity  of  infant  immersion  for  the  remission  of original  sin.  And  so  undisputed  was  the  import  of  baptism  for remission,  that  when  the  Pelagians  denied  original  sin,  pressed with difficulty, &quot;why immerse those who have no sins?&quot; they were pushed  to  invent  <em>actual  sins</em>  for  infants;  such  as  their  crying, peevishness,  restlessness,  etc.  on  account  of  which  sins  they supposed that infants might with propriety be immersed, though they had no original sin.</p>
<p><em><strong>Tertullian</strong></em></p>
<p>Tertullian, the first who mentions infant baptism, flourished about A. D.  216.  He  writes  against  the  practice:  and  among  his  most conclusive  arguments  against  infant  immersion,  (for  then,  there was no sprinkling,) he assumes, as a fundamental principle not to be questioned, that immersion was for the remission of sins; and, this being universally conceded, he argues as follows: —</p>
<p>&quot;Our  Lord  says,  indeed,  'Do  not  forbid  them  to  come  to  me;' therefore, let them come when they are grown up — let them come when they understand — when they are instructed whither it is that they  come.  Let  them  be  made  Christians  when  they  can  know Christ.  What  need  their  <em>guiltless</em>  age  make  such  haste  to  <em>the forgiveness  of  sins?</em>  Men  will  proceed  more  warily  in  worldly goods; and he that should not have earthly goods committed to him, yet shall have heavenly! Let them know how to desire this salvation, that you may appear to have given to one that asketh.&quot; p. 74.</p>
<p><em><strong>Origen</strong></em></p>
<p>Origen, though so great a visionary, is, nevertheless, a competent witness in any question of fact. And here I would again remind the reader,  that  it  is  as  witnesses  in  a  question  of  <em>fact,</em>  and  not  of <em>opinion,</em>  we  summon  these  ancients.  It  is  not  to  tell  their  own opinions, nor the reasons for them, but to depose what were the views of Christians on this institution in their times. There was no controversy on this subject for more than four hundred years, and therefore we expect only to find incidental allusions to it; but these are numerous, and of the most unquestionable character. Origen, in his homily upon Luke, says: —</p>
<p>&quot;Infants  are  baptized  for  the  forgiveness  of  their  sins.  Of  what sins? Or when have they sinned? Or how can any reason of the law, in their case, hold good, but according to that sense that we mentioned even now? (that is) none is free from pollution, though his life be but the length of one day upon the earth.&quot;</p>
<p>And in another place he says, that —</p>
<p>&quot;The baptism of the church is given for the forgiveness of sins.&quot; And again —</p>
<p>&quot;If  there  were  nothing  in  infants  that  wanted  forgiveness  and mercy, the grace of baptism would be needless to them.&quot;</p>
<p>In another place he says —</p>
<p>&quot;But in the <em>regeneration,</em> (or new birth,) by the <em>laver</em> (or baptism,) every one that is born again of water and the Spirit, is clear from pollution: clear (as I may venture to say) as by a glass darkly.&quot; — p. 82.</p>
<p>But  now  let  me  ask  Dr.  Wall, — Do  Gregory  Nazianzen,  Basil, Ambrose,  Chrysostom,  and  St.  Austin,  concur  with  all  their predecessors in those views of regeneration and remission?</p>
<p><em>W. Wall.</em> — &quot;Yes, exactly. I have observed, among the several names which the ancients give to <em>baptism,</em> they often, by this phrase, '<em>the forgiveness of sins,</em>' do mean the sacrament of baptism.&quot; — p. 179. And  as  for  Chrysostom,  he  expressly  says,  &quot;In  baptism,  or  the spiritual circumcision, there is no trouble to be undergone but to throw off the load of sins, and to receive pardon for all foregoing offences.&quot; p. 182. And again; &quot;There is no receiving or having the bequeathed inheritance before one is baptized; and none can be called <em>a son</em> till he is baptized.&quot; — p. 183.</p>
<p>The  controversies  about  infant  baptism  and  original  sin  were contemporaneous; and just so soon as they decided the nature and extent of original sin, baptism for the remission of sins was given to infants because of this pollution, and defended because of the necessity of regeneration and forgiveness to salvation; and because immersion  was  universally  admitted  to  be  the  scriptural regeneration  and  remission.  In  this  way,  there  is  no  reasonable doubt, but infant baptism began; and for convenience' sake, as Dr. Wall contends, it was substituted by infant sprinkling.</p>
<p>Unless we were to transcribe all the testimonies of antiquity, one by one, no greater assurance can be given, that for more than four hundred  years  after  Christ,  all  writers,  orthodox  and  heterodox, Pelagius  and  Austin  not  excepted,  concurred  in  the  preceding views. Were I to summon others — Eusebius, Dupin, Lightfoot, and Hammond, <em>cum multis aliis</em> — will depose the same.</p>
<p>This proposition we will dismiss with the testimony of the most renowned of the Bishops of Africa. I extract it from a work now generally  read,  called  the  &quot;History  of  Martyrs.&quot;  It  is  from  the account Cyprian gives of his conversion. — p. 317.</p>
<p><em><strong>Cyprian</strong></em></p>
<p>&quot;While (says he) I lay in darkness and uncertainty, I thought on what  I  had  heard  of  a  second  birth,  proposed  by  the  divine goodness; but could not comprehend how a man could receive a new life from his being immersed in water, cease to be what he was before, and still remain the same body. How, said I, can such a change be possible? How can he who is grown old in a worldly way of living strip himself of his former inclinations and inveterate habits?  Can  he,  who  has  spent  his  whole  time  in  plenty,  and indulged his appetite without restraint, ever be transformed into an example of frugality and sobriety? Or he who has always appeared in splendid apparel, stoop to the plain, simple, and unornamented dress of the common people? It is impossible for a man, who has borne the most honorable posts, ever to submit to lead a private and obscure life: or that he who was never seen in public without a crowd of attendants, and persons who endeavored to make their fortunes  by  attending  him,  should  ever  bear  to  be  alone.  This (continues he) was my way of arguing: I thought it was impossible for me to leave my former course of life, and the habits I was then engaged in, and accustomed to: but no sooner did the live-giving water  wash  the  spots  off  my  soul,  than  my  heart  received  the heavenly light of the Holy Spirit, which transformed me into a new creature; all my difficulties were cleared, my doubts dissolved, and my darkness dispelled. I was then able to do what before seemed impossible;  could  discern  that  my  former  life  was  earthly  and sinful, according to the impurity of my birth; but that my spiritual birth  gave  me  new  ideas  and  inclinations,  and  directed  all  my views to God.&quot;</p>
<p>Cyprian flourished A. D. 250.</p>
<p>Proposition 12</p>
<p><em><strong>But even the reformed creeds, Episcopalian, Presbyterian,     Methodist, and Baptist, substantially avow the same views of immersion, though apparently afraid to carry them out in faith and practice.</strong></em></p>
<p>This proposition will be sustained by an extract from the creed of each of these sects.</p>
<p><em><strong>Episcopalian</strong></em></p>
<p>The clergy are ordered, before proceeding to baptize, to make the following prayer.56</p>
<p>&quot;Almighty and everlasting God, who of thy great mercy, didst save Noah and his family in the Ark from perishing by water; and also didst safely lead the children of Israel thy people through the Red sea; figuring thereby the holy baptism; and by the baptism of thy well-beloved Son Jesus Christ  in  the  river  Jordan,  didst  sanctify  the  element  of water, in the mystical washing away of sin; we beseech thee, for thine infinite  mercies, that thou  wilt mercifully look upon <em>these</em> thy <em>servants;</em> wash <em>them</em> and sanctify <em>them</em> with the Holy Ghost; that  <em>they</em> being delivered from thy wrath, may be received into the Ark of Christ's Church; and being steadfast in faith, joyful through hope, and rooted in charity, may so pass the waves of this troublesome world, that finally <em>they</em> may come to the land of everlasting life; there to reign with thee, world without end, through Jesus Christ our Lord. <em>Amen.</em>&quot;</p>
<p>After  reading  a  part  of  the  discourse  with  Nicodemus  they  are ordered to make the following exhortation.57</p>
<p>&quot;Beloved, ye hear in this gospel the express words of our Savior Christ, that except a man be born of water and the Spirit, he cannot enter into the Kingdom of God. Whereby ye  may  perceive  the  great  necessity  of  this  sacrament, where  it  may  be  had.  Likewise  immediately  before  his ascension into heaven, (as we read in the last chapter of St. Mark's Gospel,) he gave command to his disciples, saying, Go ye into all the world and preach the gospel to every creature. He that believeth and is baptized shall be saved; but  he  that  believeth  not  shall  be  damned.  Which  also showeth  unto  us  the  great  benefit  we  reap  thereby.  For which cause of St. Peter, the Apostle, when, upon his first preaching of the gospel, many were pricked at the heart, and  said  to  him  and  the  rest  of  the  Apostles,  Men  and brethren, what shall we do? replied, and said unto them, Repent and be baptized every one of you, for the remission of sins, and ye shall receive the gift of the Holy Ghost: for the promise is to you and your children, and to all that are afar off, even as many as the Lord our God shall call. And with  many  other  words  exhorted  he  them,  saying,  Save yourselves from this untoward generation. For, as the same Apostle testifieth in another place, even baptism doth also now save us, (not the putting away the filth of the flesh, but the  answer  of  a  good  conscience  towards  God,)  by  the resurrection of Jesus Christ. Doubt ye not, therefore, but earnestly  believe,  that  he  will  favorably  receive  <em>these</em> present <em>persons,</em> truly repenting, and coming unto him by faith; that he will grant <em>them</em> remission of <em>their</em> sins, and bestow upon <em>them</em> the Holy Ghost; then he will give <em>them</em> the blessings of eternal life, and <em>make them partakers</em> of his everlasting kingdom.&quot;</p>
<p>This, I need not add, is in accordance with the sentiments advanced in  this  essay.  What  a  pity  that  the  Episcopal  church  does  not believe and practice her own creed!</p>
<p><em><strong>Presbyterian</strong></em></p>
<p>The  Presbyterian  Confession,  on  Baptism,  chap.  28:  sec.  1. declares that —</p>
<p>&quot;Baptism is a sacrament of the New Testament, ordained by Jesus Christ, not only for the solemn admission of the party baptized into the visible church; but also to be unto him  a  sign  and  seal  of  the  covenant  of  grace,  of  his engrafting into Christ, of regeneration, of remission of sins, and of his  giving up unto  God, through Jesus Christ, to walk in newness of life: which sacrament is, by Christ's own appointment, to be continued in his church until the end of the world.&quot;</p>
<p>&quot;<em>A sign and seal of remission of sins!!</em>&quot; This is much nigher the truth  than  this  church  seems  to  be  apprised  of.  However,  she cannot believe her own creed; for she does not believe that baptism is a sign and a seal of remission of sins, nor of regeneration in her own sense of it, to her baptized or sprinkled infants, but in paying any regard to the Scriptures, she could not say less than she has said. It is no wonder that many sectaries cannot be persuaded to think, that the scriptures mean what they say: for they are so much accustomed to say what they do not mean, that they cannot think God does mean what he says.</p>
<p><em><strong>Methodist</strong></em></p>
<p>The Methodist Creed says —</p>
<p>&quot;Dearly beloved, forasmuch as all men are conceived and born in sin, (and that which is born of the flesh is flesh, and they that are in the flesh cannot please God but live in sin, committing  many  actual  transgressions:)  and  that  our Savior Christ, saith, None shall enter into the Kingdom of God, except he be regenerate and born anew of water and of  the  Holy  Ghost;  I  beseech  you  to  call  upon  God  the Father, through our Lord Jesus Christ, that of his bounteous goodness  he  will  grant  to  <em>these  persons,</em>  that  which  by nature <em>they</em> cannot have; that <em>they</em> may be baptized with water and the Holy Ghost, and received into Christ's holy church, and made lively <em>members</em> of the same.&quot;</p>
<p>Then it is ordained that the minister say, or repeat the following prayer: —</p>
<p>&quot;Almighty and immortal God, the aid of all that need, the helper of all that flee to thee for succor, the life of them that believes, and the resurrection of the dead: We call upon thee  for  <em>these  persons;</em>  that  <em>they,</em>  coming  to  thy  holy baptism, may receive remission of <em>their</em> sins, by spiritual regeneration. Receive <em>them,</em> O Lord, as thou hast promised by thy well beloved Son, saying, Ask, and ye shall receive, seek and ye shall find, knock, and it shall be opened unto you, so give unto us that ask; let us that seek, find; open the gate unto us that knock; that <em>these persons</em> may enjoy the everlasting benediction of the heavenly washing, and may come to the eternal kingdom which thou hast promised by Christ our Lord. <em>Amen.</em>&quot; — <em>Dis. p.</em> 105.</p>
<p>Thus the Methodist Creed and Church are nearly as scriptural as the  church  from  which  they  sprang.  She  prays  for  those  to  be baptized, that in baptism they may receive the remission of sins! Does she believe what she says?</p>
<p><em><strong>Baptist</strong></em></p>
<p><strong><em>Chapter</em> XXX. <em>Section</em> 1</strong>.—</p>
<p>&quot;Baptism is an ordinance of the New Testament, ordained by Jesus Christ, to be unto the party baptized a sign of his fellowship with him in his death and resurrection; of his being engrafted into him; of remission of sins, and of his giving up unto God, through Jesus Christ, to live and walk in newness of life.&quot;</p>
<p>The  Baptist  follows  the  Presbyterian  church  as  servilely  as  the Methodist church follows the English hierarchy. But she avows her faith that immersion is a <em>sign</em> of remission. A sign of the past, the present, or the future! A sign accompanying!</p>
<p><em><strong>The Confession of Bohemia</strong>.</em>—</p>
<p>&quot;We believe that whatsoever by baptism — is in the outward ceremony signified and witnessed, all <em>that</em> doth the Lord God  perform  inwardly.  That  is,  he  washeth  away  sin, begetteth a man again, and bestoweth salvation upon him; for the bestowing of these excellent fruits was holy baptism given and granted to the church.&quot;</p>
<p><em><strong>The Confession of Augsburg</strong>.</em>—</p>
<p>&quot;Concerning  baptism,  they  teach  that  it  is  necessary  to salvation,  as  a  ceremony  ordained  of  Christ;  also,  by baptism the grace of God is offered.&quot;</p>
<p><em><strong>The Confession of Saxony</strong>.</em>—</p>
<p>&quot;I baptize thee — that is I do witness that by this dipping thy sins be washed away, and that thou art now received of the true God.&quot;</p>
<p><strong><em>The Confession of Whittenberg.</em>—</strong></p>
<p>**&quot;**We believe and confess that baptism is that sea, into the bottom whereof, as the Prophet saith, God doth cast all our sins.&quot;</p>
<p><em><strong>The Confession of Helvetia</strong>.</em>—</p>
<p>&quot;To be baptized in the name of Christ, is to be enrolled, entered, and received into the covenant and family, and so into the inheritance of the sons of God; that is to say, to be called the sons of God, to be purged also from the filthiness of sins, and to be endued with the manifold grace of God, for to lead a new and innocent life.&quot;</p>
<p><em><strong>The Confession of Sueveland</strong>.</em>—</p>
<p>&quot;As  touching  baptism,  we  confess  that  it  is  the  font  of regeneration,  washeth  away  sins,  and  saveth  us.  But  all these things we do understand as St. Peter doth interpret them. 1 Peter 3:21.&quot;</p>
<p><em><strong>Westminster Assembly</strong>.</em>—</p>
<p>&quot;Before  baptism  the  minister  is  to  use  some  words  of instruction — showing that it is instituted by our Lord Jesus Christ;  that it is a seal of the covenant  of grace, of our engrafting  into  Christ,  and  of  our  union  with  him,  of remission of sins, regeneration, and life eternal.&quot;</p>
<p>The Roman Catholic and the Greek church say, &quot;We believe in one baptism for the remission of sins.&quot;</p>
<p>Calvin makes remission the principal thing in baptism.58</p>
<p>&quot;Baptism,&quot; says he, &quot;resembles a legal instrument properly attested,  by  which  he  assures  us  that  all  our  sins  are cancelled, effaced, and obliterated, so that they will never appear in his sight, or come into his remembrance, or be imputed to us. For he commands all, who believe, to be baptized for the remission of their sins. Therefore, those who have imagined that baptism is nothing more than a mark or sign by which we profess our religion before men, as soldiers wear the insignia of their sovereign as a mark of their profession, have not considered that which was the <em>principal</em>  thing  in  baptism;  which  is  that  we  ought  to receive  it  with  this  promise — 'He  that  believeth  and  is baptized, shall be saved.'&quot;</p>
<p>&quot;The ancient Christian church, from the highest antiquity, after the apostolic times, appears generally to have thought that baptism is absolutely necessary for all that would be saved by the grace of Jesus Christ.&quot;59</p>
<p>&quot;Most of the ancients concluded that baptism was no less necessary unto salvation than faith or repentance itself.&quot;60</p>
<p>John Wesley, in his comment on the New Testament, (p. 350,) speaks plainer than earlier the Methodist Discipline or the Regular Baptist Confession. His words are: —</p>
<p>&quot;Baptism, administered to real penitents, is both a <em>means</em> and  a  <em>seal</em>  of  pardon.  Nor  did  God  ordinarily  in  the primitive  church  bestow  this  (pardon)  on  any,  unless through this means.&quot;</p>
<p>This is almost, if not altogether, as much as we have said on the forgiveness of sins through immersion.</p>
<p>May we not say, that we have sustained this last proposition to the full extent of the terms thereof?</p>
<p>With the testimony of John Wesley, the last of the reformers, I close  my  list  of  human  vouchers  for  the  import  of  Christian immersion. This list I could swell greatly; for, indeed, I have been quite  disappointed  in  looking  back  into  creeds,  councils, commentators, and reformers, ancient and modern. I begin to fear that I shall be suspected to have come to the conclusions which I have  exhibited,  from  consulting  human  writings,  creeds,  and reformers. My fears are not that we, who plead for reformation may appear to have nothing <em>original</em> to offer in this reformation; that we are mere gleaners in the fields which other minds have cultivated. It is not on this account our fears are excited, for the reformation  we  plead  is  not  characterized  by  new  and  original ideas, or human inventions; but by a return to the original ideas and institutions developed in the New Institution. But we fear lest any should suspect the views offered, to be a human invention or tradition; because we have found so much countenance for them in the works of the most ancient and renowned Christian writers, and the creeds of ancient and modern reformers. We can assure our readers, however, that we have been led to these conclusions from the simple perusal, the unprejudiced and impartial examination, of the New Testament alone. And, we may add, that we are as much astonished, as any reader of this essay can be, to find such a cloud of witnesses to the truth and importance of the views offered.</p>
<p>The propositions now proved, and illustrated, must convince all that  there  is  <em>some  connection</em>  between  immersion  and  the forgiveness of sins. What the connection is, may be disputed by some: but that such a connection exists, none can dispute, who acknowledge  the  New  Testament  to  contain  a  divine communication to man. With John Wesley we say, it is &quot;to the believing the <em>means</em> and <em>seal</em> of pardon for all previous offences;&quot; and we not only say we <em>think</em> so, but we preach it as such, and practice  it  as  such.  Those  who  think  of  any  other  connection, would do well to attempt to form clear ideas of what they mean: for we are assured there is no meaning in any other connection. To make  it  a  commemorative  sign  of  past  remission  is  an  outrage upon  all  rules  of  interpretation,  and  a  perfect  anomaly  in  all revelation of God. To make it, prospectively, the sign of a future remission, is liable to the same exceptions. Nothing remains, but that it be considered, what it is in truth — the accompanying sign of an accompanying remission; the sign and the seal, or the means and  the  seal,  of  remission  then  granted  through  the  water, connected with the blood of Jesus, by the divine appointment, and through our faith in it.</p>
<p>We have heard some objections, and we can conceive of others which may be presented to <em>immersion for the remission of sins.</em> There can be objections made to any person, doctrine, sentiment, or practice, natural, moral, political, or religious, that ever existed. But notwithstanding all the objections made to every thing, there are thousands of matters and things we hold to be facts and truths indubitable.  Amongst  these  certain  and  sure  things,  not  to  be shaken, is the Christian institution.</p>
<p>Objections ****</p>
<p>We  will  state  and  examine  some  objections  partially  noticed already; but, because they are the most common, or may become common,  we  will  bestow  upon  them  a  formal  statement  and  a formal refutation.</p>
<p><strong><em>Objection</em> 1. — &quot;To make the attainment and the enjoyment of <em>present  salvation,</em>  pardon,  justification,  sanctification, reconciliation,  adoption,  dependent  upon  the  contingency  of water being present, or accessible, is beneath the dignity and character of a salvation from God.&quot;</strong></p>
<p>And  to  make  the  attainment,  and  the  enjoyment  of  present salvation,  pardon,  etc.  dependent  upon  the  contingency  of  faith being present or accessible — upon the blood of Jesus Christ being heard of, or known, is equally objectionable; — for what is faith but the belief of testimony? Or what is it in the most popular sense but something wrought in the heart, a compound of knowledge and feeling, of assent and consent? And are not both blood and faith less accessible to mankind than the element of water? How much more water than faith, or than candidates for immersion? And is there not as much power, wisdom, and goodness of God in creating water, as sin creating air, words, letters, faith, etc.? Is not water more universal than language, words, books, preachers, faith, etc.? This objection lies as much against any one means of salvation as another; nay against all means of salvation. Whenever a case shall occur of much faith and little water; or of a little faith and no water, we will repel it by other arguments than these.</p>
<p><strong><em>Objection</em>  2. — &quot;It  makes  void  the  value,  excellency,  and importance of both faith and grace.&quot;</strong></p>
<p>By no means. If a man say, with Paul, we are justified by faith; does  it  follow  that  grace  is  made  void?  Or,  if  one  say  we  are justified by grace, does it make the blood of Christ of non-effect? Or, if with Paul, a man say we are justified by his blood; does it make faith, repentance, and grace of no effect? Nay, indeed, this gives to faith its proper place and its due value. It makes it the principle  of  action.  It  brings  us  to  the  water,  to  Christ,  and  to heaven. <em>But it is a principle of action only.</em> It was not Abel's faith in his head, or heart; but Abel's faith at <em>the altar,</em> which obtained such reputation. It was not Enoch's faith in principle, but Enoch's faith in his <em>walk with</em> God, which translated him to heaven. It was not Noah's faith in God's promise and threatening; but his faith exhibited in <em>building an ark,</em> which saved himself and family from the  Deluge,  and  made  him  an  heir  of  a  new  world,  an  heir  of righteousness.  It was not Abraham's faith in God's call; but his <em>going out</em> in obedience to that call, that first distinguished him as a pilgrim, and began his reputation. It was not faith in God's promise that Jericho should fall, but that faith carried out in the <em>blowing of rams' horns,</em> which laid its walls in ruins, etc. It is not our faith in God's promise of remission; but our <em>going down</em> into the water; that obtains the remission of sins. But any one may see why faith has so much praise, and is of so much value. Because, without it, Abel  would  not  have  offered  more  sacrifices  than  Cain;  Enoch would not have walked with God; Noah would not have built an ark; Abraham would not have left Ur of the Chaldees, nor offered his son upon the altar. Without it, Israel would not have passed through  the  wilderness,  nor  crossed  the  Jordan;  and  without  it, none receive the remission of their sins in immersion. And, again, we would remind the reader that, when he talks of being saved by faith, he should bear in mind that grace is not lost sight of; nor blood, nor water, nor reformation, discarded.</p>
<p>We enter the kingdom of nature by being born of the flesh. We enter the kingdom of heaven, or come under the reign of Jesus Christ, in this life, by being born of water, and the Spirit. We enter the kingdom of eternal glory by being born again from the earth, and neither by faith, nor the first regeneration. Neither by faith, nor baptism; but by being counted worthy of the resurrection of the just. &quot;I was hungry, and you fed me.&quot; Not because you believed, or were born of water; but because &quot;I was hungry, and yet fed me,&quot; etc.</p>
<p>There are three births, three kingdoms, and three salvations. One from the womb of our first mother, one from the water, and one from the grave. We enter a new world on, and not before, each birth. The present animal life, at the first birth; the spiritual, or the life of God in our souls, at the second birth; and the life eternal in the presence of God, at the third birth. And he who dreams of entering the second kingdom, or coming under the dominion of Jesus, without the second birth, may, to complete his error, dream of entering the kingdom of glory without a resurrection from the dead.</p>
<p>Grace precedes all these births — shines in all the kingdoms; but will be glorified in the third. Sense is the principle of action in the first kingdom; faith, in the second; and sight spiritual, in the third. The first salvation is that of the body from the dangers and ills of life, and God is thus &quot;the Savior of all men.&quot; The second salvation is that of the soul from sin. The third is that of both soul and body united,  delivered  from  moral  and  natural  corruption,  and introduced into the presence of God, when God shall be all in all.</p>
<p><strong><em>Objection</em> 3. — &quot;It is so uncharitable to the Paidobaptists!&quot;</strong></p>
<p>And how uncharitable are the Paidobaptists to the Jews, Turks, and Pagans!!  Will  they  promise  present  salvation  from  the  guilt, pollution, and dominion of sin, with the well grounded hope of heaven, to Jews, Turks, Pagans, or even Roman Catholics? Or will the Roman Catholics to them!! How uncharitable are they who cry &quot;uncharitable&quot;  to  us!  Infants,  idiots,  deaf,  and  dumb  persons, innocent Pagans wherever they can be found, with all the pious Paidobaptists, we commend to the mercy of God. But such of them as wilfully <em>despise</em> this salvation, and who, having the opportunity to be immersed for the remission of their sins, wilfully <em>despise</em> or refuse, we have as little hope for them, as they have for all who refuse  salvation  <em>on  their  own  terms  of  the  gospel.</em>  While  they inveigh against us for laying a scriptural and natural stress upon immersion,  do  we  not  see  that  they  lay  as  great,  though  an unscriptural and irrational stress, upon their baptism or sprinkling; so much so as to give it <em>without faith,</em> even to infants, so soon as they are born of the flesh?</p>
<p><strong><em>Objection</em>  4. — &quot;But  do  not  many  of  them  enjoy  the  present salvation of God?&quot;</strong></p>
<p>How far they may be happy in the peace of God, and the hope of heaven, I presume not to say. And we know so much of human nature as to say, that he that <em>imagines</em> himself pardoned, will feel as happy as he that is really so. But one thing we do know, that none can <em>rationally,</em> and with <em>certainty</em> enjoy the peace of God, and the hope of heaven, but they who intelligently, and in full faith are born of water, or immersed for the remission of their sins. And as the  testimony of God, and not conceit, imagination,  nor our reasoning upon what passes in our minds, is the ground of our certainty, we see and feel, that we have an assurance which they cannot  have.  And  we  have  this  advantage  over  them;  we  once stood upon their ground, but their hopes, felt their assurance; but they have not stood upon our ground, nor felt assurance. Moreover, the experience of the first converts shows the difference between their  immersion,  and  the  immersion,  or  sprinklings,  of  modern gospels.</p>
<p><strong><em>Objection</em> 5. — &quot;This has been so long concealed from the people, and so lately brought to our view, that we cannot acquiesce in it.&quot;</strong></p>
<p>This  objection  would  have  made  unavailing  every  attempt  at reformation,  or  illumination,  of  the  mind,  or  change  in  the condition and enjoyments of society, ever attempted. Besides, do not  the  experience  of  all  the  religious — the  observation  of  the intelligent — the  practical  result  of  all  creeds,  reformations,  and improvements — and  the  expectations,  and  longings  of  society, warrant the conclusion that either some new revelation, or some new development of the revelation of God, must be made, before the hopes and expectations of all true Christians can be realized, or Christianity save and reform the nations of this world? We want the old gospel back, and sustained by the ancient order of things: and this alone by the blessing of the Divine Spirit, is all that we do want, or can expect, to reform and save the world. And if this gospel, as proclaimed and enforced on Pentecost, cannot do this, vain are the hopes, and disappointed must be the expectations of the so called Christian world.</p>
<p>Recapitulation ****</p>
<p>As Christian faith rests upon, and Christian practice proceeds from, <em>the testimony of God,</em> and not from the reasonings of men; — I will, in  this  recapitulation,  only  call  up  the  evidences  on  one  single proposition, assumed, sustained, and illustrated in the preceding pages;  that  that  is  the  <em>ninth  proposition,</em>  as  sustained  by  the apostolic  testimony.  We  wish  to  leave  before  the  mind  of  the diligent  reader  the  great  importance  attached  to  Christian immersion,  as  presented  in  the  Evangelists,  the  Acts,  and  the Epistles.</p>
<ol>
<li>
<p><strong><em>In the Evangelists</em> — it is called <em>the forgiveness of sins</em></strong><em>.</em> Matthew and Mark introduce the Messiah in his own person in giving the commission. Luke does not. Matthew presents Jesus, saying, &quot;Go, convert the nations, immersing them into the name of the Father, the Son, and Holy Spirit, teaching them to observe all things which I have commanded you.&quot; This, of course, in order to salvation. Mark presents him saying, &quot;Go into all the world, proclaim the glad tidings to the whole creation; and he who believes, and is immersed,  shall  be  saved;  but  he  who  believes  not,  shall  be condemned.&quot; Luke, however, does not introduce the Lord in his own  person  in  giving  the  charge;  but  records  it,  in  his  own conception of it, in the following words: — That &quot;reformation and forgiveness of sins should be announced in his name to all nations, beginning at Jerusalem.&quot; No person, we presume, will question but that  Luke  thus  records  the  commission; — and,  if  so,  then  it  is indisputable, that as Luke neither mentions faith nor immersion, he substitutes for them the received import of both, when and where he  wrote.  Metonymically  he  places  repentance,  or  rather <em>reformation,</em>  for  faith;  and  <em>remission  of  sins,</em>  for  immersion.  In Luke's  acceptation  and  time  forgiveness  of  sins  stood  for immersion, and reformation for faith — the effect for the means or cause. The only reference to the commission found in John, occurs 20: 21. &quot;As the Father has sent me, so send I you: — whose sins soever you remit, are remitted to them; and whose sins soever you retain are retained.&quot; Here is neither faith, repentance, nor baptism; but  the  object,  <em>remission  of  sins,</em>  is  literally  proposed.  In  the commission, salvation is attached by the Lord Jesus to faith and immersion into his name. He that believes and is immersed, shall be saved. Thus immersion is taught in the testimonies of Matthew, Mark, Luke, and John.</p>
</li>
<li>
<p><em><strong>In the Acts of the Apostles</strong></em> — Sermon 1, Peter says, &quot;Reform and be immersed, every one of you, in the name of the Lord Jesus, for the remission of your sins, and you shall receive the gift of the Holy Spirit.&quot; Sermon 2, he says, &quot;Reform and be converted, that your sins may be blotted out; that seasons of refreshment from the presence of the Lord may come, and that he may send Jesus,&quot; etc. In the same discourse, he says,  &quot;God having raised up his Son Jesus, has sent him to bless you, every one of you, turning from his iniquities.&quot; In his 3d Sermon, recorded Acts 10:1-48 : he says, &quot;To him all the Prophets bear witness, that every one who believes in him shall receive remission of sins <em>by his name.</em>&quot; Paul at Antioch, in  Pisidia,  declares,  that  through  Jesus  was  proclaimed  the remission of sins; and by him all that believe are justified from all things. Ananias commanded Paul to arise and be immersed, and to wash away his sins, calling upon the name of the Lord. Thus it is spoken of in the acts of the Apostles.</p>
</li>
<li>
<p><em><strong>In the Epistles</strong>.</em> — The Romans are said to have been immersed into Christ Jesus — into his death; to have been buried with him, and consequently to have risen with him, and to walk in a new life. The Corinthians are said to have been washed, justified, and sanctified by the name of the Lord Jesus and by the Spirit of our God. The Galatians &quot;were immersed into Christ, and had put him on.&quot; The Ephesians were married to Christ, by immersion, as brides were wont to be washed in order to their nuptials. The assembly of the disciples, called <em>the congregation of the Lord,</em> making the bride of Christ, were said to be <em>cleansed</em> by <em>the bath of water</em> and <em>the word.</em> The Colossians were <em>buried with Christ, raised with him,</em> and are said to have been <em>forgiven all trespasses,</em> when they were raised with him, where their resurrection with Jesus and their having all sins forgiven are connected.61 All the saints are said to be saved by</p>
<p>immersion, or, &quot;the washing of regeneration and the renewing of the Holy Spirit.&quot;62 The believing Jews had their hearts sprinkled</p>
</li>
</ol>
<p>from an evil conscience, and their bodies washed with clean water, or water which made clean. Peter taught all the saints in Pontus, Galatia, Cappadocia, Asia, and Bithynia, that the water of baptism saved them, as water of the deluge saved Noah in the ark; and that in immersion a person was purged from all his former sins. And John  the  Apostle  represents  the  saved  as  having  &quot;washed  their robes and made them white in the blood of the Lamb,&quot; and all the baptized little children as &quot;having their sins forgiven.&quot; Such are the evidences found in the Epistles. How numerous! how clear! and how unequivocal! Are we not, then, warranted to say, Except a man be regenerated of water, and of the Spirit, he cannot enter into the Kingdom of God? and that all who, believing, are immersed for the remission of their sins, have the remission of their sins in and through immersion?</p>
<p>Conclusion ****</p>
<p>A word to the regenerated. — You have experienced the truth of the promise; and being introduced by that promise, you have become like Isaac, children of promise. You heard the testimony of God concerning Jesus of Nazareth, and you believed it. You were, in consequence of your faith, so disposed towards the person of Jesus, as to be willing to put yourselves under his guidance. This faith, and this will, brought you to the water. You were not ashamed, nor afraid  to  confess  him  before  men.  You  solemnly  declared  you regarded  him  as  God's  only  Son,  and  the  Savior  of  men.  You vowed allegiance to him. Down into the water you were led. Then the name of the Holy One upon your faith, and upon your person, was pronounced. You were then buried in the water under that name. It closed itself upon you. In its womb you were concealed. Into the Lord, as in the water, you were immersed. But in the water you continued not. Of it you were born, and from it you came forth,  raised  with  Jesus,  and  rising  in  his  strength.  There  your consciences were released; for there your old sins were washed away. And although you received not the gifts of the Holy Spirit, which confirmed the testimony of the first disciples, you felt the powers  of  the  world  to  come,  were  enlightened,  and  tasted  the bounty of God: for seasons of refreshment from the presence of God  came  upon  you.  Your  hearts  were  sprinkled  from  evil consciences,  when  your  bodies  were  washed  in  the  cleansing water. Then into the kingdom of Jesus you entered. The King of righteousness, of peace, and joy, extended his sceptre over you, and sanctified in state, and in your whole person, you rejoiced in the Lord with joy unspeakable and full of glory. Being washed, you  were  sanctified,  as  well  as  acquitted.  And  now  you  find yourselves under the great Advocate, so that sin cannot lord it over you; for you always look to the great Advocate to intercede for you; and thus, if sin should overtake you, you confess and forsake it, and always find mercy. Adopted thus into the family of God, you have not only received the name, the rank, and the dignity; but also the spirit of a son of God, and find, as such, that you are kings, priests, and heirs of God. You now feel that all things are yours, because  you  are  Christ's;  and  Christ  is  God's.  The  hope  of  the coming  regeneration  of  the  heavens  and  the  earth,  at  the resurrection  of  the  just,  animates  you.  You  look  for  the redemption, the adoption of your bodies, and their transfiguration. For  this  reason,  you  purify  yourselves  even  as  he  is  pure.  Be zealous, then, children of God; publish the excellencies of him, who has called you into this marvellous light and bliss. Be diligent, that you may receive the crown that never fades, and that you may eat of the tree of life, which grows in the midst of the Paradise of God.  If  you suffer  with  Jesus,  you  will reign  with  him.  If  you should  deny  him,  he  will  deny  you.  Add,  then,  to  your  faith, courage, knowledge, temperance, patience, brotherly kindness, and universal  benevolence;  for  if  you  continue  in  these  things  and abound, you shall not be barren nor unfruitful in the knowledge of our Lord and Savior Jesus Christ. But should you be deficient in these things, your light will be obscured, and a forgetfulness that you have been purified from your old sins, will come upon you. Do, then, brethren, labor to make your calling and election sure; for thus practising, you shall never fall; but shall have an easy and abundant entrance into the everlasting kingdom of our Lord and Savior Jesus Christ.</p>
<p>A word to the unregenerate. — Amongst you are sundry classes of character. Some of you who believe the gospel, and are changed in heart, quickened by the Spirit, are not generally ranked among the unregenerate. In the popular sense of this term you are regenerate. But we use it in its scriptural acceptation. Like Nicodemus, and like Joseph of Arimathea, you believe in Jesus, and are willing to take lessons from him in the chambers. You have confidence in his mission, respect and venerate, and even love his person; and would desire to be under his government. Marvel not that I say to you, <em>You must be born again.</em> Pious as you are supposed to be, and as you may think yourselves to be, unless you are born again, you cannot enter the Kingdom of God. Cornelius and his family were as devout and pious as any of you. &quot;He feared God, gave much alms to the people, and prayed to God continually.&quot; Yet, mark it well, I beseech you, it was necessary &quot;<em>to tell him words</em> by which himself and his  house <em>might  be saved.</em>&quot; These words were told him: he believed them, and received the Holy Spirit, yet still he must be born again. For a person cannot be said to be born again <em>of anything which he receives;</em> and still less of miraculous gifts of the Holy Spirit. He was immersed, and into the Kingdom of God he came. He was then saved. You need not ask, how or why these things are so. Do as Cornelius did, and then you will think of it in another light — then you would not for the world be unregenerate. To have the pledge, the promise, and seal of God, of the remission of all your sins, to be adopted into his family, and to receive the spirit of a son of God, be assured, my pious friends, are matters of no  every  day  occurrence;  and  when  you  feel  yourselves constitutionally  invested  with  all  these  blessings,  in  God's  own way,  you will say, that &quot;his ways are not as our ways, nor his thoughts as our thoughts; for as the heavens are higher than the earth, so are his ways higher than our ways, and his thoughts than our thoughts.&quot; It is hard to make a slave feel and act as a freeman. As difficult, we often find it, to make the unregenerate feel and know the value and importance of regeneration. But the regenerate would not be unregenerate for the universe.</p>
<p>God  has  one  way  of  bestowing  every  thing.  We  cannot  gather grapes off thorns, nor figs off thistles. The reason is, there they do not grow. We can tell no other reason why they cannot grow there, but that they do not grow there. We cannot have any blessing, but in God's own way of giving it. We cannot find wool save on the back of the sheep, nor silk save from the worm which spins it from itself. Corn and wheat cannot be obtained save from the plants which yield them. Without the plant, we cannot have the fruit. This is the economy of the whole material system. And in the world of spirits, and spiritual influences, is it not the same? Moral law is as unchangeable as the laws of nature. Moral means and ends are as inseparable as natural means and ends. God cannot bestow grace upon the proud, and cannot withhold it from the humble. He does not do it, and that is enough. He could shower down wheat and corn, and give us rivers of milk and wine, were it a question of mere  power.  But  taking  all  together,  his  wisdom,  power  and goodness, he cannot do it. So neither can he give us faith without testimony, hope without a promise, love without an amiable object, peace without purity, nor heaven without holiness. He cannot give to the unborn infant the light of the sun, the vivacity which the air imparts, nor the agility and activity which liberty bestows. He does not do it, and, therefore, we say, he cannot do it. Neither can he bestow the blessings of the Reign of Heaven upon those, who are the children of disobedience.</p>
<p>I know how reluctant men are to submit to God's government; and yet they must all bow to it at last. &quot;To Jesus every knee shall bow, and to him every tongue confess.&quot; But they will object to bowing <em>now,</em> and torture invention for excuses. They will tell me, all that I said is true of natural and moral means and ends; but immersion is not  a  moral  means,  because  God  forgave  sins  and  saved  men before immersion was appointed. &quot;It is a <em>positive,</em> and not a <em>moral</em> institution.&quot;  And  is  there  no  moral  influence  connected  with positive institutions? A  <em>written</em>  law is  a positive institution:  for moral law existed before written law. But because it has become a positive  institution,  has  its  moral  power  ceased?  <em>The  moral influence  of  all  positive  institutions  is  God's</em>  <strong>will</strong>  expressed  in them. And it matters not, whether it be the <em>eating</em> or <em>not eating</em> of an apple, the building of an altar, or the building it with, or without the aid of iron tools; the offering of a kid, a lamb, a bullock, or a pigeon:  it  is  just  as  morally  binding,  and  has  the  same  moral influence, as &quot;You shall honor your father and mother;&quot; or &quot;You shall not kill.&quot; It is <strong>the will of god</strong> in any institution, which gives it all its moral and physical power. No man could now be pardoned as Abel was — as Enoch was — as David was — as the thief upon the cross  was.  These  all  lived  before  the  <em>second</em>  will  of  God  was declared. He took away &quot;<em>the first will,</em>&quot; says Paul, &quot;that he might establish the <em>second will,</em>&quot; by which we are sanctified. We are not pardoned as were the Jews or the patriarchs. It was not till Jesus was buried and rose again, that an acceptable offering for sin was presented in the heavens. By one offering up of himself, he has perfected the conscience of the immersed or sanctified. Since his oblation, a new institution for remission has been appointed. You need  not  flatter  yourselves,  that  God  will  save  or  pardon  you except for Christ's sake; and if his name is not assumed by you, if you have not put him on, if you have not come under his advocacy, you have not the name of Christ to plead, nor his intercession on your  behalf — and  therefore,  for  Christ's  sake  you  cannot  be forgiven.  Could  Abel,  Enoch,  Noah,  Abraham,  Moses,  Aaron, think you, if living now — could they, I ask, find forgiveness as the altar? And will you imagine, that he, who honored every institution by  Moses,  by  connecting  rewards  and  punishments  with  the obedience or disobedience of his commands, be less jealous for the honor of the institution of his Son? And will that Son who for no other purpose than to honor his Father's institution, was immersed in the Jordan, bestow pardon or salvation upon any, who refuse to honor him, and him that sent him? He has been graciously pleased to  adapt  means  to  ends. He has  commanded immersion for the remission  of  sins;  and,  think  you,  that  he  will  change  his institutions, because of your stubborn or intractable dispositions? As well, as reasonably might you pray for loaves from heaven, or manna, because Israel ate it in the desert; as to pray for pardon, while you refuse the remission of sins by immersion.</p>
<p>Demur not because of the simplicity of the thing. Remember how simple was the eating of the fruit of that tree, &quot;whose mortal taste brought death into the world, and all our woe.&quot; How simple was the rod in the hand of Moses, when stretched over Egypt and the Red Sea? How simple was looking at the brazen serpent? And how simple  are  God's  institutions?  How  simple  the  aliments  of nature; — the poisons  too,  and their remedies? Where the  will of God is, there is omnipotence. It was simple to speak the universe into existence. But God's will gives efficacy to every thing. And obedience ever was, and ever will be the happiness of man. It is the happiness of heaven. It is God's philanthropy which has given us something  to  obey.  To  the  angels  who  sinned  he  has  given  no command.  It  was  gracious  to  give  us  a  command  to  live — a command to reform — a command to be born again — to live forever. Remember light and life first came by obedience. If God's voice had not been obeyed, the water would not have brought forth the earth,  nor  would  the  sun  have  blessed  it  with  his  rays.  The obedience of law was goodness and mercy; but the obedience of faith is favor, and life, and glory everlasting. None to whom this gospel is announced will perish, except those who know not God, and obey not the gospel of his Son. Kiss, then, the Son, lest he be angry, and you perish for ever.</p>
<p>To the unregenerate of all classes, whose education and prejudices compel them to assent to the testimony of Matthew, Mark, Luke, John, Paul, Peter, James, and Jude. — You own the mission of Jesus from the bosom of the Eternal — and that is <em>all</em> you do! Each of you is living without God, and without hope in the world — aliens from the family of God — of various ranks and grades among men; but all involved in one condemnation, because light  has come into the world, and you love darkness, and the works of darkness, rather than  light.  To  live  without  hope  is  bad  enough;  but  to  live  in constant dread of the vengeance of Heaven, is still worse. But do you not tremble at the word of God?</p>
<p>If you can be saved here, or hereafter, then there is no meaning in language,  no  pain  in  the  universe,  no  truth  in  God — death,  the grave, and destruction have no meaning. The frowns of Heaven are all smiles, if you perish not in your ways.</p>
<p>But you purpose to bow to Jesus, and to throw yourselves upon his mercy at last. Impious thought! When you have given the strength of your intellect, the vigor of your constitution, the warmth of your affections, the best energies of your life, to the world, the flesh and the devil; you will stretch out your palsied hands and turn your dim eyes to the Lord and say, &quot;Lord, have mercy upon me!&quot; The first fruits, and fatlings of the devil, the lame and the blind for God, is the purpose of your heart; and the best resolution you can form!</p>
<p>The thief upon the cross, had he done so, could not have found mercy. It is one thing to have known the way of salvation, assented to it, and to have in deliberate resolution rejected it for the present, with a promise of obeying it at some future period; and to have never known it, or assented to it, to the end of life. Promise not, then, to yourselves, what has never happened to others. The devil has always said, &quot;You may give <em>to morrow</em> to the Lord — only give to me <em>to-day.</em>&quot; This has been all that he has asked, and this is what you are disposed to give. Promise not <em>to-morrow</em> to the Lord, for you will be still less disposed to give it when it comes; and the Lord has not asked you for <em>to-morrow.</em> He says, <strong>to-day</strong>, when you shall hear his voice, harden not your hearts. But you say, you are willing to come to the Lord <em>to day</em> if you knew the way, or if you were  <em>prepared!</em>  Well,  what  does  the  Lord  require  of  you  as <em>preparation?</em> He once said, &quot;Let the wicked man forsake his ways, and the unrighteous man his thoughts; and let him turn to the Lord, and he will have mercy upon him; and to our God for he will abundantly pardon.&quot; He says also, &quot;Draw nigh to me, and I will draw nigh to you;&quot; &quot;Cleanse your hands, you sinners; and purify your hearts, you men of two souls;&quot; &quot;Wash you, make you clean; put away the evil of your doings;&quot; &quot;Reform and be converted;&quot; &quot;Turn to the Lord;&quot; &quot;Be immersed for the remission of your sins;&quot; and &quot;Submit to the government of Jesus.&quot; &quot;What! just as I am!&quot; Pray, how are you? Have you such a persuasion in your heart of the mission of Jesus, as God's own Son, and the only Savior; and have you so much confidence in his personal character, as to be willing to surrender yourself to him for the present and future — for time and eternity? &quot;I have,&quot; you say. As one that has heard his voice,  I  say,  then,  Come  and  be  regenerated,  and  seasons  of refreshment from the Lord will come to you.</p>
<p>&quot;But I thought I ought to feel like a Christian first, and to have the experience of a Christian before I came to the Lord.&quot; Indeed! Did the  Lord  tell  you  so?  &quot;His  ministers  taught  me  so.&quot;  It  is  hard knowing  who  are  his  ministers  now-a-days.  His  <em>commissioned</em> ministers taught you not so. They were not taught to say so. The Master  knew  that  to  wait  for  health  before  we  went  to  the physician — to seek for warmth before we approached the fire — to wait  till  we  ceased  to  be  hungry  before  we  approached  the table — was  not  reasonable.  And  therefore  he  never  asked,  as  he never  expected,  any  one  to  feel  like  a  Christian  before  he  was immersed and began to live like a Christian. None but the citizens of any country can experience the good or evil of the government which presides over it. None but the married can experience the conjugal relation and feelings. None but sons and daughters can have the experience of sons and daughters; and none but those who obey the gospel can experience the sweets of obedience. I need not add, that none but the disobedient can experience the pains, the fears, and terrors of the Lord — the shame and remorse which are the first fruits of the anguish and misery, which await them in another world. As the disobedient, who stumble at the word, have the first fruits of the awful destruction from the presence of the Lord which awaits  them;  so  the  disobedient  have  the  first  fruits  of  the Spirit — the salvation of their souls, as an earnest of the salvation to be revealed at the coming of the Lord.</p>
<p>And now let me ask all the unregenerate, What do you propose to yourselves by either delaying or refusing to come to the Lord? Will delaying  have  any  tendency  to  fit  you  or  prepare  you  for  his salvation?  Will  your  lusts  have  less  power,  or  sin  have  less dominion  over  you,  by  continuing  under  their  control?  Has  the intoxicating cup, by indulgence, diminished a taste for it? Has the avarice of the miser been weakened, or cured, by yielding to it? Has any propensity been destroyed by gratifying it, in any other way  than  as  it  destroyed  the  animal  system?  Can  you,  then, promise yourselves that, by continuing in disobedience, you will love obedience, and be more inclined to submit when you have longer resisted the Spirit of God! Presume not on the mercy of God, but in the way that mercy flows. Grace has its channels, as the waters have their courses; and its path, as the lightning of the clouds. Each has its law, as fixed as the throne of God; and think not God will work a miracle for your salvation.</p>
<p>Think you that the family of Noah could have been saved, if they had refused to enter into the Ark? Could the first born of Israel have escaped the destroying angel, but in houses sprinkled with blood? or could Israel have escaped the wrath of Pharaoh, but by being immersed into Moses in the cloud and in the sea? These things  are  written  for  our  admonition,  upon  whom  the consummation  of  past  ages  has  come.  Arise,  then,  and  be immersed and wash away your sins, calling upon the name of the Lord. The <em>many</em> <em>who refuse grace</em> will neither prove you wise nor safe in disobedience.</p>
<ul>
<li>Multitudes are no mark</li>
</ul>
<p><code></code>That you will right be found;    A few were saved in the Ark,    For many millions drown'd.    Obey the gospel call,</p>
<p><code></code>And enter while you may;</p>
<p><code></code>Christ's flock have long been small,    Yet none are safe but they.&quot;</p>
<p><em><strong>Effects of Modern Christianity63</strong></em></p>
<p>Our greatest objection to the systems which we oppose, is their impotency  on  the  heart.  Alas!  what  multitudes  of  prayerless, saintless, Christless, joyless hearts, have crowded Christianity out of the congregations  by their experiences before baptism! They seem to have had all their religion before they professed it. They can  relate  no  experience  since  baptism,  comparable  to  that professed before the &quot;mutual pledge&quot; was tendered and received.</p>
<p>It was the indubitable proofs of the superabundance of this fruit, which caused me first to suspect the far-famed tree of evangelical orthodoxy.  That  cold-heartedness — that  stiff  and  mercenary formality — that tithing of mint, anise, and dill — that negligence of mercy, justice, truth, and the love of God, which stalked through the communions of sectarian altars — that apathy and indifference about  &quot;<em>thus  saith  the  Lord</em>&quot; — that  zeal  for  human prescriptions — and, above all, that willing ignorance of the sayings and doings of Jesus Christ and his apostles, which so generally appeared, first of all created, fostered, and matured my distrust in the reformed systems of evangelical sectaries. Communion, with me, was communion of kindred souls, immersed into one God, that celestial magnet which turns our aspirations and adorations to him who washed us from our sins in his own blood, and made us kings and priests to God.</p>
<p>To sit in the same pew; to gather round the same pulpit; to put our names to the same covenant, or subscription list: to contribute for a weekly sermon; to lisp the same opinions, extracted from the same creed,  always  appeared  to  me  unworthy  bonds  of  union  or communion, and therefore my soul abhorred them as substitutes for the love of God shed abroad in the heart, for the communion of the Holy Spirit. &quot;If a man would give all the substance of his house as a substitute for love, it should be utterly contemned.&quot;</p>
<p>The  Divine  Philosopher  preached  reformation  by  addressing himself  to  the  <em>heart.</em>  We  begin  with  the  heart.  &quot;Make  the  tree good,&quot; and then good fruit may be expected. But this appears to be the error of all sects in a greater or less degree; they set about <em>mending</em> the heart, as preliminary to that which alone can <em>create a new  heart.</em>  Jesus  gives  us  the  philosophy  of  his  scheme  in  an address to a sinner of that time — &quot;Your sins,&quot; says he, &quot;are forgiven you: go, and sin no more.&quot; He first changes the sinner's state, not external but internal, and then says, &quot;<em>Go, and sin no more.</em>&quot; He frankly forgave the debt. The sinner loved him.</p>
<p>There  was  much  of  this  philosophy  in  question,  &quot;<em>Who  loves most</em> — he  that  was  forgiven  five  hundred  pence,  or  he  that  was forgiven fifty? How much does he love who is not forgiven at all?&quot; Aye, that question brings us onward a little to the reason why the first act of obedience to Jesus Christ should be baptism into his name, and that for the remission of sins.</p>
<p>But now we speak of the exercises of the heart. While any man believes the words of Jesus, &quot;Out of the heart proceed the actions which defile the man,&quot; he can never lose sight of the heart, as the object on which all evangelical arguments are to terminate, and as the <em>fons et principium,</em> the fountain and origin, of all piety and humanity.</p>
<p>Once for all, let it be distinctly noted, that we appreciate nothing in religion which tends not directly and immediately, proximately and remotely, to the purification and perfection of the heart. Paul acts the philosopher fully once, and, if we recollect right, but once, in all his writings upon this subject. It has been for many years a favorite topic with me. It is in his first epistle to Timothy — &quot;Now the end of the commandment is love out of a pure heart — out of a good conscience — out of faith unfeigned.&quot; Faith unfeigned brings a person to remission, or to a good conscience; a good conscience precedes, in the order of nature, a pure heart; and that is the only soil in which love, that plant of celestial origin, can grow. This is our philosophy of Christianity — of the gospel. And thus it is the wisdom and power of God to salvation. We proceed upon these as our  axiomata  in  all  our  reasonings,  preachings,  writings — 1st. unfeigned faith; 2d. a good conscience; 3d. a pure heart; 4th. love. The  testimony  of  God,  apprehended,  produces  unfeigned  or genuine  faith;  faith  obeyed,  produces  a  good  conscience.  This Peter  defines  to  be  the  use  of  baptism,  the  answer  of  a  good conscience.  This  produces  a  pure  heart,  and  then  the consummation is love — love to God and man.</p>
<p>Paul's  order  or  arrangement  is  adopted  by  us  as  infallible. Testimony — faith  unfeigned — remission,  or  a  good  conscience — a pure  heart — love.  Preaching,  praying,  singing,  commemorating, meditating, all issue here. &quot;Happy the pure in heart, for they shall see God.&quot;</p>
<p><em><strong>Immersion Not a Mere Bodily Act</strong></em></p>
<p>Views of baptism, as a mere external and bodily act, exact a very injurious  influence  on  the  understanding  and  practice  of  men. Hence,  many  ascribe  to  it  so  little  importance  in  the  Christian economy. &quot;Bodily exercise,&quot; says Paul, &quot;profits little.&quot; We have been taught to regard immersion in water, into the name of the Father,  the  Son,  and  the  Holy  Spirit,  as  an  act  of  the  whole man; — body, soul, and Spirit. The soul of the intelligent subject is as fully immersed <em>into the Lord Jesus,</em> as his body is immersed <em>in the water.</em> His soul rises with the Lord Jesus, as his body rises out of the water; and into one spirit with all the family of God is he immersed.  It  is  not  like  circumcising  a  Hebrew  infant  or proselyting to Moses a Gentile adult. — The candidate believing in the person, mission, and character of the Son of God, and willing to submit to him, immediately, upon recognizing him, hastens to be buried with the Lord, and to rise with him, not corporeally but spiritually, with his whole soul.</p>
<p>Reader, be admonished how you speak of bodily acts in obedience to divine institutions. Remember Eve, Adam, and all transgressors on the one hand. Remember Abel, Noah, Enoch, Moses, Abraham, down to the harlot Rahab, on the other; and be cautious how you speak of bodily acts! Rather remember the sacrifice of a body on mount Calvary, and talk not lightly of bodily acts. There is no such things as outward bodily acts in the Christian institution; and less than in all others, in the act of immersion. Then it is that the spirit, soul, and body of man become one with the Lord. Then it is that the power of Father, Son, and Holy Spirit, come upon us. Then it is that we are enrolled among the children of God, and enter the ark, which will, if we abide in it, transport us to the Mount of God.</p>
<p><em><strong>Justification Ascribed to Seven Causes</strong></em></p>
<p>In examining the New Testament, we find that a man is said to be &quot;<em><strong>justified  by  faith</strong>,</em>&quot;  Rom.  5:1;  Gal.  2:16;  Gal.  3:24.  &quot;<em><strong>Justified freely  by  his  grace</strong>,</em>&quot;  Rom.  3:24;  Titus  3:7.  &quot;<em><strong>Justified  by  his blood</strong>,</em>&quot;  Rom.  5:9.  &quot;<em><strong>Justified  by  works</strong>,</em>&quot;  James  2:21;  James 2:24-25. &quot;***Justified in or by the name of the Lord Jesus,***&quot; 1 Cor. 6:11. &quot;<em><strong>Justified by Christ</strong>,</em>&quot; Gal. 2:16. &quot;<em><strong>Justified by knowledge</strong>,</em>&quot; Is. 53:11. &quot;It is God that justifies,&quot; Rom. 8:33, viz: by these <em>seven</em> means — by Christ, his name, his blood, by knowledge, grace, faith, and  by  works.  Are  these  all  literal?  Is  there  no  room  for interpretation here? He that selects <em>faith</em> out of <em>seven</em> must either act arbitrarily or show his reason; but the reason does not appear in the text. He must reason it out; he must infer it. Why, then, assume that faith <em>alone</em> is the reason of our justification? Why not assume that the <em>name</em> of the Lord alone is the great matter, seeing his name &quot;is the only name given under heaven by which any man can be saved;&quot; and men &quot;who believe receive <em>the remission of sins by his name:</em>&quot;64 and especially, because the name of Jesus, or of the Lord, is more frequently mentioned in the New Testament, in reference to all spiritual blessings, than anything else!! Call all these <em>causes,</em> or <em>means</em> of justification, and what then? We have the grace of God as the <em>moving</em> cause, Jesus Christ for the <em>efficient</em> cause, his blood  the  <em>procuring</em>  cause,  knowledge  the  <em>disposing</em>  cause,  the name of the Lord the <em>immediate</em> cause, faith the <em>formal</em> cause, and works for the <em>concurring</em> cause. For example: a gentleman on the sea shore descries the wreck of a vessel at some distance from land, driving out into the ocean, and covered with a miserable and perishing  sea-drenched  crew.  Moved  by  pure  philanthropy,  he sends his son in a boat to save them. When the boat arrives at the wreck, he invites them in, unto this condition, that they submit to his guidance. A number of the crew stretch out their arms, and seizing the boat with their hands, spring into it, take hold of the oars, and row to  land, while some, from  cowardice, and others because  of  some  difficulty  in  coming  at  the  boat,  wait  the expectation of a second trip; but before it is returned, the wreck went to pieces, and they all perished. The <em>moving</em> cause of their salvation who escaped was the good will of the gentleman on the shore; the son who took the boat, was the <em>efficient</em> cause; the boat itself,  the  <em>procuring</em>  cause;  the  knowledge  of  their  perishing condition and his invitation, the <em>disposing</em> cause; the seizing the boat with their hands, and springing into it, the <em>immediate</em> cause; their  consenting  to  his  condition,  the  <em>formal</em>  cause;  and  their rowing to shore, under the guidance of his son, was the <em>concurring</em> cause of their salvation. — Thus men are justified or saved by grace, by Christ, by his blood, by faith, by knowledge, by the name of the Lord, and by works. But of the <em>seven</em> causes, <em>three</em> of which are purely  instrumental,  why  choose  <em>one</em>  of  the  instrumental,  and emphasize  upon  it  as  the  justifying  or  saving  cause,  to  the exclusion of, or in preference to, the others? Every one in its own place is essentially necessary.</p>
<p>If we examine the word <em>saved</em> in the New Testament, we shall find that we are said to be saved by as many causes, though some of them differently denominated, as those by which we are said to be justified. Let us see: we are said to be &quot;saved by grace,&quot; Eph. 2:5; &quot;saved through his life,&quot; Rom. 5:9-10; &quot;saved through faith,&quot; Eph. 2:8, Acts 16:31; &quot;saved by baptism,&quot; 1 Peter 3:21; or &quot;by faith and baptism,&quot;  Mark  16:16;  or  &quot;by  the  washing  of  regeneration  and renewal of the Holy Spirit,&quot; Titus 3:5; or &quot;by the gospel,&quot; 1 Cor. 15:2; or &quot;by calling upon the Lord,&quot; and by &quot;enduring to the end,&quot; Acts  2:21,  Rom.  10:13,  Matt.  10:22.  Here  we  have  salvation ascribed  to  grace,  to  Jesus  Christ,  to  his  death  and resurrection — <em>three</em>  times  to  baptism,  either  by  itself  or  in conjunction,  once  with  faith,  and  once  with  the  Holy  Spirit;  to works, or to calling upon the Lord, or to enduring to the end. To these we might add other phrases nearly similar, but these include all the causes to which we have just now alluded. Saved by grace the <em>moving</em> cause; by Jesus the <em>efficient</em> cause; by his death, and resurrection,  and  life,  the  <em>procuring</em>  cause;  by  the  gospel,  the <em>disposing</em>  cause;  by  faith,  the  <em>formal</em>  cause;  by  baptism,  the <em>immediate</em> cause; and by enduring to the end, or persevering in the Lord, the <em>concurring</em> cause.</p>
<p><em><strong>Peter in Jerusalem, Paul in Philippi, Reconciled</strong></em></p>
<p>Thousands  ask  Peter,  <em>What  shall  we  do?</em>  The  Jailor  asks  Paul, <em>What shall I do?</em> <strong>to be saved</strong>, if the reader pleases. Peter says, Reform,  and  be  baptized  every  one  of  you,  etc.  Paul  answers, &quot;Believe in the Lord Jesus Christ, and thou shalt be saved, with thy family.&quot; How is this, Paul and Peter? Why do you not preach the same gospel, and answer the same question in the same or similar terms? Paul, do you preach another gospel to the Gentiles, than Peter  preached  to  the  Jews?  What  sayest  thou,  Paul?  Paul replies — &quot;Strike, but hear me. Had I been in Jerusalem on the day of Pentecost,  I would have spoken as Peter did. Peter spoke to believing and penitent Jews; I spoke to an ignorant Roman jailor. I arrested his attention after the earthquake, by simply announcing that there was salvation to him and all his family, through belief in Jesus.&quot; — But  why  did  you  not  mention  repentance,  baptism,  the Holy Spirit? &quot;Who told you I did not?&quot; Luke adds nothing about it; and I concluded you said nothing about them. — Luke was a faithful historian, was he not? &quot;Yes, very faithful: and why did you not faithfully hearken to his account? Does he not immediately subjoin that as soon as I got the jailor's ear, I <em>spoke the word of the Lord to him, and to all that were in his house?</em>&quot; Why you reason like a Paidobaptist.  You  think,  do  you,  that  the  jailor's  children  were saved by his faith! I spoke the whole gospel, or word of the Lord to the jailor and to his family. In speaking <em>the word of the Lord,</em> I mentioned  repentance,  baptism,  remission,  the  Holy  Spirit,  the resurrection, judgment, and eternal life: else why should I have baptized him and all his house; and why should he have rejoiced afterwards with all his family!&quot; Paul, I beg your pardon. I will not interrogate Peter, for I know how he will answer me: he would say — &quot;Had I been in Philippi, I would have spoken to an ignorant Pagan as Paul did, to show that salvation flowed through faith in Jesus; and when he believed this and repented, I would <em>then</em> have said, Be baptized for the remission of your sins.&quot;</p>
<p>1 The reformer also said: &quot; If the article of justification be once lost, then is all true Christian doctrine lost.&quot; Preface to the Ep. Gal, Phil, ed. 1800.</p>
<p>2 1 Jn 2:12.</p>
<p>3 Heb. 10:17.</p>
<p>4 Heb. 10:18.</p>
<p>5 Eph. 4:32.</p>
<p>6 Eph. 1:7.</p>
<p>7 Col. 1:14.</p>
<p>8 1 Co 6:11.</p>
<p>9 1 Pe 1:22.</p>
<p>10 Rom. 5:1.</p>
<p>11 Rom. 3:24.</p>
<p>12 Rom. 5:9.</p>
<p>13 1 Co 6:11.</p>
<p>14 James 2:24.</p>
<p>15 Rom. 8:33.</p>
<p>16 1 Co 6:11.</p>
<p>17 Rom. 5:10.</p>
<p>18 2 Co 5:18.</p>
<p>19 Col. 1:19-22.</p>
<p>20 Gal. 4:6.</p>
<p>21 Eph. 1:5.</p>
<p>22 Acts 2:47.</p>
<p>23 1 Co 1:18.</p>
<p>24 1 Co 15:2.</p>
<p>25 1 Pe 3:21.</p>
<p>26 1 Pe 1:1; 1 Pe 1:8-9.</p>
<p>27 To prevent mistakes, I shall here transcribe a part of a note found in the Appendix to the second edition of the <em>new version</em> of the Christian Scriptures, p. 452.</p>
<ul>
<li>I  am  not  desirous  of  diminishing  the  difference  of  meaning  between</li>
</ul>
<p>immersing a person <em>in the name</em> of the Father, and <em>into the name</em> of the Father. They are quite different ideas. But it will be asked, Is this a correct translation? To which I answer most undoubtedly it is. For the preposition <em>eis</em> is that used in this place, and not <em>en.</em> By what <em>inadvertency</em> the king's translators gave it <em>in</em> instead of <em>into</em> in this passage, and elsewhere gave it <em>into</em> when speaking of the same ordinance, I presume not to say. But they have been followed by most modern translators, and with them they translate it <em>into</em> in other places where it occurs, in relation <em>to this</em> <em>institution:</em> For example: — 1 Co 12:13. For by one spirit we are all immersed <em>into</em> one body; Rom. 6:3. Don't you know that so many of you as were immersed <em>into</em> Christ, were immersed <em>into</em> his death? Gal. 3:27. As many of you as have been immersed <em>into</em> Christ, have put on Christ. Now, for the same reason they ought to have rendered the following passages the same way. Acts 8:16. Only they were immersed <em>into</em> the name of the Lord Jesus. 19: 3. <em>Into</em> what name were you then immersed? When they heard this, they were immersed <em>into</em> the name of the Lord Jesus. 1 Co 1:13. Were you immersed <em>into</em> the name of Paul? Lest any should say I had immersed <em>into</em> my own name. 1 Co 10:1. Our fathers were all immersed <em>into</em> Moses in the cloud and in the sea. Now in all these places it is <em>eis</em> and <em>en</em> is clearly marked in the last quotation. They were immersed <em>into</em> Moses — not <em>into</em> the cloud, and <em>into</em> the sea, but <em>in</em> the cloud and <em>in</em> the sea. To be immersed <em>into</em> Moses is one thing, and <em>in</em> the sea is another. To be immersed <em>into</em> the name of Father, and <em>in</em> the name of the Father, are just as distinct. &quot; <em>In the name</em>&quot; is equivalent to, &quot;<em>by the authority of.</em>&quot; In the name of the king, or commonwealth, is by the authority of the king or commonwealth. Now the question is, Did the Savior mean that the disciples were to be immersed by the authority of the Father, Son, and Holy Spirit? If by the authority of the Father, for what purpose were they immersed? The authority by which any action is done is one thing, and the object for which it is done is another. Now who that can discriminate, can think that it is one and the same thing to be immersed <em>in</em> the name of the Lord, and to  be  immersed  <em>into</em>  the  name  of  the  Lord  Jesus.  The  former  denotes  the authority by which the action is performed — the latter the object for which it is performed.  Persons  are  said  to  enter  <em>into</em>  matrimony,  to  enter  <em>into</em>  and alliance, to get <em>into</em> debt, to run <em>into</em> danger. Now to be immersed <em>into</em> the name of the Lord Jesus was a form of speech, in ancient usage, as familiar and significant as any of the preceding. And when we analyze these expression, we find  they  all  import  that  the  persons  are  either  under  the  obligations  or influence of those things into which they are said to enter, or into which they are  introduced.  Hence  those  immersed  into  one  body,  were  under  the influences and obligations of that body. Those immersed into Moses, assumed Moses as their lawgiver, guide, and protector, and risked every thing upon his authority,  wisdom,  power,  and  goodness.  Those  who  were  immersed  into Christ  put  him  on,  and  acknowledged  his  authority  and  laws,  and  were governed  by  his  will:  and  those  who  were  immersed  into  the  name  of  the Father,  Son,  and  Holy  Spirit,  regarded  the  Father  as  the  fountain  of  all authority — the Son as the only Savior — and the Holy Spirit as the only advocate</p>
<p>28 <em>State</em> here has respect to the whole person. It may be argued that state is as pertinently applied to the mind or heart as to the whole person; and that when the state of the mind is changed by a belief of God's testimony, the subject of that change is brought into as near a relation to God as he can be in this life; and as the kingdom of Jesus is a spiritual kingdom, he is as fit for admission into it, and for the enjoyment of its blessings, whenever his heart is changed from enmity to love, as he ever can be; nay, in truth, is actually initiated into the kingdom of Jesus the moment his mind is changed — and that to insist upon any personal act as necessary to admission, because  such acts are necessary to admission  into  all  the  social  and  political  relations  in  society,  is  an over-straining the analogies between things earthly and things heavenly. Not one  of  our  opponents,  as  far  as  we  remember,  has  thus  argued.  We  have sometimes thought that they might have thus argued with incomparably more speciosity than appears in any of their objections.</p>
<p><code></code>But without pausing to inquire whether the state of the heart can be perfectly changed  from  enmity  to  love,  without  an  assurance  of  remission  on  some ground,  or  in  consequence  of  some  <em>act  of  the  mind</em>  prerequisite thereunto; — without being at pains to show that the truth of this proposition is not at all essential to our argument, but only <em>illustrative</em> of it; we may say, that as Christ has redeemed the whole man, body, soul, and spirit, by his obedience even to death — so in coming into his kingdom on earth, and in order to the <em>enjoyment</em> of all the present salvation, the <em>state of the whole person</em> must be changed; and this is what we apprehend Jesus meant by his saying, &quot; Unless a <em>man</em> is born of <em>water and spirit</em>, he cannot enter into the Kingdom of God,&quot; and what we mean in distinguishing a change of heart, or of views and feelings, from a change of state.</p>
<p>29 2 Th 1:8.</p>
<p>30 Rom. 1:5.</p>
<p>31 Rom. 16:26.</p>
<p>32 Acts 6:7.</p>
<p>33 Rom. 10:16.</p>
<p>34 1 Pe 4:17.</p>
<p>35 Rom. 5:2. Eph. 3:12.</p>
<p>36  There  is  no  propriety  in  the  common  version  of  this  member  of  the sentence — <em>when,</em>  instead  of  <em>that,</em>  &quot;seasons  of  refreshment.&quot;  Some  make modern <em>revivals</em> &quot;seasons of refreshment,&quot; such as these here alluded to. Then it would read, ' That your sins may be blotted out in times of revivals' — when revivals shall come! The term is <em>opos,</em> which, in this construction, as various critics  have  contended,  is  equivalent  to  '<em>that</em>'  in  our  tongue.  To  promise  a future remission is no part of the gospel, nor of the apostolic proclamation. All Christians experience seasons of refreshment in cordially obeying the gospel.</p>
<p>37 Acts 15:3.</p>
<p>38 Acts 9:1-43 :</p>
<p>39 Acts 26:17-18.</p>
<p>40 The following examples of the above general rule illustrate its value and certainty: — &quot; Let us offer up the sacrifice of praise to God, <em>confessing</em> to his name.&quot;  Heb.  13:15.  &quot;  Let  us  go  forth  to  him  out  of  the  camp,  <em>bearing</em>  his reproach.&quot; Heb. 13:13. &quot; Be an approved workman, <em>rightly</em> dividing the word of truth.&quot; 2 Tim. 2:15. &quot; Guard the precious deposit, <em>avoiding</em> profane babblings.&quot; 1  Tim.  6:20.  &quot;  Observe  these  things  without  prejudice,  <em>doing</em>  nothing  by partiality.&quot; 1 Tim. 5:21. &quot; Pray every where <em>lifting</em> up holy hands.&quot; 1 Tim. 2:8. &quot; Walking in wisdom to them that are without, <em>gaining</em> time.&quot; Col. iv: 5. &quot; Do all in the name of the Lord Jesus, <em>giving</em> thanks to God.&quot; Col. 3:17. &quot; Speak the truth, <em>putting</em> away lying.&quot; Eph. 4:25. &quot; Be not vainglorious, <em>provoking</em> one another. Gal. 5:26. &quot; Convert the nations, <em>baptizing</em> them,&quot; etc. etc. Now, do not all these participles define their respective imperatives, or show the way and manner in which this command should be obeyed! Many similar examples may be found in all the sacred writings.</p>
<p><code></code>This  rule  has  passed  through  a  fiery  trial.  I  have  only  been  more  fully convinced of its generality and value. There is no rule in the English syntax more general in its application. I would only add, that the participle does not always express every thing in the command; but it always points out something emphatically  in  the  intention  of  the  imperative,  and  without  which  the injunction cannot be suitably and fully performed.</p>
<p><code></code>We  have,  however,  no  need  of  this  rule,  nor  of  anything  not  generally conceded,  to  establish  the  point  before  us:  for  the  New  Testament  and  all antiquity teach, that so long as the Apostles lived, no one was regarded as a disciple of Christ who had not confessed his faith and was immersed.</p>
<p>41 Titus 3:5.</p>
<p>42 See the following essay on Regeneration.</p>
<p>43 That John 3:5, and Titus 3:5, refer to immersion, is the judgment of all the learned Catholics and Protestants of every name under heaven.</p>
<p><code></code>The  authors  and  finishers  of  the  Westminster  creed — one  hundred  and twenty-one Divines, ten Lords, and twenty Commissioners of the Parliament of England, under the question 165, &quot; <em>What is baptism?</em>&quot; quote John 3:5, Titus 3:5, to prove that baptism is a washing with water, and a &quot;<em>sign of remission of sins.</em>&quot;    Michaelis, Horne, Lightfoot, Beveridge, Taylor, Jones of Nayland, Bp. Mant, Whitby, Burkit, Bp. Hall, Dr. Wells, Hooker, Dr. C. Ridley, Bp. Ryder: — but why attempt a list of great names? There are a thousand more who assert it.</p>
<p><code></code>Bp. White says, that &quot;regeneration, as detached from baptism, never entered into any creed before the 17th century.&quot;</p>
<p><code></code>Whitby,  on  John  3:5,  says,  &quot;  That  our  Lord  here  speaks  of  baptismal regeneration, <em>the whole Christian church</em> from its <em>earliest times</em> has <em>invariably taught.</em>&quot;</p>
<p><code></code>Our modern &quot;great divines,&quot; even in America, have taught the same. Timothy Dwight, the greatest Rabbi of Presbyterians the New World has produced, says, vol. 4: pp. 300, 301, &quot;<em>to be born again,</em> is precisely the same thing as to be born of water and the Spirit.&quot; — &quot; To be born of water is to be baptized.&quot; And how uncharitable! —  He adds, &quot; He who understanding the nature and authority of this institution, refuses to be baptized, WILL NEVER ENTER INTO THE VISIBLE NOR INVISIBLE KINGDOM OF GOD.&quot; Vol. 4: p. 302. So preached the President of Yale.</p>
<p><code></code>George Whitefield, writing on John 3:5, says, &quot; Does not this verse urge the <em>absolute necessity of water baptism? Yes,</em> when it may be had. But how God will deal with persons unbaptized, <em>we cannot tell.</em>&quot; Vol. 4: p. 355. I say with him, <em>we cannot tell with certainty.</em> But I am of the opinion, that when a neglect proceeds  from  a  simple  mistake  of  sheer  ignorance,  and  when  there  is  no aversion, but a will to do everything the Lord commands, the Lord will admit into the everlasting kingdom those who by reason of this mistake never had the testimony  of  God  assuring  them  of  pardon  or  justification  here,  and consequently never did fully enjoy the salvation of God on earth. But I will say with the renowned President of Yale, that &quot;he who, understanding the nature and authority of this institution, refuses to be baptized, will never enter the visible nor invisible kingdom of God.&quot; By the &quot;visible and invisible kingdom,&quot; he means the kingdom of grace and glory. He adds on the same page, &quot; He who persists in this act of rebellion against the authority of Christ, will never belong to his kingdom.&quot; Vol. 4: p. 302.</p>
<p><code></code>John Wesley asserts, that by baptism we enter into <em>covenant with God,</em> an everlasting covenant, are admitted into the church, made members of Christ, made the children of God. By <em>water</em> as the <em>means,</em> the waters of baptism, we are regenerated or born again.&quot;</p>
<p>44 John 1:12.</p>
<p>45 Acts 2:1-47 :</p>
<p>46 Acts 15:17.</p>
<p>47 See Christian Baptist, vol. 6, p. 268.</p>
<p>48 Heb. 10:24.</p>
<p>49 2 Pe 1:9.</p>
<p>50 Book of Similitudes, chap. 16:</p>
<p>51 Com. 4, chap. 3:</p>
<p>52 4th London edition, p. 116, vol. 1, A. D. 1829.</p>
<p>53 Vol. 1, p. 24.</p>
<p>54 Vol. 1, p. 8.</p>
<p>55 Page 194.</p>
<p>56 Common Prayer, p. 165.</p>
<p>57 Page 165.</p>
<p>58 Inst. 50: 4, 115: p. 327.</p>
<p>59 Vitringa, tom. 1. 50. 2: 100: 6. 9.</p>
<p>60 Owen on Justification, 100: 2: p. 183.</p>
<p>61 Col. 2:11; Col. 2:13-14.</p>
<p>62 Titus 3:5.</p>
<p>63 A second Essay, called the &quot; <em>Extra Defended,</em>&quot; on this same subject, in reply to  a  pamphlet  from  Elder  Andrew  Broaddus,  of  Virginia,  titled  the  &quot;  Extra Examined,&quot; appeared in October, 1831. From our Defence, we here insert only four extracts. The subject as defended, being fully expressed in the preceding essay.</p>
<p>64 Acts 10:43.</p>
</ContentSlotsDistributor>
"},null]}